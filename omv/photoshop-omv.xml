<?xml version="1.0" encoding="utf-8"?>
<dictionary xsi:schemaLocation="http://schema.adobe.com/omv/1.0/omv.xsd omv.xsd" xmlns="http://schema.adobe.com/omv/1.0/omv.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <map title="Adobe Photoshop CC 2015.5 Object Library" time="Mon May 9 10:38:15 PDT 2016">
    <topicref navtitle="Suite that applies to all applications">
      <topicref navtitle="BitsPerChannelType" href="#/BitsPerChannelType" />
      <topicref navtitle="Application" href="#/Application" />
      <topicref navtitle="Document" href="#/Document" />
    </topicref>
    <topicref navtitle="Scripting commands and classes for Adobe Photoshop">
      <topicref navtitle="OpenDocumentType" href="#/OpenDocumentType" />
      <topicref navtitle="SaveDocumentType" href="#/SaveDocumentType" />
      <topicref navtitle="SaveOptionsType" href="#/SaveOptionsType" />
      <topicref navtitle="DialogModes" href="#/DialogModes" />
      <topicref navtitle="DocPositionStyle" href="#/DocPositionStyle" />
      <topicref navtitle="PrintColorHandling" href="#/PrintColorHandling" />
      <topicref navtitle="DocumentMode" href="#/DocumentMode" />
      <topicref navtitle="ChangeMode" href="#/ChangeMode" />
      <topicref navtitle="ColorProfileType" href="#/ColorProfileType" />
      <topicref navtitle="DocumentFill" href="#/DocumentFill" />
      <topicref navtitle="Urgency" href="#/Urgency" />
      <topicref navtitle="Orientation" href="#/Orientation" />
      <topicref navtitle="Intent" href="#/Intent" />
      <topicref navtitle="Direction" href="#/Direction" />
      <topicref navtitle="PurgeTarget" href="#/PurgeTarget" />
      <topicref navtitle="AnchorPosition" href="#/AnchorPosition" />
      <topicref navtitle="ResampleMethod" href="#/ResampleMethod" />
      <topicref navtitle="OperatingSystem" href="#/OperatingSystem" />
      <topicref navtitle="ForcedColors" href="#/ForcedColors" />
      <topicref navtitle="PaletteType" href="#/PaletteType" />
      <topicref navtitle="DitherType" href="#/DitherType" />
      <topicref navtitle="MacPreviewType" href="#/MacPreviewType" />
      <topicref navtitle="SaveEncoding" href="#/SaveEncoding" />
      <topicref navtitle="FormatOptionsType" href="#/FormatOptionsType" />
      <topicref navtitle="PDFEncodingType" href="#/PDFEncodingType" />
      <topicref navtitle="PDFStandardType" href="#/PDFStandardType" />
      <topicref navtitle="PDFCompatibilityType" href="#/PDFCompatibilityType" />
      <topicref navtitle="PDFResampleType" href="#/PDFResampleType" />
      <topicref navtitle="PICTCompression" href="#/PICTCompression" />
      <topicref navtitle="MacExtensionType" href="#/MacExtensionType" />
      <topicref navtitle="TiffEncodingType" href="#/TiffEncodingType" />
      <topicref navtitle="LayerCompressionType" href="#/LayerCompressionType" />
      <topicref navtitle="ByteOrderType" href="#/ByteOrderType" />
      <topicref navtitle="DCSType" href="#/DCSType" />
      <topicref navtitle="TrimType" href="#/TrimType" />
      <topicref navtitle="ColorPicker" href="#/ColorPicker" />
      <topicref navtitle="ResetTarget" href="#/ResetTarget" />
      <topicref navtitle="SaveBehavior" href="#/SaveBehavior" />
      <topicref navtitle="PaintingCursors" href="#/PaintingCursors" />
      <topicref navtitle="OtherPaintingCursors" href="#/OtherPaintingCursors" />
      <topicref navtitle="GridSize" href="#/GridSize" />
      <topicref navtitle="Units" href="#/Units" />
      <topicref navtitle="TypeUnits" href="#/TypeUnits" />
      <topicref navtitle="PointType" href="#/PointType" />
      <topicref navtitle="GridLineStyle" href="#/GridLineStyle" />
      <topicref navtitle="GuideLineStyle" href="#/GuideLineStyle" />
      <topicref navtitle="BlendMode" href="#/BlendMode" />
      <topicref navtitle="ColorBlendMode" href="#/ColorBlendMode" />
      <topicref navtitle="RasterizeType" href="#/RasterizeType" />
      <topicref navtitle="Justification" href="#/Justification" />
      <topicref navtitle="AntiAlias" href="#/AntiAlias" />
      <topicref navtitle="Case" href="#/Case" />
      <topicref navtitle="Language" href="#/Language" />
      <topicref navtitle="TextType" href="#/TextType" />
      <topicref navtitle="WarpStyle" href="#/WarpStyle" />
      <topicref navtitle="TextComposer" href="#/TextComposer" />
      <topicref navtitle="AutoKernType" href="#/AutoKernType" />
      <topicref navtitle="StrikeThruType" href="#/StrikeThruType" />
      <topicref navtitle="UnderlineType" href="#/UnderlineType" />
      <topicref navtitle="SelectionType" href="#/SelectionType" />
      <topicref navtitle="ExportType" href="#/ExportType" />
      <topicref navtitle="IllustratorPathType" href="#/IllustratorPathType" />
      <topicref navtitle="ChannelType" href="#/ChannelType" />
      <topicref navtitle="CopyrightedType" href="#/CopyrightedType" />
      <topicref navtitle="BitmapConversionType" href="#/BitmapConversionType" />
      <topicref navtitle="BitmapHalfToneType" href="#/BitmapHalfToneType" />
      <topicref navtitle="MatteType" href="#/MatteType" />
      <topicref navtitle="AdjustmentReference" href="#/AdjustmentReference" />
      <topicref navtitle="OpenDocumentMode" href="#/OpenDocumentMode" />
      <topicref navtitle="NewDocumentMode" href="#/NewDocumentMode" />
      <topicref navtitle="PhotoCDColorSpace" href="#/PhotoCDColorSpace" />
      <topicref navtitle="StrokeLocation" href="#/StrokeLocation" />
      <topicref navtitle="JavaScriptExecutionMode" href="#/JavaScriptExecutionMode" />
      <topicref navtitle="SourceSpaceType" href="#/SourceSpaceType" />
      <topicref navtitle="LayerKind" href="#/LayerKind" />
      <topicref navtitle="TransitionType" href="#/TransitionType" />
      <topicref navtitle="GalleryFontType" href="#/GalleryFontType" />
      <topicref navtitle="GalleryConstrainType" href="#/GalleryConstrainType" />
      <topicref navtitle="GalleryThumbSizeType" href="#/GalleryThumbSizeType" />
      <topicref navtitle="GallerySecurityType" href="#/GallerySecurityType" />
      <topicref navtitle="PicturePackageTextType" href="#/PicturePackageTextType" />
      <topicref navtitle="GallerySecurityTextColorType" href="#/GallerySecurityTextColorType" />
      <topicref navtitle="GallerySecurityTextPositionType" href="#/GallerySecurityTextPositionType" />
      <topicref navtitle="GallerySecurityTextRotateType" href="#/GallerySecurityTextRotateType" />
      <topicref navtitle="QueryStateType" href="#/QueryStateType" />
      <topicref navtitle="SaveLogItemsType" href="#/SaveLogItemsType" />
      <topicref navtitle="EditLogItemsType" href="#/EditLogItemsType" />
      <topicref navtitle="BatchDestinationType" href="#/BatchDestinationType" />
      <topicref navtitle="FileNamingType" href="#/FileNamingType" />
      <topicref navtitle="DepthMapSource" href="#/DepthMapSource" />
      <topicref navtitle="Geometry" href="#/Geometry" />
      <topicref navtitle="ColorReductionType" href="#/ColorReductionType" />
      <topicref navtitle="CameraRAWSettingsType" href="#/CameraRAWSettingsType" />
      <topicref navtitle="WhiteBalanceType" href="#/WhiteBalanceType" />
      <topicref navtitle="ColorSpaceType" href="#/ColorSpaceType" />
      <topicref navtitle="CameraRAWSize" href="#/CameraRAWSize" />
      <topicref navtitle="MagnificationType" href="#/MagnificationType" />
      <topicref navtitle="CropToType" href="#/CropToType" />
      <topicref navtitle="FontPreviewType" href="#/FontPreviewType" />
      <topicref navtitle="MeasurementSource" href="#/MeasurementSource" />
      <topicref navtitle="MeasurementRange" href="#/MeasurementRange" />
      <topicref navtitle="DocumentInfo" href="#/DocumentInfo" />
      <topicref navtitle="Preferences" href="#/Preferences" />
      <topicref navtitle="Selection" href="#/Selection" />
      <topicref navtitle="LayerSet" href="#/LayerSet" />
      <topicref navtitle="ArtLayer" href="#/ArtLayer" />
      <topicref navtitle="Layer" href="#/Layer" />
      <topicref navtitle="Channel" href="#/Channel" />
      <topicref navtitle="HistoryState" href="#/HistoryState" />
      <topicref navtitle="TextFont" href="#/TextFont" />
      <topicref navtitle="TextItem" href="#/TextItem" />
      <topicref navtitle="LayerComp" href="#/LayerComp" />
      <topicref navtitle="MeasurementLog" href="#/MeasurementLog" />
      <topicref navtitle="MeasurementScale" href="#/MeasurementScale" />
      <topicref navtitle="CountItem" href="#/CountItem" />
      <topicref navtitle="ColorSampler" href="#/ColorSampler" />
      <topicref navtitle="XMPMetadata" href="#/XMPMetadata" />
      <topicref navtitle="DocumentConversionOptions" href="#/DocumentConversionOptions" />
      <topicref navtitle="BitmapConversionOptions" href="#/BitmapConversionOptions" />
      <topicref navtitle="IndexedConversionOptions" href="#/IndexedConversionOptions" />
      <topicref navtitle="PresentationOptions" href="#/PresentationOptions" />
      <topicref navtitle="GalleryOptions" href="#/GalleryOptions" />
      <topicref navtitle="GalleryBannerOptions" href="#/GalleryBannerOptions" />
      <topicref navtitle="GalleryImagesOptions" href="#/GalleryImagesOptions" />
      <topicref navtitle="GalleryThumbnailOptions" href="#/GalleryThumbnailOptions" />
      <topicref navtitle="GalleryCustomColorOptions" href="#/GalleryCustomColorOptions" />
      <topicref navtitle="GallerySecurityOptions" href="#/GallerySecurityOptions" />
      <topicref navtitle="ContactSheetOptions" href="#/ContactSheetOptions" />
      <topicref navtitle="PicturePackageOptions" href="#/PicturePackageOptions" />
      <topicref navtitle="BatchOptions" href="#/BatchOptions" />
    </topicref>
    <topicref navtitle="Classes for specifying options when opening documents">
      <topicref navtitle="PhotoCDSize" href="#/PhotoCDSize" />
      <topicref navtitle="OpenOptions" href="#/OpenOptions" />
      <topicref navtitle="PhotoCDOpenOptions" href="#/PhotoCDOpenOptions" />
      <topicref navtitle="RawFormatOpenOptions" href="#/RawFormatOpenOptions" />
      <topicref navtitle="GenericPDFOpenOptions" href="#/GenericPDFOpenOptions" />
      <topicref navtitle="GenericEPSOpenOptions" href="#/GenericEPSOpenOptions" />
      <topicref navtitle="DICOMOpenOptions" href="#/DICOMOpenOptions" />
      <topicref navtitle="CameraRAWOpenOptions" href="#/CameraRAWOpenOptions" />
    </topicref>
    <topicref navtitle="Classes for specifying options when saving documents">
      <topicref navtitle="PICTBitsPerPixels" href="#/PICTBitsPerPixels" />
      <topicref navtitle="TargaBitsPerPixels" href="#/TargaBitsPerPixels" />
      <topicref navtitle="BMPDepthType" href="#/BMPDepthType" />
      <topicref navtitle="SaveOptions" href="#/SaveOptions" />
      <topicref navtitle="PhotoshopSaveOptions" href="#/PhotoshopSaveOptions" />
      <topicref navtitle="BMPSaveOptions" href="#/BMPSaveOptions" />
      <topicref navtitle="GIFSaveOptions" href="#/GIFSaveOptions" />
      <topicref navtitle="EPSSaveOptions" href="#/EPSSaveOptions" />
      <topicref navtitle="JPEGSaveOptions" href="#/JPEGSaveOptions" />
      <topicref navtitle="PDFSaveOptions" href="#/PDFSaveOptions" />
      <topicref navtitle="PICTFileSaveOptions" href="#/PICTFileSaveOptions" />
      <topicref navtitle="PICTResourceSaveOptions" href="#/PICTResourceSaveOptions" />
      <topicref navtitle="PixarSaveOptions" href="#/PixarSaveOptions" />
      <topicref navtitle="PNGSaveOptions" href="#/PNGSaveOptions" />
      <topicref navtitle="RawSaveOptions" href="#/RawSaveOptions" />
      <topicref navtitle="SGIRGBSaveOptions" href="#/SGIRGBSaveOptions" />
      <topicref navtitle="TargaSaveOptions" href="#/TargaSaveOptions" />
      <topicref navtitle="TiffSaveOptions" href="#/TiffSaveOptions" />
      <topicref navtitle="DCS1_SaveOptions" href="#/DCS1_SaveOptions" />
      <topicref navtitle="DCS2_SaveOptions" href="#/DCS2_SaveOptions" />
    </topicref>
    <topicref navtitle="Classes for specifying options when exporting documents">
      <topicref navtitle="ExportOptions" href="#/ExportOptions" />
      <topicref navtitle="ExportOptionsIllustrator" href="#/ExportOptionsIllustrator" />
      <topicref navtitle="ExportOptionsSaveForWeb" href="#/ExportOptionsSaveForWeb" />
    </topicref>
    <topicref navtitle="Scripting commands for applying filters to documents">
      <topicref navtitle="RadialBlurMethod" href="#/RadialBlurMethod" />
      <topicref navtitle="RadialBlurQuality" href="#/RadialBlurQuality" />
      <topicref navtitle="SmartBlurQuality" href="#/SmartBlurQuality" />
      <topicref navtitle="SmartBlurMode" href="#/SmartBlurMode" />
      <topicref navtitle="TextureType" href="#/TextureType" />
      <topicref navtitle="PolarConversionType" href="#/PolarConversionType" />
      <topicref navtitle="RippleSize" href="#/RippleSize" />
      <topicref navtitle="UndefinedAreas" href="#/UndefinedAreas" />
      <topicref navtitle="OffsetUndefinedAreas" href="#/OffsetUndefinedAreas" />
      <topicref navtitle="SpherizeMode" href="#/SpherizeMode" />
      <topicref navtitle="DisplacementMapType" href="#/DisplacementMapType" />
      <topicref navtitle="WaveType" href="#/WaveType" />
      <topicref navtitle="ZigZagType" href="#/ZigZagType" />
      <topicref navtitle="NoiseDistribution" href="#/NoiseDistribution" />
      <topicref navtitle="LensType" href="#/LensType" />
      <topicref navtitle="EliminateFields" href="#/EliminateFields" />
      <topicref navtitle="CreateFields" href="#/CreateFields" />
    </topicref>
    <topicref navtitle="Scripting commands for applying adjustments to documents" />
    <topicref navtitle="Color classes for Adobe Photoshop">
      <topicref navtitle="Color" href="#/Color" />
      <topicref navtitle="GrayColor" href="#/GrayColor" />
      <topicref navtitle="RGBColor" href="#/RGBColor" />
      <topicref navtitle="CMYKColor" href="#/CMYKColor" />
      <topicref navtitle="LabColor" href="#/LabColor" />
      <topicref navtitle="HSBColor" href="#/HSBColor" />
      <topicref navtitle="NoColor" href="#/NoColor" />
    </topicref>
    <topicref navtitle="Classes for working with art path items">
      <topicref navtitle="PathKind" href="#/PathKind" />
      <topicref navtitle="ShapeOperation" href="#/ShapeOperation" />
      <topicref navtitle="PointKind" href="#/PointKind" />
      <topicref navtitle="ToolType" href="#/ToolType" />
      <topicref navtitle="PathItem" href="#/PathItem" />
      <topicref navtitle="SubPathItem" href="#/SubPathItem" />
      <topicref navtitle="PathPoint" href="#/PathPoint" />
      <topicref navtitle="SubPathInfo" href="#/SubPathInfo" />
      <topicref navtitle="PathPointInfo" href="#/PathPointInfo" />
    </topicref>
    <topicref navtitle="Classes for working with notifiers">
      <topicref navtitle="Notifier" href="#/Notifier" />
    </topicref>
    <topicref navtitle="Actions">
      <topicref navtitle="ActionDescriptor" href="#/ActionDescriptor" />
      <topicref navtitle="ActionList" href="#/ActionList" />
      <topicref navtitle="ActionReference" href="#/ActionReference" />
    </topicref>
    <topicref navtitle="Miscellaneous standard commands and classes" />
    <topicref navtitle="Collections">
      <topicref navtitle="Documents" href="#/Documents" />
      <topicref navtitle="Layers" href="#/Layers" />
      <topicref navtitle="LayerSets" href="#/LayerSets" />
      <topicref navtitle="ArtLayers" href="#/ArtLayers" />
      <topicref navtitle="Channels" href="#/Channels" />
      <topicref navtitle="Guides" href="#/Guides" />
      <topicref navtitle="HistoryStates" href="#/HistoryStates" />
      <topicref navtitle="LayerComps" href="#/LayerComps" />
      <topicref navtitle="TextFonts" href="#/TextFonts" />
      <topicref navtitle="PathItems" href="#/PathItems" />
      <topicref navtitle="SubPathItems" href="#/SubPathItems" />
      <topicref navtitle="PathPoints" href="#/PathPoints" />
      <topicref navtitle="Notifiers" href="#/Notifiers" />
      <topicref navtitle="CountItems" href="#/CountItems" />
      <topicref navtitle="ColorSamplers" href="#/ColorSamplers" />
    </topicref>
    <topicref navtitle="Other Classes">
      <topicref navtitle="Point" href="#/Point" />
      <topicref navtitle="Rectangle" href="#/Rectangle" />
    </topicref>
  </map>
  <package>
    <classdef name="OpenDocumentType" enumeration="true">
      <shortdesc>Document formats that Photoshop can open.</shortdesc>
      <elements type="class">
        <property name="PHOTOSHOP" rwaccess="readonly">
          <shortdesc>Photoshop format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BMP" rwaccess="readonly">
          <shortdesc>BMP format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="COMPUSERVEGIF" rwaccess="readonly">
          <shortdesc>CompuServe GIF format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPEPS" rwaccess="readonly">
          <shortdesc>EPS document produced by Photoshop.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="FILMSTRIP" rwaccess="readonly">
          <shortdesc>Filmstrip format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="JPEG" rwaccess="readonly">
          <shortdesc>JPEG format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="PCX" rwaccess="readonly">
          <shortdesc>PCX format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPPDF" rwaccess="readonly">
          <shortdesc>PDF document produced by Photoshop.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="PHOTOCD" rwaccess="readonly">
          <shortdesc>Photo CD format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="PICTFILEFORMAT" rwaccess="readonly">
          <shortdesc>PICT file format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="PICTRESOURCEFORMAT" rwaccess="readonly">
          <shortdesc>PICT resource format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="PIXAR" rwaccess="readonly">
          <shortdesc>Pixar format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="PNG" rwaccess="readonly">
          <shortdesc>PNG format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="RAW" rwaccess="readonly">
          <shortdesc>Raw format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="SCITEXCT" rwaccess="readonly">
          <shortdesc>Scitex CT format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="TARGA" rwaccess="readonly">
          <shortdesc>Targa format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="TIFF" rwaccess="readonly">
          <shortdesc>TIFF format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPDCS_1" rwaccess="readonly">
          <shortdesc>Photoshop DCS 1.0 format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPDCS_2" rwaccess="readonly">
          <shortdesc>Photoshop DCS 2.0 format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>19</value>
          </datatype>
        </property>
        <property name="PDF" rwaccess="readonly">
          <shortdesc>Generic PDF format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>21</value>
          </datatype>
        </property>
        <property name="EPS" rwaccess="readonly">
          <shortdesc>Generic EPS format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>22</value>
          </datatype>
        </property>
        <property name="EPSPICTPREVIEW" rwaccess="readonly">
          <shortdesc>EPS format with embedded PICT Preview.</shortdesc>
          <datatype>
            <type>int</type>
            <value>23</value>
          </datatype>
        </property>
        <property name="EPSTIFFPREVIEW" rwaccess="readonly">
          <shortdesc>EPS format with embedded TIFF Preview.</shortdesc>
          <datatype>
            <type>int</type>
            <value>24</value>
          </datatype>
        </property>
        <property name="ALIASPIX" rwaccess="readonly">
          <shortdesc>Alias PIX format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>25</value>
          </datatype>
        </property>
        <property name="ELECTRICIMAGE" rwaccess="readonly">
          <shortdesc>Electric format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>26</value>
          </datatype>
        </property>
        <property name="PORTABLEBITMAP" rwaccess="readonly">
          <shortdesc>Portable Bitmap format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>27</value>
          </datatype>
        </property>
        <property name="WAVEFRONTRLA" rwaccess="readonly">
          <shortdesc>Wavefront RLA format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>28</value>
          </datatype>
        </property>
        <property name="SGIRGB" rwaccess="readonly">
          <shortdesc>SGI RGB format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>29</value>
          </datatype>
        </property>
        <property name="SOFTIMAGE" rwaccess="readonly">
          <shortdesc>SoftImage format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>30</value>
          </datatype>
        </property>
        <property name="WIRELESSBITMAP" rwaccess="readonly">
          <shortdesc>Wireless Bitmap format (WBMP)</shortdesc>
          <datatype>
            <type>int</type>
            <value>31</value>
          </datatype>
        </property>
        <property name="CAMERARAW" rwaccess="readonly">
          <shortdesc>Camera RAW format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>32</value>
          </datatype>
        </property>
        <property name="DICOM" rwaccess="readonly">
          <shortdesc>DICOM format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>33</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SaveDocumentType" enumeration="true">
      <shortdesc>Document formats that Photoshop can save to.</shortdesc>
      <elements type="class">
        <property name="PHOTOSHOP" rwaccess="readonly">
          <shortdesc>Photoshop format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BMP" rwaccess="readonly">
          <shortdesc>BMP format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="COMPUSERVEGIF" rwaccess="readonly">
          <shortdesc>CompuServe GIF format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPEPS" rwaccess="readonly">
          <shortdesc>EPS document produced by Photoshop.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="JPEG" rwaccess="readonly">
          <shortdesc>JPEG format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="PCX" rwaccess="readonly">
          <shortdesc>PCX format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPPDF" rwaccess="readonly">
          <shortdesc>PDF document produced by Photoshop.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="PICTFileFORMAT" rwaccess="readonly">
          <shortdesc>PICT file format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="PICTRESOURCEFORMAT" rwaccess="readonly">
          <shortdesc>PICT resource format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="PIXAR" rwaccess="readonly">
          <shortdesc>Pixar format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="PNG" rwaccess="readonly">
          <shortdesc>PNG format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="RAW" rwaccess="readonly">
          <shortdesc>Raw format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="SCITEXCT" rwaccess="readonly">
          <shortdesc>Scitex CT format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="TARGA" rwaccess="readonly">
          <shortdesc>Targa format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="TIFF" rwaccess="readonly">
          <shortdesc>TIFF format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPDCS_1" rwaccess="readonly">
          <shortdesc>Photoshop DCS 1.0 format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPDCS_2" rwaccess="readonly">
          <shortdesc>Photoshop DCS 2.0 format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>19</value>
          </datatype>
        </property>
        <property name="ALIASPIX" rwaccess="readonly">
          <shortdesc>Alias PIX format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>25</value>
          </datatype>
        </property>
        <property name="ELECTRICIMAGE" rwaccess="readonly">
          <shortdesc>Electric format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>26</value>
          </datatype>
        </property>
        <property name="PORTABLEBITMAP" rwaccess="readonly">
          <shortdesc>Portable Bitmap format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>27</value>
          </datatype>
        </property>
        <property name="WAVEFRONTRLA" rwaccess="readonly">
          <shortdesc>Wavefront RLA format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>28</value>
          </datatype>
        </property>
        <property name="SGIRGB" rwaccess="readonly">
          <shortdesc>SGI RGB format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>29</value>
          </datatype>
        </property>
        <property name="SOFTIMAGE" rwaccess="readonly">
          <shortdesc>SoftImage format.</shortdesc>
          <datatype>
            <type>int</type>
            <value>30</value>
          </datatype>
        </property>
        <property name="WIRELESSBITMAP" rwaccess="readonly">
          <shortdesc>Wireless Bitmap format (WBMP)</shortdesc>
          <datatype>
            <type>int</type>
            <value>31</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SaveOptionsType" enumeration="true">
      <shortdesc>The save options for closing a file.</shortdesc>
      <elements type="class">
        <property name="SAVECHANGES" rwaccess="readonly">
          <shortdesc>Save changes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DONOTSAVECHANGES" rwaccess="readonly">
          <shortdesc>Do not save changes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PROMPTTOSAVECHANGES" rwaccess="readonly">
          <shortdesc>Ask the user whether to save.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DialogModes" enumeration="true">
      <shortdesc>Controls whether Photoshop displays dialogs during scripts.</shortdesc>
      <elements type="class">
        <property name="ALL" rwaccess="readonly">
          <shortdesc>Show all dialogs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ERROR" rwaccess="readonly">
          <shortdesc>Show only dialogs related to errors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="NO" rwaccess="readonly">
          <shortdesc>Show no dialogs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DocPositionStyle" enumeration="true">
      <shortdesc>Position of document when printing.</shortdesc>
      <elements type="class">
        <property name="PRINTCENTERED" rwaccess="readonly">
          <shortdesc>Print image centered on page.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SIZETOFIT" rwaccess="readonly">
          <shortdesc>Resize image to fit on page when printing.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="USERDEFINED" rwaccess="readonly">
          <shortdesc>Print using user defined spacing.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PrintColorHandling" enumeration="true">
      <shortdesc>Color conversion type when printing.</shortdesc>
      <elements type="class">
        <property name="PRINTERMANAGED" rwaccess="readonly">
          <shortdesc>Printer manages color conversions.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PHOTOSHOPMANAGED" rwaccess="readonly">
          <shortdesc>Photoshop manages color conversions.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SEPARATIONS" rwaccess="readonly">
          <shortdesc>Print each channel separately without color conversions.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DocumentMode" enumeration="true">
      <shortdesc>The document's color mode.</shortdesc>
      <elements type="class">
        <property name="GRAYSCALE" rwaccess="readonly">
          <shortdesc>Grayscale.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="RGB" rwaccess="readonly">
          <shortdesc>RGB.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CMYK" rwaccess="readonly">
          <shortdesc>CMYK.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAB" rwaccess="readonly">
          <shortdesc>Lab.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BITMAP" rwaccess="readonly">
          <shortdesc>Bitmap, which uses one of two color values (black or white) to represent the pixels in an image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="INDEXEDCOLOR" rwaccess="readonly">
          <shortdesc>Indexed color, in which the number of colors in the image is at most 256, the standard number of colors supported by the GIF and PNG-8 formats and many multimedia applications.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="MULTICHANNEL" rwaccess="readonly">
          <shortdesc>Image with multiple color channels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="DUOTONE" rwaccess="readonly">
          <shortdesc>Duotone mode, which creates monotone, duotone (two-color), tritone (three-color), and quadtone (four-color) grayscale images using one to four custom inks.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ChangeMode" enumeration="true">
      <shortdesc>The destination color mode. Note: Color images must be changed to Grayscale mode before you can change them to Bitmap mode.</shortdesc>
      <elements type="class">
        <property name="GRAYSCALE" rwaccess="readonly">
          <shortdesc>Grayscale.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="RGB" rwaccess="readonly">
          <shortdesc>RGB.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CMYK" rwaccess="readonly">
          <shortdesc>CMYK.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAB" rwaccess="readonly">
          <shortdesc>Lab.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BITMAP" rwaccess="readonly">
          <shortdesc>Bitmap. Note: Color images must be changed to Grayscale mode before you can change them to Bitmap mode.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="INDEXEDCOLOR" rwaccess="readonly">
          <shortdesc>Indexed color, in which the number of colors in the image is reduced to at most 256, the standard number of colors supported by the GIF and PNG-8 formats and many multimedia applications.</shortdesc>
          <description>This conversion reduces file size by deleting color information from the image. To convert to indexed color, you must start with an image that is 8 bits per channel and in either Grayscale or RGB mode.</description>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="MULTICHANNEL" rwaccess="readonly">
          <shortdesc>Image with multiple color channels.</shortdesc>
          <description>Uses 256 levels of gray in each channel. Useful for specialized printing. Color channels in the original image become spot color channels in the converted image. A CMYK image converted to Multichannel mode creates cyan, magenta, yellow, and black spot channels. An RGB image converted Multichannel mode creates cyan, magenta, and yellow spot channels. The new grayscale information is based on the color values of the pixels in each channel. Multichannel mode images can be saved in Photoshop, Photoshop 2.0, Photoshop Raw, or Photoshop DCS 2.0 format. To export a multichannel image, save it in Photoshop DCS 2.0 format.</description>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ColorProfileType" enumeration="true">
      <shortdesc>The type of color model that defines the document's working space.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>The document is not color managed.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="WORKING" rwaccess="readonly">
          <shortdesc>Color manages this document using the working color profile.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CUSTOM" rwaccess="readonly">
          <shortdesc>Color manages this document using a custom color profile.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DocumentFill" enumeration="true">
      <shortdesc>The document window fill type.</shortdesc>
      <elements type="class">
        <property name="WHITE" rwaccess="readonly">
          <shortdesc>White.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BACKGROUNDCOLOR" rwaccess="readonly">
          <shortdesc>The background color as displayed in the toolbox.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="TRANSPARENT" rwaccess="readonly">
          <shortdesc>Transparent.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Urgency" enumeration="true">
      <shortdesc>The editorial urgency status of the artwork.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No urgency.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="LOW" rwaccess="readonly">
          <shortdesc>Low.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TWO" rwaccess="readonly">
          <shortdesc>Level 2 (second highest)</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="THREE" rwaccess="readonly">
          <shortdesc>Level 3 (third highest)</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="FOUR" rwaccess="readonly">
          <shortdesc>Level 4 (fourth highest)</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Medium urgency.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="SIX" rwaccess="readonly">
          <shortdesc>Level 6 (third lowest)</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="SEVEN" rwaccess="readonly">
          <shortdesc>Level 7 (second lowest)</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="HIGH" rwaccess="readonly">
          <shortdesc>Highest level of urgency.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Orientation" enumeration="true">
      <shortdesc>The image orientation on the media.</shortdesc>
      <elements type="class">
        <property name="LANDSCAPE" rwaccess="readonly">
          <shortdesc>Landscape.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PORTRAIT" rwaccess="readonly">
          <shortdesc>Portrait.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Intent" enumeration="true">
      <shortdesc>The color conversion intent.</shortdesc>
      <elements type="class">
        <property name="PERCEPTUAL" rwaccess="readonly">
          <shortdesc>Gives priority to colors for which the human eye has greater sensitivity.</shortdesc>
          <description>Suitable for photographic images with a lot of out of gamut colors. This is the standard rendering intent for the Japanese printing industry.</description>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SATURATION" rwaccess="readonly">
          <shortdesc>Tries to produce vivid colors in an image at the expense of color accuracy.</shortdesc>
          <description>Suitable for business graphics like graphs or charts, where bright saturated colors are more important than the exact relationship between colors.</description>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="RELATIVECOLORIMETRIC" rwaccess="readonly">
          <shortdesc>Compares the extreme highlight of the source color space to that of the destination color space and shifts all colors accordingly. Out of gamut colors are shifted to the closest reproducible color in the destination color space.</shortdesc>
          <description>The standard rendering intent for printing in North America and Europe.</description>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="ABSOLUTECOLORIMETRIC" rwaccess="readonly">
          <shortdesc>Aims to maintain color accuracy at the expense of preserving relationships between colors and is suitable for proofing to simulate the output of a particular device. This intent is particularly useful for previewing how paper color affects printed colors.</shortdesc>
          <description>Leaves colors that fall inside the destination gamut unchanged. Out of gamut colors are clipped. No scaling of colors to destination white point is performed.</description>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Direction" enumeration="true">
      <shortdesc>The orientation of the object.</shortdesc>
      <elements type="class">
        <property name="HORIZONTAL" rwaccess="readonly">
          <shortdesc>Horizontal.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="VERTICAL" rwaccess="readonly">
          <shortdesc>Vertical.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PurgeTarget" enumeration="true">
      <shortdesc>The cache to be targeted in a purge operation.</shortdesc>
      <elements type="class">
        <property name="UNDOCACHES" rwaccess="readonly">
          <shortdesc>Clears the undo cache.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="HISTORYCACHES" rwaccess="readonly">
          <shortdesc>Deletes all history states from the History palette.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CLIPBOARDCACHE" rwaccess="readonly">
          <shortdesc>Clears the clipboard.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="ALLCACHES" rwaccess="readonly">
          <shortdesc>Clears all caches.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="AnchorPosition" enumeration="true">
      <shortdesc>The point around which to transform the object.</shortdesc>
      <elements type="class">
        <property name="TOPLEFT" rwaccess="readonly">
          <shortdesc>The top left corner of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TOPCENTER" rwaccess="readonly">
          <shortdesc>The middle point on the top of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="TOPRIGHT" rwaccess="readonly">
          <shortdesc>The top right corner of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="MIDDLELEFT" rwaccess="readonly">
          <shortdesc>The middle point on the left side of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="MIDDLECENTER" rwaccess="readonly">
          <shortdesc>The center of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="MIDDLERIGHT" rwaccess="readonly">
          <shortdesc>The middle point on the right side of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="BOTTOMLEFT" rwaccess="readonly">
          <shortdesc>The bottom left corner of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="BOTTOMCENTER" rwaccess="readonly">
          <shortdesc>The middle point of the bottom of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="BOTTOMRIGHT" rwaccess="readonly">
          <shortdesc>The bottom right corner of the object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ResampleMethod" enumeration="true">
      <shortdesc>The method to use to resample the image.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>Does not resample.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="NEARESTNEIGHBOR" rwaccess="readonly">
          <shortdesc>Chooses a pixel in the center of the sample area and replaces the entire area with that pixel color. Same as subsampling.</shortdesc>
          <description>Significantly reduces the conversion time compared with downsampling but results in images that are less smooth and continuous.</description>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="BILINEAR" rwaccess="readonly">
          <shortdesc>Averages the pixels in a sample area and replaces the entire area with the average pixel color at the specified resolution. Same as average downsampling.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="BICUBIC" rwaccess="readonly">
          <shortdesc>Uses a weighted average to determine pixel color, which usually yields better results than the simple averageing method of downsampling.</shortdesc>
          <description>The slowest but most precise method, resulting in the smoothest gradations.</description>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BICUBICSHARPER" rwaccess="readonly">
          <shortdesc>A good method for reducing the size of an image based on Bicubic interpolation with enhanced sharpening. Maintains the detail in a resampled image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="BICUBICSMOOTHER" rwaccess="readonly">
          <shortdesc>A good method for enlarging images based on Bicubic interpolation but designed to produce smoother results.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="BICUBICAUTOMATIC" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="AUTOMATIC" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="PRESERVEDETAILS" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="OperatingSystem" enumeration="true">
      <shortdesc>The operating system.</shortdesc>
      <elements type="class">
        <property name="OS2" rwaccess="readonly">
          <shortdesc>Mac OS/2 operating system.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="WINDOWS" rwaccess="readonly">
          <shortdesc>Windows operating system.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ForcedColors" enumeration="true">
      <shortdesc>The colors whose inclusion to force in the color table.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No forced colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BLACKWHITE" rwaccess="readonly">
          <shortdesc>Forces pure black and white.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PRIMARIES" rwaccess="readonly">
          <shortdesc>Forces red, green, blue, cyan, magenta, yellow, black, and white.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="WEB" rwaccess="readonly">
          <shortdesc>Forces the 216 web-safe colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PaletteType" enumeration="true">
      <shortdesc>The palette type for converting an image to indexed color.</shortdesc>
      <elements type="class">
        <property name="EXACT" rwaccess="readonly">
          <shortdesc>The palette uses the exact colors appearing in the RGB image; available only if the image uses 256 or fewer colors.</shortdesc>
          <description>Because the image's palette contains all colors in the image, there is no dithering.</description>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MACOSPALETTE" rwaccess="readonly">
          <shortdesc>The Mac OS default 8-bit palette, whch is based on a uniform sampling of RGB colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="WINDOWSPALETTE" rwaccess="readonly">
          <shortdesc>The Windows system's default 8-bit palette, whch is based on a uniform sampling of RGB colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="WEBPALETTE" rwaccess="readonly">
          <shortdesc>The 216-color palette that web browsers, regardless of platform, use to display images on a monitor limited to 256 colors.</shortdesc>
          <description>A subset of the Mac OS 8-bit palette. Use this option to avoid browser dither when viewing images on a monitor display limited to 256 colors.</description>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="UNIFORM" rwaccess="readonly">
          <shortdesc>Creates a palette by uniformly sampling colors from the RGB color cube.</shortdesc>
          <description>For example, if Photoshop takes six evenly spaced color levels each of red, green, and blue, the combination produces a uniform palette of 216 colors (6 cubed = 6 x 6 x 6 = 216). The total number of colors displayed in an image corresponds to the nearest perfect cube (8, 27, 64, 125, or 216) that is less than the value in the Colors text box.</description>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="LOCALPERCEPTUAL" rwaccess="readonly">
          <shortdesc>Creates a custom palette by giving priority to colors for in the image which the human eye has greater sensitivity.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="LOCALSELECTIVE" rwaccess="readonly">
          <shortdesc>Creates a color table similar to the Perceptual color table, but favoring broad areas of color in the image and the preservation of web colors.</shortdesc>
          <description>Usually produces images with the greatest color integrity.</description>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="LOCALADAPTIVE" rwaccess="readonly">
          <shortdesc>Creates a palette by sampling the colors from the spectrum appearing most commonly in the image.</shortdesc>
          <description>For example, an RGB image with only the colors green and blue produces a palette made primarily of greens and blues. </description>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="MASTERPERCEPTUAL" rwaccess="readonly">
          <shortdesc>Creates a custom palette by giving priority to colors in a group of open images with the same color palette for which the human eye has greater sensitivity.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="MASTERSELECTIVE" rwaccess="readonly">
          <shortdesc>Creates a color table similar to the Master Perceptual color table, but favoring broad areas of color and the preservation of web colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="MASTERADAPTIVE" rwaccess="readonly">
          <shortdesc>Creates a palette by sampling the colors from the spectrum appearing most commonly in a group of open images that share the same color palette.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="PREVIOUSPALETTE" rwaccess="readonly">
          <shortdesc>Uses the custom palette from the previous conversion, making it easy to convert several images with the same custom palette.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DitherType" enumeration="true">
      <shortdesc>The type of dither.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No dither is used.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DIFFUSION" rwaccess="readonly">
          <shortdesc>Diffuses dither effects in random patterns across adjacent pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PATTERN" rwaccess="readonly">
          <shortdesc>Applies a halftone-like square pattern.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="NOISE" rwaccess="readonly">
          <shortdesc>Applies a random pattern but without diffusing the pattern across adjacent pixels; prevents the appearance of seams.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MacPreviewType" enumeration="true">
      <shortdesc>The type of image to use as a low-resolution preview in the destination application.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>Does not use a preview.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MONOCHROMETIFF" rwaccess="readonly">
          <shortdesc>Monochrome TIFF.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="EIGHTBITTIFF" rwaccess="readonly">
          <shortdesc>8-bit TIFF.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="MACOSMONOCHROME" rwaccess="readonly">
          <shortdesc>Monochrome.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="MACOSEIGHTBIT" rwaccess="readonly">
          <shortdesc>8-bit.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="MACOSJPEG" rwaccess="readonly">
          <shortdesc>JPEG.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SaveEncoding" enumeration="true">
      <shortdesc>The encoding to use when saving documents.</shortdesc>
      <elements type="class">
        <property name="ASCII" rwaccess="readonly">
          <shortdesc>ASCII.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="BINARY" rwaccess="readonly">
          <shortdesc>Binary.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="JPEGLOW" rwaccess="readonly">
          <shortdesc>Low quality JPEG encoding (high amount of compression).</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="JPEGMEDIUM" rwaccess="readonly">
          <shortdesc>Medium quality JPEG encoding (medium compression).</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="JPEGHIGH" rwaccess="readonly">
          <shortdesc>High quality JPEG encoding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="JPEGMAXIMUM" rwaccess="readonly">
          <shortdesc>Maximum quality JPEG encoding (very little compression).</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="FormatOptionsType" enumeration="true">
      <shortdesc>The options for saving a JPEG file.</shortdesc>
      <elements type="class">
        <property name="STANDARDBASELINE" rwaccess="readonly">
          <shortdesc>Baseline (Standard). Recognized by most web browsers.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="OPTIMIZEDBASELINE" rwaccess="readonly">
          <shortdesc>Baseline (Optimized). Optimized color and a slightly reduced file size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PROGRESSIVE" rwaccess="readonly">
          <shortdesc>Displays a series of increasingly detailed scans as the image downloads.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PDFEncodingType" enumeration="true">
      <shortdesc>The type of compression to use when saving a document in PDF format.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No encoding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="PDFZIP" rwaccess="readonly">
          <shortdesc>Zip compression.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="JPEG" rwaccess="readonly">
          <shortdesc>JPEG compression.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PDFZIP4BIT" rwaccess="readonly">
          <shortdesc>Zip compression with 4-bit image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="JPEGHIGH" rwaccess="readonly">
          <shortdesc>JPEG compression with high image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="JPEGMEDHIGH" rwaccess="readonly">
          <shortdesc>JPEG compression with medium high image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="JPEGMED" rwaccess="readonly">
          <shortdesc>JPEG compression with medium image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="JPEGMEDLOW" rwaccess="readonly">
          <shortdesc>JPEG compression with medium low image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="JPEGLOW" rwaccess="readonly">
          <shortdesc>JPEG compression with low image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="JPEG2000HIGH" rwaccess="readonly">
          <shortdesc>JPEG2000 compression with high image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="JPEG2000MEDHIGH" rwaccess="readonly">
          <shortdesc>JPEG2000 compression with medium high image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="JPEG2000MED" rwaccess="readonly">
          <shortdesc>JPEG2000 compression with medium image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="JPEG2000MEDLOW" rwaccess="readonly">
          <shortdesc>JPEG2000 compression with medium low image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="JPEG2000LOW" rwaccess="readonly">
          <shortdesc>JPEG2000 compression with low image quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="JPEG2000LOSSLESS" rwaccess="readonly">
          <shortdesc>JPEG2000 lossless compression.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PDFStandardType" enumeration="true">
      <shortdesc>The PDF/X standard with which the document complies.</shortdesc>
      <description>PDF/X compliant files must contain information describing the printing condition for which they are prepared.</description>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>The document does not use the PDF/X standard.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="PDFX1A2001" rwaccess="readonly">
          <shortdesc>PDF/X-1a standard, which requires all fonts to be embedded, the appropriate PDF bounding boxes to be specified, and color to appear as CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PDFX1A2003" rwaccess="readonly">
          <shortdesc>PDF/X-1a standard, which requires all fonts to be embedded, the appropriate PDF bounding boxes to be specified, and color to appear as CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PDFX32002" rwaccess="readonly">
          <shortdesc>PDF/X-3 standard, which requires all fonts to be embedded and the appropriate PDF bounding boxes to be specified, and for color allows either the use of color management and device-independent color (CIE L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="PDFX32003" rwaccess="readonly">
          <shortdesc>PDF/X-3 standard, which requires all fonts to be embedded and the appropriate PDF bounding boxes to be specified, and for color allows either the use of color management and device-independent color (CIE L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="PDFX42008" rwaccess="readonly">
          <shortdesc>PDF/X-4 standard, which requires all fonts to be embedded and the appropriate PDF bounding boxes to be specified, and for color allows either the use of color management and device-independent color (CIE L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot colors, or both; can be opened in Acrobat 8.0 and Acrobat Reader 8.0 and later.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PDFCompatibilityType" enumeration="true">
      <shortdesc>The PDF version with which to make the document compatible.</shortdesc>
      <elements type="class">
        <property name="PDF13" rwaccess="readonly">
          <shortdesc>PDF 1.3 (Acrobat 4 or higher).</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PDF14" rwaccess="readonly">
          <shortdesc>PDF 1.4 (Acrobat 5 or higher).</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PDF15" rwaccess="readonly">
          <shortdesc>PDF 1.5 (Acrobat 6 or higher).</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="PDF16" rwaccess="readonly">
          <shortdesc>PDF 1.6 (Acrobat 7 or higher)</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="PDF17" rwaccess="readonly">
          <shortdesc>PDF 1.7 (Acrobat 9 or higher)</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PDFResampleType" enumeration="true">
      <shortdesc>Downsampling options when saving as PDF.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>Does not downsample.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="PDFAVERAGE" rwaccess="readonly">
          <shortdesc>Averages the pixels in a sample area and replaces the entire area with the average pixel color at the specified resolution.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PDFSUBSAMPLE" rwaccess="readonly">
          <shortdesc>Chooses a pixel in the center of the sample area and replaces the entire area with that pixel color; significantly reduces conversion time but results in images that are less smooth and continuous.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PDFBICUBIC" rwaccess="readonly">
          <shortdesc>Uses a weighted average to determine pixel color, which usually yields better results than the simple averaging method of downsampling. The slowest but most precise method, resulting in the smoothest gradations.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PICTCompression" enumeration="true">
      <shortdesc>The compression type to use whan saving as PICT.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No compression.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="JPEGLOWPICT" rwaccess="readonly">
          <shortdesc>Low quality JPEG encoding (high amount of compression).</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="JPEGMEDIUMPICT" rwaccess="readonly">
          <shortdesc>Medium quality JPEG encoding (medium amount of compression).</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="JPEGHIGHPICT" rwaccess="readonly">
          <shortdesc>High quality JPEG encoding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="JPEGMAXIMUMPICT" rwaccess="readonly">
          <shortdesc>Maximum quality JPEG encoding (very little compression).</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MacExtensionType" enumeration="true">
      <shortdesc>The formatting for the filename extension.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>Does not use an extension.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="LOWERCASE" rwaccess="readonly">
          <shortdesc>The extension is in lowercase letters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="UPPERCASE" rwaccess="readonly">
          <shortdesc>The extension is in uppercase letters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TiffEncodingType" enumeration="true">
      <shortdesc>The encoding to use when saving to TIFF format.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No compression.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TIFFLZW" rwaccess="readonly">
          <shortdesc>LZW compression, which is lossless and most useful for images with large areas of single color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="JPEG" rwaccess="readonly">
          <shortdesc>JPEG compression, which is lossy and recommended for continuous-tone images, such as photographs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="TIFFZIP" rwaccess="readonly">
          <shortdesc>Zip compression, which is lossless and most effective for images that contain large areas of single color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="LayerCompressionType" enumeration="true">
      <shortdesc>The layer compression type.</shortdesc>
      <elements type="class">
        <property name="RLE" rwaccess="readonly">
          <shortdesc>Run Length Encoding, which is lossless.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ZIP" rwaccess="readonly">
          <shortdesc>Zip compression, which is lossless and most effective for images that contain large areas of single color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ByteOrderType" enumeration="true">
      <shortdesc>The platform-specific order in which bytes will be read.</shortdesc>
      <elements type="class">
        <property name="IBM" rwaccess="readonly">
          <shortdesc>IBM PC.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MACOS" rwaccess="readonly">
          <shortdesc>Mac OS.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DCSType" enumeration="true">
      <shortdesc>The DCS format.</shortdesc>
      <elements type="class">
        <property name="NOCOMPOSITE" rwaccess="readonly">
          <shortdesc>Does not create a composite file.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="GRAYSCALECOMPOSITE" rwaccess="readonly">
          <shortdesc>Creates a grayscale composite file in addition to DCS files.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="COLORCOMPOSITE" rwaccess="readonly">
          <shortdesc>Creates a color composite file in addition to DCS files.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TrimType" enumeration="true">
      <shortdesc>The type of pixels to trim around an image.</shortdesc>
      <elements type="class">
        <property name="TRANSPARENT" rwaccess="readonly">
          <shortdesc>Trims away transparency at the edges of the image, leaving the smallest image containing nontransparent pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="TOPLEFT" rwaccess="readonly">
          <shortdesc>Removes from the image an area the color of the upper left pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BOTTOMRIGHT" rwaccess="readonly">
          <shortdesc>Removes from the image an area the color of the lower right pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ColorPicker" enumeration="true">
      <shortdesc>The color picker to use.</shortdesc>
      <elements type="class">
        <property name="ADOBE" rwaccess="readonly">
          <shortdesc>The Adobe Color Picker.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="APPLE" rwaccess="readonly">
          <shortdesc>The built-in Apple color picker.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="WINDOWS" rwaccess="readonly">
          <shortdesc>The built-in Windows color picker.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="PLUGIN" rwaccess="readonly">
          <shortdesc>An installed plug-in color picker.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ResetTarget" enumeration="true">
      <shortdesc>The type of object(s) to reset to default settings.</shortdesc>
      <elements type="class">
        <property name="ALLWARNINGS" rwaccess="readonly">
          <shortdesc>Warning dialogs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ALLTOOLS" rwaccess="readonly">
          <shortdesc>Tools.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="EVERYTHING" rwaccess="readonly">
          <shortdesc>All targets.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SaveBehavior" enumeration="true">
      <shortdesc>The application's behavior regarding image previews and file extensions when a save method is called.</shortdesc>
      <elements type="class">
        <property name="NEVERSAVE" rwaccess="readonly">
          <shortdesc>Never save the item with the file.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ALWAYSSAVE" rwaccess="readonly">
          <shortdesc>Always save the item with the file.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="ASKWHENSAVING" rwaccess="readonly">
          <shortdesc>Prompt the user whether to save the item with the file.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PaintingCursors" enumeration="true">
      <shortdesc>The pointer for the following tools: Marquee, Lasso, Polygonal Lasso, Magic Wand, Crop, Slice, Patch Eyedropper, Pen, Gradient, Line, Paint Bucket, Magnetic Lasso, Magnetic Pen, Freeform Pen, Measure, and Color Sampler.</shortdesc>
      <elements type="class">
        <property name="STANDARD" rwaccess="readonly">
          <shortdesc>Displays pointers as tool icons.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PRECISE" rwaccess="readonly">
          <shortdesc>Displays pointers as cross hairs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="BRUSHSIZE" rwaccess="readonly">
          <shortdesc>Displays cursors as brush shapes representing the size of the current brush. Valid only for painting cursors.</shortdesc>
          <description>Brush size cursors may not appear for very large brushes.</description>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="OtherPaintingCursors" enumeration="true">
      <shortdesc>The pointer for the following tools: Eraser, Pencil, Paintbrush, Healing Brush, Rubber Stamp, Pattern Stamp, Smudge, Blur, Sharpen, Dodge, Burn, Sponge.</shortdesc>
      <elements type="class">
        <property name="STANDARDOTHER" rwaccess="readonly">
          <shortdesc>Displays pointers as tool icons.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PRECISEOTHER" rwaccess="readonly">
          <shortdesc>Displays pointers as cross hairs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GridSize" enumeration="true">
      <shortdesc>The size of grid squares.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No grid is displayed.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>Small grid squares.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>Medium grid squares.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>Large grid squares.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Units" enumeration="true">
      <shortdesc>The measurement unit for ruler increments.</shortdesc>
      <elements type="class">
        <property name="PIXELS" rwaccess="readonly">
          <shortdesc>Pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="INCHES" rwaccess="readonly">
          <shortdesc>Inches.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CM" rwaccess="readonly">
          <shortdesc>Centimeters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="MM" rwaccess="readonly">
          <shortdesc>Millimeters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="POINTS" rwaccess="readonly">
          <shortdesc>Points.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="PICAS" rwaccess="readonly">
          <shortdesc>Picas.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="PERCENT" rwaccess="readonly">
          <shortdesc>Percent.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TypeUnits" enumeration="true">
      <shortdesc>The measurement unit for type.</shortdesc>
      <elements type="class">
        <property name="PIXELS" rwaccess="readonly">
          <shortdesc>Pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MM" rwaccess="readonly">
          <shortdesc>Millimeters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="POINTS" rwaccess="readonly">
          <shortdesc>Points.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PointType" enumeration="true">
      <shortdesc>The point type.</shortdesc>
      <elements type="class">
        <property name="POSTSCRIPT" rwaccess="readonly">
          <shortdesc>72 points per inch.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TRADITIONAL" rwaccess="readonly">
          <shortdesc>72.27 points per inch.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GridLineStyle" enumeration="true">
      <shortdesc>The line style for nonprinting grids displayed over images.</shortdesc>
      <elements type="class">
        <property name="SOLID" rwaccess="readonly">
          <shortdesc>Solid.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DASHED" rwaccess="readonly">
          <shortdesc>Dashed.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DOTTED" rwaccess="readonly">
          <shortdesc>Dotted.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GuideLineStyle" enumeration="true">
      <shortdesc>The line style for nonprinting guides displayed over images.</shortdesc>
      <elements type="class">
        <property name="SOLID" rwaccess="readonly">
          <shortdesc>Solid.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DASHED" rwaccess="readonly">
          <shortdesc>Dashed.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BlendMode" enumeration="true">
      <shortdesc>Controls how pixels in the image are blended.</shortdesc>
      <elements type="class">
        <property name="PASSTHROUGH" rwaccess="readonly">
          <shortdesc>Allows any blend modes, advanced blending options, and opacity and fill values applied to layers within a set to affect layers below the set in the Layers palette.</shortdesc>
          <description>Valid only for layer sets. To restrict blend modes of the layers within a set, change the layer set's blend mode to Normal.</description>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Edits or paints each pixel to make it the result color. (Called "Threshold" when you’re working with a bitmapped or indexed-color image.)</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DISSOLVE" rwaccess="readonly">
          <shortdesc>Edits or paints each pixel to make it the result color. However, the result color is a random replacement of the pixels with the base color or the blend color, depending on the opacity at any pixel location.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="DARKEN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and selects the base or blend color—whichever is darker—as the result color. Pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="MULTIPLY" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and multiplies the base color by the blend color. The result color is always a darker color. Multiplying any color with black produces black. Multiplying any color with white leaves the color unchanged. When you’re painting with a color other than black or white, successive strokes with a painting tool produce progressively darker colors. The effect is similar to drawing on the image with multiple marking pens.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="COLORBURN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and darkens the base color to reflect the blend color by increasing the contrast. Blending with white produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="LINEARBURN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and darkens the base color to reflect the blend color by decreasing the brightness. Blending with white produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="LIGHTEN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and selects the base or blend color—whichever is lighter—as the result color. Pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="SCREEN" rwaccess="readonly">
          <shortdesc>Looks at each channel’s color information and multiplies the inverse of the blend and base colors. The result color is always a lighter color. Screening with black leaves the color unchanged. Screening with white produces white. The effect is similar to projecting multiple photographic slides on top of each other.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="COLORDODGE" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and brightens the base color to reflect the blend color by decreasing the contrast. Blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="LINEARDODGE" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and brightens the base color to reflect the blend color by increasing the brightness. Blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="OVERLAY" rwaccess="readonly">
          <shortdesc>Multiplies or screens the colors, depending on the base color. Patterns or colors overlay the existing pixels while preserving the highlights and shadows of the base color. The base color is not replaced but is mixed with the blend color to reflect the lightness or darkness of the original color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="SOFTLIGHT" rwaccess="readonly">
          <shortdesc>Darkens or lightens the colors, depending on the blend color. The effect is similar to shining a diffused spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened as if it were dodged. If the blend color is darker than 50% gray, the image is darkened as if it were burned in. Painting with pure black or white produces a distinctly darker or lighter area but does not result in pure black or white.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="HARDLIGHT" rwaccess="readonly">
          <shortdesc>Multiplies or screens the colors, depending on the blend color. The effect is similar to shining a harsh spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened, as if it were screened. This is useful for adding highlights to an image. If the blend color is darker than 50% gray, the image is darkened, as if it were multiplied. This is useful for adding shadows to an image. Painting with pure black or white results in pure black or white.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="VIVIDLIGHT" rwaccess="readonly">
          <shortdesc>Burns or dodges the colors by increasing or decreasing the contrast, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by decreasing the contrast. If the blend color is darker than 50% gray, the image is darkened by increasing the contrast.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="LINEARLIGHT" rwaccess="readonly">
          <shortdesc>Burns or dodges the colors by decreasing or increasing the brightness, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by increasing the brightness. If the blend color is darker than 50% gray, the image is darkened by decreasing the brightness.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="PINLIGHT" rwaccess="readonly">
          <shortdesc>Replaces the colors, depending on the blend color. If the blend color (light source) is lighter than 50% gray, pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change. If the blend color is darker than 50% gray, pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change. This is useful for adding special effects to an image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="DIFFERENCE" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and subtracts either the blend color from the base color or the base color from the blend color, depending on which has the greater brightness value. Blending with white inverts the base color values; blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
        <property name="EXCLUSION" rwaccess="readonly">
          <shortdesc>Creates an effect similar to but lower in contrast than the Difference mode. Blending with white inverts the base color values. Blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>19</value>
          </datatype>
        </property>
        <property name="SUBTRACT" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>29</value>
          </datatype>
        </property>
        <property name="DIVIDE" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>30</value>
          </datatype>
        </property>
        <property name="HUE" rwaccess="readonly">
          <shortdesc>Creates a result color with the luminance and saturation of the base color and the hue of the blend color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>20</value>
          </datatype>
        </property>
        <property name="SATURATION" rwaccess="readonly">
          <shortdesc>Creates a result color with the luminance and hue of the base color and the saturation of the blend color. Painting with this mode in an area with no (0) saturation (gray) causes no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>21</value>
          </datatype>
        </property>
        <property name="COLORBLEND" rwaccess="readonly">
          <shortdesc>Creates a result color with the luminance of the base color and the hue and saturation of the blend color. This preserves the gray levels in the image and is useful for coloring monochrome images and for tinting color images.</shortdesc>
          <datatype>
            <type>int</type>
            <value>22</value>
          </datatype>
        </property>
        <property name="LUMINOSITY" rwaccess="readonly">
          <shortdesc>Creates a result color with the hue and saturation of the base color and the luminance of the blend color. This mode creates an inverse effect from that of the Color mode.</shortdesc>
          <datatype>
            <type>int</type>
            <value>23</value>
          </datatype>
        </property>
        <property name="HARDMIX" rwaccess="readonly">
          <shortdesc>Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization/thresholding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>26</value>
          </datatype>
        </property>
        <property name="LIGHTERCOLOR" rwaccess="readonly">
          <shortdesc>Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization/thresholding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>27</value>
          </datatype>
        </property>
        <property name="DARKERCOLOR" rwaccess="readonly">
          <shortdesc>Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization/thresholding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>28</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ColorBlendMode" enumeration="true">
      <shortdesc>The color blend mode type.</shortdesc>
      <elements type="class">
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Edits or paints each pixel to make it the result color. (Called "Threshold" when you’re working with a bitmapped or indexed-color image.)</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DISSOLVE" rwaccess="readonly">
          <shortdesc>Edits or paints each pixel to make it the result color, which is a random replacement of the pixels with the base color or the blend color, depending on the opacity at any pixel location.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="BEHIND" rwaccess="readonly">
          <shortdesc>Edits or paints only on the transparent part of a layer. Works only in layers in which transparent pixels locked = false and is analogous to painting on the back of transparent areas on a sheet of acetate.</shortdesc>
          <datatype>
            <type>int</type>
            <value>24</value>
          </datatype>
        </property>
        <property name="CLEAR" rwaccess="readonly">
          <shortdesc>Edits or paints each pixel and makes it transparent. Works only in layers in which transparent pixels locked = false.</shortdesc>
          <datatype>
            <type>int</type>
            <value>25</value>
          </datatype>
        </property>
        <property name="DARKEN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and selects the base or blend color—whichever is darker—as the result color. Pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="MULTIPLY" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and multiplies the base color by the blend color. The result color is always a darker color. Multiplying any color with black produces black. Multiplying any color with white leaves the color unchanged. When you’re painting with a color other than black or white, successive strokes with a painting tool produce progressively darker colors. The effect is similar to drawing on the image with multiple marking pens.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="COLORBURN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and darkens the base color to reflect the blend color by increasing the contrast. Blending with white produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="LINEARBURN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and darkens the base color to reflect the blend color by decreasing the brightness. Blending with white produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="LIGHTEN" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and selects the base or blend color—whichever is lighter—as the result color. Pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="SCREEN" rwaccess="readonly">
          <shortdesc>Looks at each channel’s color information and multiplies the inverse of the blend and base colors. The result color is always a lighter color. Screening with black leaves the color unchanged. Screening with white produces white. The effect is similar to projecting multiple photographic slides on top of each other.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="COLORDODGE" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and brightens the base color to reflect the blend color by decreasing the contrast. Blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="LINEARDODGE" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and brightens the base color to reflect the blend color by increasing the brightness. Blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="OVERLAY" rwaccess="readonly">
          <shortdesc>Multiplies or screens the colors, depending on the base color. Patterns or colors overlay the existing pixels while preserving the highlights and shadows of the base color. The base color is not replaced but is mixed with the blend color to reflect the lightness or darkness of the original color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="SOFTLIGHT" rwaccess="readonly">
          <shortdesc>Darkens or lightens the colors, depending on the blend color. The effect is similar to shining a diffused spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened as if it were dodged. If the blend color is darker than 50% gray, the image is darkened as if it were burned in. Painting with pure black or white produces a distinctly darker or lighter area but does not result in pure black or white.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="HARDLIGHT" rwaccess="readonly">
          <shortdesc>Multiplies or screens the colors, depending on the blend color. The effect is similar to shining a harsh spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened, as if it were screened. This is useful for adding highlights to an image. If the blend color is darker than 50% gray, the image is darkened, as if it were multiplied. This is useful for adding shadows to an image. Painting with pure black or white results in pure black or white.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="VIVIDLIGHT" rwaccess="readonly">
          <shortdesc>Burns or dodges the colors by increasing or decreasing the contrast, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by decreasing the contrast. If the blend color is darker than 50% gray, the image is darkened by increasing the contrast.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="LINEARLIGHT" rwaccess="readonly">
          <shortdesc>Burns or dodges the colors by decreasing or increasing the brightness, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by increasing the brightness. If the blend color is darker than 50% gray, the image is darkened by decreasing the brightness.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="PINLIGHT" rwaccess="readonly">
          <shortdesc>Replaces the colors, depending on the blend color. If the blend color (light source) is lighter than 50% gray, pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change. If the blend color is darker than 50% gray, pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change. This is useful for adding special effects to an image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="DIFFERENCE" rwaccess="readonly">
          <shortdesc>Looks at the color information in each channel and subtracts either the blend color from the base color or the base color from the blend color, depending on which has the greater brightness value. Blending with white inverts the base color values; blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
        <property name="EXCLUSION" rwaccess="readonly">
          <shortdesc>Creates an effect similar to but lower in contrast than the Difference mode. Blending with white inverts the base color values. Blending with black produces no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>19</value>
          </datatype>
        </property>
        <property name="SUBTRACT" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>29</value>
          </datatype>
        </property>
        <property name="DIVIDE" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>30</value>
          </datatype>
        </property>
        <property name="HUE" rwaccess="readonly">
          <shortdesc>Creates a result color with the luminance and saturation of the base color and the hue of the blend color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>20</value>
          </datatype>
        </property>
        <property name="SATURATION" rwaccess="readonly">
          <shortdesc>Creates a result color with the luminance and hue of the base color and the saturation of the blend color. Painting with this mode in an area with no (0) saturation (gray) causes no change.</shortdesc>
          <datatype>
            <type>int</type>
            <value>21</value>
          </datatype>
        </property>
        <property name="COLOR" rwaccess="readonly">
          <shortdesc>Creates a result color with the luminance of the base color and the hue and saturation of the blend color. This preserves the gray levels in the image and is useful for coloring monochrome images and for tinting color images.</shortdesc>
          <datatype>
            <type>int</type>
            <value>22</value>
          </datatype>
        </property>
        <property name="LUMINOSITY" rwaccess="readonly">
          <shortdesc>Creates a result color with the hue and saturation of the base color and the luminance of the blend color. This mode creates an inverse effect from that of the Color mode.</shortdesc>
          <datatype>
            <type>int</type>
            <value>23</value>
          </datatype>
        </property>
        <property name="HARDMIX" rwaccess="readonly">
          <shortdesc>Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization/thresholding.</shortdesc>
          <datatype>
            <type>int</type>
            <value>26</value>
          </datatype>
        </property>
        <property name="LIGHTERCOLOR" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>27</value>
          </datatype>
        </property>
        <property name="DARKERCOLOR" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>28</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RasterizeType" enumeration="true">
      <shortdesc>The type of the layer content to rasterize.</shortdesc>
      <elements type="class">
        <property name="TEXTCONTENTS" rwaccess="readonly">
          <shortdesc>Rasterizes the type on a type layer. Doesn't rasterize any other vector data on the layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SHAPE" rwaccess="readonly">
          <shortdesc>Rasterizes a shape layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FILLCONTENT" rwaccess="readonly">
          <shortdesc>Rasterizes the fill of a shape layer, leaving the vector mask.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAYERCLIPPINGPATH" rwaccess="readonly">
          <shortdesc>Rasterizes the vector mask of a shape layer, turning it into a layer mask.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="ENTIRELAYER" rwaccess="readonly">
          <shortdesc>Rasterizes all vector data on the layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="LINKEDLAYERS" rwaccess="readonly">
          <shortdesc>Rasterizes the selected layers.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Justification" enumeration="true">
      <shortdesc>The placement of paragraph text within the bounding box.</shortdesc>
      <elements type="class">
        <property name="LEFT" rwaccess="readonly">
          <shortdesc>Aligns the left edges, leaving the right edge ragged.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CENTER" rwaccess="readonly">
          <shortdesc>Text is centered on each line.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="RIGHT" rwaccess="readonly">
          <shortdesc>Aligns the right edges, leaving the left edge ragged.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LEFTJUSTIFIED" rwaccess="readonly">
          <shortdesc>Justifies all lines except the last, which is left-aligned.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="CENTERJUSTIFIED" rwaccess="readonly">
          <shortdesc>Justifies all lines except the last, which is center-aligned.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="RIGHTJUSTIFIED" rwaccess="readonly">
          <shortdesc>Justifies all lines except the last, which is right-aligned.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="FULLYJUSTIFIED" rwaccess="readonly">
          <shortdesc>Justifies all lines including the last, which is force-justified.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="AntiAlias" enumeration="true">
      <shortdesc>The method to use to smooth edges by softening the color transition between edge pixels and background pixels.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>Does not use anti-aliasing.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SHARP" rwaccess="readonly">
          <shortdesc>Makes type appear its sharpest.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CRISP" rwaccess="readonly">
          <shortdesc>Makes type appear somewhat sharp.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="STRONG" rwaccess="readonly">
          <shortdesc>Makes type appear heavier.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="SMOOTH" rwaccess="readonly">
          <shortdesc>Makes type appear smoother.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Case" enumeration="true">
      <shortdesc>The capitalization to use.</shortdesc>
      <elements type="class">
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Uses uppercase and lowercase letters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ALLCAPS" rwaccess="readonly">
          <shortdesc>Uses all uppercase letters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SMALLCAPS" rwaccess="readonly">
          <shortdesc>Uses small caps for lowercase letters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Language" enumeration="true">
      <shortdesc>The language to use.</shortdesc>
      <elements type="class">
        <property name="ENGLISHUSA" rwaccess="readonly">
          <shortdesc>American English.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ENGLISHUK" rwaccess="readonly">
          <shortdesc>British English.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FRENCH" rwaccess="readonly">
          <shortdesc>French.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="CANADIANFRENCH" rwaccess="readonly">
          <shortdesc>Canadian French.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="FINNISH" rwaccess="readonly">
          <shortdesc>Finnish.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="GERMAN" rwaccess="readonly">
          <shortdesc>German.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="OLDGERMAN" rwaccess="readonly">
          <shortdesc>Old German.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="SWISSGERMAN" rwaccess="readonly">
          <shortdesc>Swiss German.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="ITALIAN" rwaccess="readonly">
          <shortdesc>Italian.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="NORWEGIAN" rwaccess="readonly">
          <shortdesc>Norwegian.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="NYNORSKNORWEGIAN" rwaccess="readonly">
          <shortdesc>Nynorsk Norwegian.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="PORTUGUESE" rwaccess="readonly">
          <shortdesc>Portuguese.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="BRAZILLIANPORTUGUESE" rwaccess="readonly">
          <shortdesc>Brazillian Portuguese.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="SPANISH" rwaccess="readonly">
          <shortdesc>Spanish.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="SWEDISH" rwaccess="readonly">
          <shortdesc>Swedish.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="DUTCH" rwaccess="readonly">
          <shortdesc>Dutch.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="DANISH" rwaccess="readonly">
          <shortdesc>Danish.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TextType" enumeration="true">
      <shortdesc>The type of text.</shortdesc>
      <elements type="class">
        <property name="POINTTEXT" rwaccess="readonly">
          <shortdesc>Text that does not wrap.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PARAGRAPHTEXT" rwaccess="readonly">
          <shortdesc>Text that wraps within a bounding box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="WarpStyle" enumeration="true">
      <shortdesc>The warp style for text.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No warp.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ARC" rwaccess="readonly">
          <shortdesc>The type is warped in the shape of an arc.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="ARCLOWER" rwaccess="readonly">
          <shortdesc>Warp is heavier on the lower or left edge of the text than on the upper or right edge.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="ARCUPPER" rwaccess="readonly">
          <shortdesc>Warp is heavier on the upper or right edge of the text than on the lower or left edge.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="ARCH" rwaccess="readonly">
          <shortdesc>Text is warped in the form of an arch.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="BULGE" rwaccess="readonly">
          <shortdesc>Text is warped outward on both the upper and lower or right and left edges.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="SHELLLOWER" rwaccess="readonly">
          <shortdesc>Text is warped downward or to the right in the shape of a fan-like seashell.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="SHELLUPPER" rwaccess="readonly">
          <shortdesc>Text is warped upward or to the left in the shape of a fan-like seashell.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="FLAG" rwaccess="readonly">
          <shortdesc>Text is warped in the shape of a waving flag.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="WAVE" rwaccess="readonly">
          <shortdesc>Text is warped in the shape of a wave.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="FISH" rwaccess="readonly">
          <shortdesc>Text is warped in the shape of a fish.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="RISE" rwaccess="readonly">
          <shortdesc>Text is warped in an undulating, rising pattern.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="FISHEYE" rwaccess="readonly">
          <shortdesc>Text bulges in the middle and is squeezed on the edges as if viewed through a fisheye lens.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="INFLATE" rwaccess="readonly">
          <shortdesc>Text is inflated.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="SQUEEZE" rwaccess="readonly">
          <shortdesc>Text is squeezed.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="TWIST" rwaccess="readonly">
          <shortdesc>Text is twisted.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TextComposer" enumeration="true">
      <shortdesc>The text composer.</shortdesc>
      <elements type="class">
        <property name="ADOBESINGLELINE" rwaccess="readonly">
          <shortdesc>Offers a traditional approach to composing type one line at a time. Useful if you prefer to have manual control over how lines break.</shortdesc>
          <description>Uses the following principles when considering a breakpoint: Compressed or expanded word spacing is preferable to hyphenation; Hyphenation is preferable to compressed or expanded letter spacing; If spacing must be adjusted, compression is better than expansion.</description>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ADOBEEVERYLINE" rwaccess="readonly">
          <shortdesc>Considers a network of break points for a range of lines and thus optimizes earlier lines in the paragraph to eliminate especially unattractive breaks later on. Results in more even spacing and fewer hyphens.</shortdesc>
          <description>The Adobe Every-line composer approaches composition by identifying possible breakpoints, evaluating them, and assigning a weighted penalty based on these principles: Highest importance is given to evenness of letter and word spacing; Possible breakpoints are evaluated and penalized according to how much they deviate from optimal spacing; Hyphenation is avoided when possible; Breakpoints that require hyphenation are penalized more than those that create uneven spacing; Good breakpoints are preferred over bad breakpoints.</description>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="AutoKernType" enumeration="true">
      <shortdesc>The type of kerning to use for characters.</shortdesc>
      <elements type="class">
        <property name="MANUAL" rwaccess="readonly">
          <shortdesc>Allows manual kerning.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="METRICS" rwaccess="readonly">
          <shortdesc>Uses kern pairs, which contain information about the spacing of specific pairs of letters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="OPTICAL" rwaccess="readonly">
          <shortdesc>Adjusts the spacing between adjacent characters based on their shapes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="StrikeThruType" enumeration="true">
      <shortdesc>The strikethrough style.</shortdesc>
      <elements type="class">
        <property name="STRIKEOFF" rwaccess="readonly">
          <shortdesc>No strikethrough.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="STRIKEHEIGHT" rwaccess="readonly">
          <shortdesc>(For vertical type) The strikethrough is through the height of the text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="STRIKEBOX" rwaccess="readonly">
          <shortdesc>(For vertical type) The strikethrough is through the em box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="UnderlineType" enumeration="true">
      <shortdesc>The type of underline.</shortdesc>
      <elements type="class">
        <property name="UNDERLINEOFF" rwaccess="readonly">
          <shortdesc>No underline.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="UNDERLINERIGHT" rwaccess="readonly">
          <shortdesc>(For vertical type) The underline is to the right of the text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="UNDERLINELEFT" rwaccess="readonly">
          <shortdesc>(For vertical type) The underline is to the left of the text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SelectionType" enumeration="true">
      <shortdesc>The selection behavior when a selection already exists.</shortdesc>
      <elements type="class">
        <property name="REPLACE" rwaccess="readonly">
          <shortdesc>Replace the selected area.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="EXTEND" rwaccess="readonly">
          <shortdesc>Add the selection to an already selected area.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DIMINISH" rwaccess="readonly">
          <shortdesc>Remove the selection from the already selected area.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="INTERSECT" rwaccess="readonly">
          <shortdesc>Make the selection only the area where the new selection intersects the already selected area.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ExportType" enumeration="true">
      <shortdesc>The export options to use.</shortdesc>
      <elements type="class">
        <property name="ILLUSTRATORPATHS" rwaccess="readonly">
          <shortdesc>Exports Photoshop paths as Adobe Illustrator files.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SAVEFORWEB" rwaccess="readonly">
          <shortdesc>Uses the save for web export options.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="IllustratorPathType" enumeration="true">
      <shortdesc>The paths to export.</shortdesc>
      <elements type="class">
        <property name="DOCUMENTBOUNDS" rwaccess="readonly">
          <shortdesc>Exports the document bounds.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ALLPATHS" rwaccess="readonly">
          <shortdesc>Exports all paths.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="NAMEDPATH" rwaccess="readonly">
          <shortdesc>Exports the specified path. To specify the path, see the path name property of the illustrator export options object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ChannelType" enumeration="true">
      <shortdesc>The type of channel.</shortdesc>
      <elements type="class">
        <property name="COMPONENT" rwaccess="readonly">
          <shortdesc>The channel related to the document color model.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MASKEDAREA" rwaccess="readonly">
          <shortdesc>The apha channel where color indicates a masked area.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SELECTEDAREA" rwaccess="readonly">
          <shortdesc>The lpha channel where color indicates a selected area.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="SPOTCOLOR" rwaccess="readonly">
          <shortdesc>The alpha channel to store a spot color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RadialBlurMethod" enumeration="true">
      <shortdesc>The blur method to use.</shortdesc>
      <elements type="class">
        <property name="SPIN" rwaccess="readonly">
          <shortdesc>Blurs along concentric circular lines at the specified degree of rotation.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ZOOM" rwaccess="readonly">
          <shortdesc>Blurs along radial lines, as if zooming into or out of the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RadialBlurQuality" enumeration="true">
      <shortdesc>The radial blur quality.</shortdesc>
      <elements type="class">
        <property name="DRAFT" rwaccess="readonly">
          <shortdesc>Produces fast but grainy results.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="GOOD" rwaccess="readonly">
          <shortdesc>Produces good results.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="BEST" rwaccess="readonly">
          <shortdesc>Produces best results.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SmartBlurQuality" enumeration="true">
      <shortdesc>The smart blur quality.</shortdesc>
      <elements type="class">
        <property name="LOW" rwaccess="readonly">
          <shortdesc>Low quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>Medium quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="HIGH" rwaccess="readonly">
          <shortdesc>High quality.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SmartBlurMode" enumeration="true">
      <shortdesc>The method to use for smart blurring.</shortdesc>
      <elements type="class">
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Blur is applied to entire image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="EDGEONLY" rwaccess="readonly">
          <shortdesc>Blur is applied only to edges of color transitions.</shortdesc>
          <description>Where significant contrast occurs, applies black-and-white edges.</description>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="OVERLAYEDGE" rwaccess="readonly">
          <shortdesc>Blur is applied only to edges of color transitions.</shortdesc>
          <description>Where significant contrast occurs, applies white edges.</description>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TextureType" enumeration="true">
      <shortdesc>The type of texture or glass surface image to load for a texturizer or glass filter.</shortdesc>
      <elements type="class">
        <property name="BLOCKS" rwaccess="readonly">
          <shortdesc>The image appears as if viewed through glass blocks.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CANVAS" rwaccess="readonly">
          <shortdesc>The image appears as if painted on canvas.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FROSTED" rwaccess="readonly">
          <shortdesc>The image appears as if frosted.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="TINYLENS" rwaccess="readonly">
          <shortdesc>The image appears as if viewed through an array of tiny lenses.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="FILE" rwaccess="readonly">
          <shortdesc>Texture from an existing document.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PolarConversionType" enumeration="true">
      <shortdesc>The method of polar distortion to use.</shortdesc>
      <elements type="class">
        <property name="RECTANGULARTOPOLAR" rwaccess="readonly">
          <shortdesc>The selection is converted from its rectangular to polar coordinates.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="POLARTORECTANGULAR" rwaccess="readonly">
          <shortdesc>The selection is converted from its polar to rectangular coordinates.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RippleSize" enumeration="true">
      <shortdesc>The size of undulations.</shortdesc>
      <elements type="class">
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>Small.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>Medium.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>Large.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="UndefinedAreas" enumeration="true">
      <shortdesc>The method to use to treat undistorted areas or areas left blank in an image to which a filter in the Distort category has been applied.</shortdesc>
      <elements type="class">
        <property name="WRAPAROUND" rwaccess="readonly">
          <shortdesc>Fills the undefined space with content from the opposite edge of the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="REPEATEDGEPIXELS" rwaccess="readonly">
          <shortdesc>Extends the colors of pixels along the edge of the image in the direction specified. Banding may result if the edge pixels are different colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="OffsetUndefinedAreas" enumeration="true">
      <shortdesc>The method to use to fill the empty space left by offsetting a an image or selection.</shortdesc>
      <elements type="class">
        <property name="SETTOBACKGROUND" rwaccess="readonly">
          <shortdesc>For background layers, sets pixels to the background layer color. For nonbackground layers, sets the pixels to transparent.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="WRAPAROUND" rwaccess="readonly">
          <shortdesc>Fills the undefined space with content from the opposite edge of the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="REPEATEDGEPIXELS" rwaccess="readonly">
          <shortdesc>Extends the colors of pixels along the edge of the image in the direction specified. Banding may result if the edge pixels are different colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SpherizeMode" enumeration="true">
      <shortdesc>The curve (or stretch shape) to use for the distortion.</shortdesc>
      <elements type="class">
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Distorts the image as if it is wrapped around a sphere.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="HORIZONTAL" rwaccess="readonly">
          <shortdesc>Distorts the image as if it is wrapped around a horizontal cylinder.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="VERTICAL" rwaccess="readonly">
          <shortdesc>Distorts the image as if it is wrapped around a vertical cylinder.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DisplacementMapType" enumeration="true">
      <shortdesc>Describes how the displacement map fits the image if the image is not the same size as the map.</shortdesc>
      <elements type="class">
        <property name="STRETCHTOFIT" rwaccess="readonly">
          <shortdesc>The map is resized.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TILE" rwaccess="readonly">
          <shortdesc>The selection is filled by repeating the map in a pattern.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="WaveType" enumeration="true">
      <shortdesc>The type of wave.</shortdesc>
      <elements type="class">
        <property name="SINE" rwaccess="readonly">
          <shortdesc>Rolling.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TRIANGULAR" rwaccess="readonly">
          <shortdesc>Triangular.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SQUARE" rwaccess="readonly">
          <shortdesc>Square.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ZigZagType" enumeration="true">
      <shortdesc>The method of zigzagging.</shortdesc>
      <elements type="class">
        <property name="AROUNDCENTER" rwaccess="readonly">
          <shortdesc>Pixels are rotated around the center of the selection.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="OUTFROMCENTER" rwaccess="readonly">
          <shortdesc>Pixels are displaced toward or away from the center of the selection.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PONDRIPPLES" rwaccess="readonly">
          <shortdesc>Pixels are displaced to the upper left or lower right.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="NoiseDistribution" enumeration="true">
      <shortdesc>The distribution method to use when applying an Add Noise filter.</shortdesc>
      <elements type="class">
        <property name="UNIFORM" rwaccess="readonly">
          <shortdesc>Distributes color values of noise using random numbers between 0 and plus or minus the specified value, creating a subtle effect.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="GAUSSIAN" rwaccess="readonly">
          <shortdesc>Distributes color values of noise along a bell-shaped curve, creating a speckled effect.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="LensType" enumeration="true">
      <shortdesc>The type of lens.</shortdesc>
      <elements type="class">
        <property name="ZOOMLENS" rwaccess="readonly">
          <shortdesc>50-300mm Zoom.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PRIME35" rwaccess="readonly">
          <shortdesc>35mm Prime.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PRIME105" rwaccess="readonly">
          <shortdesc>105mm Prime.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="MOVIEPRIME" rwaccess="readonly">
          <shortdesc>Movie Prime.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="EliminateFields" enumeration="true">
      <shortdesc>The type of fields to eliminate.</shortdesc>
      <elements type="class">
        <property name="ODDFIELDS" rwaccess="readonly">
          <shortdesc>Eliminate odd interlaced lines in a video image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="EVENFIELDS" rwaccess="readonly">
          <shortdesc>Eliminate even interlaced lines in a video image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CreateFields" enumeration="true">
      <shortdesc>The method for replacing eliminated fields.</shortdesc>
      <elements type="class">
        <property name="DUPLICATION" rwaccess="readonly">
          <shortdesc>Duplicates existing pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="INTERPOLATION" rwaccess="readonly">
          <shortdesc>Assigns color values to any new pixels that Photoshop creates based on the color values of existing pixels in the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PhotoCDSize" enumeration="true">
      <shortdesc>The pixel dimensions of the image.</shortdesc>
      <elements type="class">
        <property name="MINIMUM" rwaccess="readonly">
          <shortdesc>64x96 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>128x192 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>256x384 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>512x768 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="EXTRALARGE" rwaccess="readonly">
          <shortdesc>1024x1536 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="MAXIMUM" rwaccess="readonly">
          <shortdesc>2048x3072 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BitsPerChannelType" enumeration="true">
      <shortdesc>The number of bits per color channel.</shortdesc>
      <elements type="class">
        <property name="ONE" rwaccess="readonly">
          <shortdesc>1 bit per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="EIGHT" rwaccess="readonly">
          <shortdesc>8 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="SIXTEEN" rwaccess="readonly">
          <shortdesc>16 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="THIRTYTWO" rwaccess="readonly">
          <shortdesc>32 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>32</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PICTBitsPerPixels" enumeration="true">
      <shortdesc>The number of bits per pixel to use when compressing a PICT file.</shortdesc>
      <elements type="class">
        <property name="TWO" rwaccess="readonly">
          <shortdesc>2 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FOUR" rwaccess="readonly">
          <shortdesc>4 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="EIGHT" rwaccess="readonly">
          <shortdesc>8 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="SIXTEEN" rwaccess="readonly">
          <shortdesc>16 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="THIRTYTWO" rwaccess="readonly">
          <shortdesc>32 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>32</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TargaBitsPerPixels" enumeration="true">
      <shortdesc>The resolution to use when saving an image in Targa format.</shortdesc>
      <elements type="class">
        <property name="SIXTEEN" rwaccess="readonly">
          <shortdesc>16 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="TWENTYFOUR" rwaccess="readonly">
          <shortdesc>24 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>24</value>
          </datatype>
        </property>
        <property name="THIRTYTWO" rwaccess="readonly">
          <shortdesc>32 bits per pixel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>32</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DescValueType" enumeration="true">
      <shortdesc>The value type of an object.</shortdesc>
      <elements type="class">
        <property name="INTEGERTYPE" rwaccess="readonly">
          <shortdesc>Integer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DOUBLETYPE" rwaccess="readonly">
          <shortdesc>Double.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="UNITDOUBLE" rwaccess="readonly">
          <shortdesc>Unit value of type double.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="STRINGTYPE" rwaccess="readonly">
          <shortdesc>String.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BOOLEANTYPE" rwaccess="readonly">
          <shortdesc>Boolean.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="LISTTYPE" rwaccess="readonly">
          <shortdesc>Action list.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="OBJECTTYPE" rwaccess="readonly">
          <shortdesc>Object.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="ENUMERATEDTYPE" rwaccess="readonly">
          <shortdesc>Enumeration.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="REFERENCETYPE" rwaccess="readonly">
          <shortdesc>Reference.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="CLASSTYPE" rwaccess="readonly">
          <shortdesc>Class.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="ALIASTYPE" rwaccess="readonly">
          <shortdesc>Alias.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="RAWTYPE" rwaccess="readonly">
          <shortdesc>Raw.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="LARGEINTEGERTYPE" rwaccess="readonly">
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ReferenceFormType" enumeration="true">
      <shortdesc>The type of action reference object.</shortdesc>
      <elements type="class">
        <property name="NAME" rwaccess="readonly">
          <shortdesc>Name.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="INDEX" rwaccess="readonly">
          <shortdesc>Index.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="IDENTIFIER" rwaccess="readonly">
          <shortdesc>Identifier.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="OFFSET" rwaccess="readonly">
          <shortdesc>Offset.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="ENUMERATED" rwaccess="readonly">
          <shortdesc>Enumerated.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="PROPERTY" rwaccess="readonly">
          <shortdesc>Property.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="CLASSTYPE" rwaccess="readonly">
          <shortdesc>Class.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BMPDepthType" enumeration="true">
      <shortdesc>The number of bits per channel (also called pixel depth or color depth). The number selected indicates the exponent of 2. For example, a pixel with a bit-depth of EIGHT has 2-to-the-8th, or 256, possible color values.</shortdesc>
      <elements type="class">
        <property name="ONE" rwaccess="readonly">
          <shortdesc>1 bit depth.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="FOUR" rwaccess="readonly">
          <shortdesc>4 bits depth.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="EIGHT" rwaccess="readonly">
          <shortdesc>8 bits depth.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="SIXTEEN" rwaccess="readonly">
          <shortdesc>16 bits depth.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="TWENTYFOUR" rwaccess="readonly">
          <shortdesc>24 bits depth.</shortdesc>
          <datatype>
            <type>int</type>
            <value>24</value>
          </datatype>
        </property>
        <property name="THIRTYTWO" rwaccess="readonly">
          <shortdesc>32 bits depth.</shortdesc>
          <datatype>
            <type>int</type>
            <value>32</value>
          </datatype>
        </property>
        <property name="BMP_X1R5G5B5" rwaccess="readonly">
          <shortdesc>X1 R5 G5 B5 advanced bit depth specification (same as normal 16 bit mode)</shortdesc>
          <datatype>
            <type>int</type>
            <value>60</value>
          </datatype>
        </property>
        <property name="BMP_A1R5G5B5" rwaccess="readonly">
          <shortdesc>A1 R5 G5 B5 advanced bit depth specification.</shortdesc>
          <datatype>
            <type>int</type>
            <value>61</value>
          </datatype>
        </property>
        <property name="BMP_R5G6B5" rwaccess="readonly">
          <shortdesc>R5 G6 B5 advanced bit depth specification.</shortdesc>
          <datatype>
            <type>int</type>
            <value>62</value>
          </datatype>
        </property>
        <property name="BMP_X4R4G4B4" rwaccess="readonly">
          <shortdesc>X4 R4 G4 B4 advanced bit depth specification.</shortdesc>
          <datatype>
            <type>int</type>
            <value>63</value>
          </datatype>
        </property>
        <property name="BMP_A4R4G4B4" rwaccess="readonly">
          <shortdesc>A4 R4 G4 B4 advanced bit depth specification.</shortdesc>
          <datatype>
            <type>int</type>
            <value>64</value>
          </datatype>
        </property>
        <property name="BMP_R8G8B8" rwaccess="readonly">
          <shortdesc>R8 G8 B8 advanced bit depth specification (same as normal 24 bit mode)</shortdesc>
          <datatype>
            <type>int</type>
            <value>65</value>
          </datatype>
        </property>
        <property name="BMP_X8R8G8B8" rwaccess="readonly">
          <shortdesc>X8 R8 G8 B8 advanced bit depth specification.</shortdesc>
          <datatype>
            <type>int</type>
            <value>66</value>
          </datatype>
        </property>
        <property name="BMP_A8R8G8B8" rwaccess="readonly">
          <shortdesc>A8 R8 G8 B8 advanced bit depth specification (same as normal 32 bit mode)</shortdesc>
          <datatype>
            <type>int</type>
            <value>67</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CopyrightedType" enumeration="true">
      <shortdesc>The copyright status of the document.</shortdesc>
      <elements type="class">
        <property name="COPYRIGHTEDWORK" rwaccess="readonly">
          <shortdesc>The document is copyrighted.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PUBLICDOMAIN" rwaccess="readonly">
          <shortdesc>The document is in the public domain.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="UNMARKED" rwaccess="readonly">
          <shortdesc>The copyright status is not indicated.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BitmapConversionType" enumeration="true">
      <shortdesc>The quality of an image converted to bitmap mode.</shortdesc>
      <elements type="class">
        <property name="HALFTHRESHOLD" rwaccess="readonly">
          <shortdesc>50% Threshold.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PATTERNDITHER" rwaccess="readonly">
          <shortdesc>Applies a halftone-like square pattern to determine the value of pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DIFFUSIONDITHER" rwaccess="readonly">
          <shortdesc>Applies a random pattern that is usually less noticeable than pattern dither. The dither effects are diffused across adjacent pixels. If you select this algorithm, specify a dither percentage to control the amount of dithering applied to the image.</shortdesc>
          <description>May cause detectable seams to appear across slice boundaries. Linking slices diffuses the dither pattern across all linked slices, and eliminates the seams.</description>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="HALFTONESCREEN" rwaccess="readonly">
          <shortdesc>Lets you convert a grayscale image to simulated halftone dots.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="CUSTOMPATTERN" rwaccess="readonly">
          <shortdesc>Simulates the effect of printing a grayscale image through a custom halftone screen. This method lets you apply a screen texture, such as a wood grain, to an image. To use this option, you must first define a pattern.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BitmapHalfToneType" enumeration="true">
      <shortdesc>The shape of the dots (ink deposits) in the halftone screen.</shortdesc>
      <elements type="class">
        <property name="ROUND" rwaccess="readonly">
          <shortdesc>Round.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DIAMOND" rwaccess="readonly">
          <shortdesc>Diamond.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="ELLIPSE" rwaccess="readonly">
          <shortdesc>Ellipse.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LINE" rwaccess="readonly">
          <shortdesc>Line.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="SQUARE" rwaccess="readonly">
          <shortdesc>Square.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="CROSS" rwaccess="readonly">
          <shortdesc>Cross.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MatteType" enumeration="true">
      <shortdesc>The color to use for matting.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>None.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="FOREGROUND" rwaccess="readonly">
          <shortdesc>The current foreground color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="BACKGROUND" rwaccess="readonly">
          <shortdesc>The current background color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="WHITE" rwaccess="readonly">
          <shortdesc>White.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BLACK" rwaccess="readonly">
          <shortdesc>Black.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="SEMIGRAY" rwaccess="readonly">
          <shortdesc>50% gray.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="NETSCAPE" rwaccess="readonly">
          <shortdesc>Gray.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="AdjustmentReference" enumeration="true">
      <shortdesc>Method to use for interpreting selective color adjustment specifications.</shortdesc>
      <elements type="class">
        <property name="RELATIVE" rwaccess="readonly">
          <shortdesc>A percentage of the existing color amount.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ABSOLUTE" rwaccess="readonly">
          <shortdesc>A percentage of the whole.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="OpenDocumentMode" enumeration="true">
      <shortdesc>The color profile to use.</shortdesc>
      <elements type="class">
        <property name="GRAYSCALE" rwaccess="readonly">
          <shortdesc>Grayscale.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="RGB" rwaccess="readonly">
          <shortdesc>RGB.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CMYK" rwaccess="readonly">
          <shortdesc>CMYK.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAB" rwaccess="readonly">
          <shortdesc>Lab.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="NewDocumentMode" enumeration="true">
      <shortdesc>The color profile to use.</shortdesc>
      <elements type="class">
        <property name="GRAYSCALE" rwaccess="readonly">
          <shortdesc>Grayscale.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="RGB" rwaccess="readonly">
          <shortdesc>RGB.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CMYK" rwaccess="readonly">
          <shortdesc>CMYK.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAB" rwaccess="readonly">
          <shortdesc>Lab.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BITMAP" rwaccess="readonly">
          <shortdesc>Bitmap.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PhotoCDColorSpace" enumeration="true">
      <shortdesc>Deprecated.</shortdesc>
      <elements type="class">
        <property name="RGB8" rwaccess="readonly">
          <shortdesc>RGB with 8 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="RGB16" rwaccess="readonly">
          <shortdesc>RGB with 16 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LAB8" rwaccess="readonly">
          <shortdesc>Lab with 8 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAB16" rwaccess="readonly">
          <shortdesc>Lab with 16 bits per channel.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="StrokeLocation" enumeration="true">
      <shortdesc>The placement of path or selection boundary strokes.</shortdesc>
      <elements type="class">
        <property name="INSIDE" rwaccess="readonly">
          <shortdesc>The border is placed inside the selection or layer boundaries.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CENTER" rwaccess="readonly">
          <shortdesc>The border is placed in the center of the the selection or layer boundaries.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="OUTSIDE" rwaccess="readonly">
          <shortdesc>The border is placed outside the selection or layer boundaries.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ColorModel" enumeration="true">
      <shortdesc>Color models.</shortdesc>
      <elements type="class">
        <property name="GRAYSCALE" rwaccess="readonly">
          <shortdesc>Grayscale.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="RGB" rwaccess="readonly">
          <shortdesc>RGB.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CMYK" rwaccess="readonly">
          <shortdesc>CMYK.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="LAB" rwaccess="readonly">
          <shortdesc>Lab.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="HSB" rwaccess="readonly">
          <shortdesc>HSB.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="NONE" rwaccess="readonly">
          <shortdesc>The color model has not yet been assigned.</shortdesc>
          <datatype>
            <type>int</type>
            <value>50</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="JavaScriptExecutionMode" enumeration="true">
      <shortdesc>When should a JavaScript debugger be shown.</shortdesc>
      <elements type="class">
        <property name="NEVER" rwaccess="readonly">
          <shortdesc>Never show the JavaScript debugger. Treat runtime errors by throwing a JavaScript exceptions.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ONRUNTIMEERROR" rwaccess="readonly">
          <shortdesc>Show the JavaScript debugger if a runtime error occurs.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="BEFORERUNNING" rwaccess="readonly">
          <shortdesc>Show the JavaScript debugger when the first line of the JavaScript executes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SourceSpaceType" enumeration="true">
      <shortdesc>The color space for the source when printing.</shortdesc>
      <elements type="class">
        <property name="DOCUMENT" rwaccess="readonly">
          <shortdesc>The document color space.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PROOF" rwaccess="readonly">
          <shortdesc>The proof color space.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="LayerKind" enumeration="true">
      <shortdesc>The types of art layers.</shortdesc>
      <elements type="class">
        <property name="NORMAL" rwaccess="readonly">
          <shortdesc>Normal.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TEXT" rwaccess="readonly">
          <shortdesc>Text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SOLIDFILL" rwaccess="readonly">
          <shortdesc>Solid color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="GRADIENTFILL" rwaccess="readonly">
          <shortdesc>Gradient fill.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="PATTERNFILL" rwaccess="readonly">
          <shortdesc>Pattern fill.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="LEVELS" rwaccess="readonly">
          <shortdesc>Levels adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="CURVES" rwaccess="readonly">
          <shortdesc>Curves adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="COLORBALANCE" rwaccess="readonly">
          <shortdesc>Color balance adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="BRIGHTNESSCONTRAST" rwaccess="readonly">
          <shortdesc>Brightness contrast adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="HUESATURATION" rwaccess="readonly">
          <shortdesc>Hue saturation adjustment laye.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="SELECTIVECOLOR" rwaccess="readonly">
          <shortdesc>Selective color adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="CHANNELMIXER" rwaccess="readonly">
          <shortdesc>Channel mixer adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="GRADIENTMAP" rwaccess="readonly">
          <shortdesc>Gradient map adjustment laye.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="INVERSION" rwaccess="readonly">
          <shortdesc>Invert adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="THRESHOLD" rwaccess="readonly">
          <shortdesc>Threshold adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="POSTERIZE" rwaccess="readonly">
          <shortdesc>Posterize adjustment layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="SMARTOBJECT" rwaccess="readonly">
          <shortdesc>Smart object layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="PHOTOFILTER" rwaccess="readonly">
          <shortdesc>Photo filter layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
        <property name="EXPOSURE" rwaccess="readonly">
          <shortdesc>Exposure layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>19</value>
          </datatype>
        </property>
        <property name="LAYER3D" rwaccess="readonly">
          <shortdesc>3D layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>20</value>
          </datatype>
        </property>
        <property name="VIDEO" rwaccess="readonly">
          <shortdesc>Video layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>21</value>
          </datatype>
        </property>
        <property name="BLACKANDWHITE" rwaccess="readonly">
          <shortdesc>Black and white layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>22</value>
          </datatype>
        </property>
        <property name="VIBRANCE" rwaccess="readonly">
          <shortdesc>Vibrance layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>23</value>
          </datatype>
        </property>
        <property name="COLORLOOKUP" rwaccess="readonly">
          <shortdesc>Color lookup layer.</shortdesc>
          <datatype>
            <type>int</type>
            <value>24</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TransitionType" enumeration="true">
      <shortdesc>PDF presentation transition types.</shortdesc>
      <elements type="class">
        <property name="BLINDSHORIZONTAL" rwaccess="readonly">
          <shortdesc>Images transition in horizontal stripes like Venetian blinds.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BLINDSVERTICAL" rwaccess="readonly">
          <shortdesc>Images transition in vertical stripes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DISSOLVE" rwaccess="readonly">
          <shortdesc>One image dissolves into the next.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="BOXIN" rwaccess="readonly">
          <shortdesc>Images transition using a shrinking box shape.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BOXOUT" rwaccess="readonly">
          <shortdesc>Images transition using an expanding box shape.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="GLITTERDOWN" rwaccess="readonly">
          <shortdesc>Images dissolve top to bottom.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="GLITTERRIGHT" rwaccess="readonly">
          <shortdesc>Images dissolve left to right.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="GLITTERRIGHTDOWN" rwaccess="readonly">
          <shortdesc>Images dissolve top-left to bottom-right.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="NONE" rwaccess="readonly">
          <shortdesc>Images change with no visible transition.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="RANDOM" rwaccess="readonly">
          <shortdesc>Images transition using random effects.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="SPLITHORIZONTALIN" rwaccess="readonly">
          <shortdesc>The new images roll in from the top and bottom of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="SPLITHORIZONTALOUT" rwaccess="readonly">
          <shortdesc>The new image spreads from the middle of the screen to the top and bottom of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="SPLITVERTICALIN" rwaccess="readonly">
          <shortdesc>The new image rolls in from the left and right edges of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="SPLITVERTICALOUT" rwaccess="readonly">
          <shortdesc>The new image rolls out from the middle of the screen to the left and right edges of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="WIPEDOWN" rwaccess="readonly">
          <shortdesc>The new image rolls in from the top of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="WIPELEFT" rwaccess="readonly">
          <shortdesc>The new image rolls in from the right side of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="WIPERIGHT" rwaccess="readonly">
          <shortdesc>The new image rolls in from the left side of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="WIPEUP" rwaccess="readonly">
          <shortdesc>The new image rolls in from the bottom of the screen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryFontType" enumeration="true">
      <shortdesc>Fonts for web photo gallery text.</shortdesc>
      <elements type="class">
        <property name="ARIAL" rwaccess="readonly">
          <shortdesc>Arial font.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="COURIERNEW" rwaccess="readonly">
          <shortdesc>Courier New font.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="HELVETICA" rwaccess="readonly">
          <shortdesc>Helvetica font.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="TIMESNEWROMAN" rwaccess="readonly">
          <shortdesc>Times New Roman font.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryConstrainType" enumeration="true">
      <shortdesc>DEPRECATED. Constrain values for images.</shortdesc>
      <elements type="class">
        <property name="CONSTRAINWIDTH" rwaccess="readonly">
          <shortdesc>Constrain width.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CONSTRAINHEIGHT" rwaccess="readonly">
          <shortdesc>Constrain the height of the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CONSTRAINBOTH" rwaccess="readonly">
          <shortdesc>Constrain both the height and the width of the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryThumbSizeType" enumeration="true">
      <shortdesc>DEPRECATED. Web photo gallery thumb size types.</shortdesc>
      <elements type="class">
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>Small thumbnail.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>Medium thumbnail.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>Large thumbnail.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="CUSTOM" rwaccess="readonly">
          <shortdesc>Custom thumbnail.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GallerySecurityType" enumeration="true">
      <shortdesc>DEPRECATED. Web photo gallery security types.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CUSTOMTEXT" rwaccess="readonly">
          <shortdesc>Custom text security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FILENAME" rwaccess="readonly">
          <shortdesc>Filename security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="COPYRIGHT" rwaccess="readonly">
          <shortdesc>Copyright security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="CAPTION" rwaccess="readonly">
          <shortdesc>Caption security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="CREDIT" rwaccess="readonly">
          <shortdesc>Credit security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="TITLE" rwaccess="readonly">
          <shortdesc>Title security.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PicturePackageTextType" enumeration="true">
      <shortdesc>The function or meaning of text in a Picture Package.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="USER" rwaccess="readonly">
          <shortdesc>The text is user defined.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FILENAME" rwaccess="readonly">
          <shortdesc>The text is the filename.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="COPYRIGHT" rwaccess="readonly">
          <shortdesc>The text is the copyright.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="CAPTION" rwaccess="readonly">
          <shortdesc>The text is a caption.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="CREDIT" rwaccess="readonly">
          <shortdesc>The text is the credit.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="ORIGIN" rwaccess="readonly">
          <shortdesc>The text is the origin.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GallerySecurityTextColorType" enumeration="true">
      <shortdesc>The color to use for text displayed over gallery images as an antitheft deterrent.</shortdesc>
      <elements type="class">
        <property name="BLACK" rwaccess="readonly">
          <shortdesc>Black text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="WHITE" rwaccess="readonly">
          <shortdesc>White text.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CUSTOM" rwaccess="readonly">
          <shortdesc>Custom color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GallerySecurityTextPositionType" enumeration="true">
      <shortdesc>The position of the text displayed over gallery images as an antitheft deterrent.</shortdesc>
      <elements type="class">
        <property name="CENTERED" rwaccess="readonly">
          <shortdesc>Text is centered on each image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="UPPERLEFT" rwaccess="readonly">
          <shortdesc>Text is in the upper left corner of each image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LOWERLEFT" rwaccess="readonly">
          <shortdesc>Ltext is in the lower left corner of each image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="UPPERRIGHT" rwaccess="readonly">
          <shortdesc>Text is in the upper right corner of each image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="LOWERRIGHT" rwaccess="readonly">
          <shortdesc>Text is in the lower right corner of each image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GallerySecurityTextRotateType" enumeration="true">
      <shortdesc>DEPRECATED. web photo gallery security text rotation types.</shortdesc>
      <elements type="class">
        <property name="ZERO" rwaccess="readonly">
          <shortdesc>No rotate.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CLOCKWISE45" rwaccess="readonly">
          <shortdesc>Rotate 45 degrees clock wise.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CLOCKWISE90" rwaccess="readonly">
          <shortdesc>Rotate 90 degrees clock wise.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="COUNTERCLOCKWISE45" rwaccess="readonly">
          <shortdesc>Rotate 45 degrees counter clock wise.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="COUNTERCLOCKWISE90" rwaccess="readonly">
          <shortdesc>Rotate 90 degrees counter clock wise.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="QueryStateType" enumeration="true">
      <shortdesc>The permission state for queries.</shortdesc>
      <elements type="class">
        <property name="ALWAYS" rwaccess="readonly">
          <shortdesc>Always maximize compatibility.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ASK" rwaccess="readonly">
          <shortdesc>Always ask about maximize compatibility.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="NEVER" rwaccess="readonly">
          <shortdesc>Never ask about maximize compatibility.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SaveLogItemsType" enumeration="true">
      <shortdesc>The location of history log data.</shortdesc>
      <elements type="class">
        <property name="METADATA" rwaccess="readonly">
          <shortdesc>Save history log in file metadata.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="LOGFILE" rwaccess="readonly">
          <shortdesc>Save history log in a text file.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LOGFILEANDMETADATA" rwaccess="readonly">
          <shortdesc>Save history log in file metadata and a text file.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="EditLogItemsType" enumeration="true">
      <shortdesc>The history log edit options.</shortdesc>
      <elements type="class">
        <property name="SESSIONONLY" rwaccess="readonly">
          <shortdesc>Save a history for only for the session.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CONCISE" rwaccess="readonly">
          <shortdesc>Save a concise history log.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DETAILED" rwaccess="readonly">
          <shortdesc>Save a detailed history log.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PathKind" enumeration="true">
      <shortdesc>The type of path.</shortdesc>
      <elements type="class">
        <property name="NORMALPATH" rwaccess="readonly">
          <shortdesc>Normal path.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CLIPPINGPATH" rwaccess="readonly">
          <shortdesc>Clipping path.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="WORKPATH" rwaccess="readonly">
          <shortdesc>Workpath.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="VECTORMASK" rwaccess="readonly">
          <shortdesc>Vector mask path.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="TEXTMASK" rwaccess="readonly">
          <shortdesc>Text mask path.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ShapeOperation" enumeration="true">
      <shortdesc>Specifies how to combine the shapes if the destination image already has a selection.</shortdesc>
      <elements type="class">
        <property name="SHAPEADD" rwaccess="readonly">
          <shortdesc>Adds the shapes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SHAPEXOR" rwaccess="readonly">
          <shortdesc>Replaces the shape in the destination image with the loaded selection.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SHAPEINTERSECT" rwaccess="readonly">
          <shortdesc>The resulting shape is the area of intersection between the two shapes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="SHAPESUBTRACT" rwaccess="readonly">
          <shortdesc>Subtracts the loaded shape from the selection is the destination image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PointKind" enumeration="true">
      <shortdesc>The path point kind.</shortdesc>
      <elements type="class">
        <property name="SMOOTHPOINT" rwaccess="readonly">
          <shortdesc>The point can be a curve.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CORNERPOINT" rwaccess="readonly">
          <shortdesc>The point must be a corner.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ToolType" enumeration="true">
      <shortdesc>Tools for the stroke path command.</shortdesc>
      <elements type="class">
        <property name="PENCIL" rwaccess="readonly">
          <shortdesc>Pencil.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="BRUSH" rwaccess="readonly">
          <shortdesc>Brush.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="ERASER" rwaccess="readonly">
          <shortdesc>Eraser.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="BACKGROUNDERASER" rwaccess="readonly">
          <shortdesc>Background eraser.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="CLONESTAMP" rwaccess="readonly">
          <shortdesc>Clone stamp.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="PATTERNSTAMP" rwaccess="readonly">
          <shortdesc>Pattern stamp.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="HEALINGBRUSH" rwaccess="readonly">
          <shortdesc>Healing brush.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="HISTORYBRUSH" rwaccess="readonly">
          <shortdesc>History brush.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="ARTHISTORYBRUSH" rwaccess="readonly">
          <shortdesc>Art history brush.</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="SMUDGE" rwaccess="readonly">
          <shortdesc>Smudge.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="BLUR" rwaccess="readonly">
          <shortdesc>Blur.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="SHARPEN" rwaccess="readonly">
          <shortdesc>Sharpen.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="DODGE" rwaccess="readonly">
          <shortdesc>Dodge.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="BURN" rwaccess="readonly">
          <shortdesc>Burn.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="SPONGE" rwaccess="readonly">
          <shortdesc>Sponge.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="COLORREPLACEMENTTOOL" rwaccess="readonly">
          <shortdesc>Color replacement tool.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BatchDestinationType" enumeration="true">
      <shortdesc>The destination, if any, for batch-processed files.</shortdesc>
      <elements type="class">
        <property name="NODESTINATION" rwaccess="readonly">
          <shortdesc>Leaves all files open.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="SAVEANDCLOSE" rwaccess="readonly">
          <shortdesc>Saves changes and closes all files.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="FOLDER" rwaccess="readonly">
          <shortdesc>Outputs files to a folder.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="FileNamingType" enumeration="true">
      <shortdesc>File naming options for the batch command.</shortdesc>
      <elements type="class">
        <property name="DOCUMENTNAMEMIXED" rwaccess="readonly">
          <shortdesc>Use the document name in mixed case.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DOCUMENTNAMELOWER" rwaccess="readonly">
          <shortdesc>Use the document name in lower case.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="DOCUMENTNAMEUPPER" rwaccess="readonly">
          <shortdesc>Use the document name in UPPER case.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="SERIALNUMBER1" rwaccess="readonly">
          <shortdesc>Use a 1-digit serial number.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="SERIALNUMBER2" rwaccess="readonly">
          <shortdesc>Use a 2-digit serial number.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="SERIALNUMBER3" rwaccess="readonly">
          <shortdesc>Use a 3-digit serial number.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="SERIALNUMBER4" rwaccess="readonly">
          <shortdesc>Use a 4-digit serial number.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="SERIALLETTERLOWER" rwaccess="readonly">
          <shortdesc>Use letter serial number lower case (a, b, c, ...)</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
        <property name="SERIALLETTERUPPER" rwaccess="readonly">
          <shortdesc>Use letter serial number UPPER case (A, B, C, ...)</shortdesc>
          <datatype>
            <type>int</type>
            <value>9</value>
          </datatype>
        </property>
        <property name="MMDDYY" rwaccess="readonly">
          <shortdesc>Uses the date formatted as mmddyy.</shortdesc>
          <datatype>
            <type>int</type>
            <value>10</value>
          </datatype>
        </property>
        <property name="MMDD" rwaccess="readonly">
          <shortdesc>Uses the date formatted as mmdd.</shortdesc>
          <datatype>
            <type>int</type>
            <value>11</value>
          </datatype>
        </property>
        <property name="YYYYMMDD" rwaccess="readonly">
          <shortdesc>Uses the date formatted as yyyymmdd.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="YYMMDD" rwaccess="readonly">
          <shortdesc>Uses the date formatted as yymmdd.</shortdesc>
          <datatype>
            <type>int</type>
            <value>13</value>
          </datatype>
        </property>
        <property name="YYDDMM" rwaccess="readonly">
          <shortdesc>Uses the date formatted as yyddmm.</shortdesc>
          <datatype>
            <type>int</type>
            <value>14</value>
          </datatype>
        </property>
        <property name="DDMMYY" rwaccess="readonly">
          <shortdesc>Uses the date formatted as ddmmyy.</shortdesc>
          <datatype>
            <type>int</type>
            <value>15</value>
          </datatype>
        </property>
        <property name="DDMM" rwaccess="readonly">
          <shortdesc>Uses the date formatted as ddmm.</shortdesc>
          <datatype>
            <type>int</type>
            <value>16</value>
          </datatype>
        </property>
        <property name="EXTENSIONLOWER" rwaccess="readonly">
          <shortdesc>Use the extension of the file in lower case.</shortdesc>
          <datatype>
            <type>int</type>
            <value>17</value>
          </datatype>
        </property>
        <property name="EXTENSIONUPPER" rwaccess="readonly">
          <shortdesc>Use the extension of the file in UPPER case.</shortdesc>
          <datatype>
            <type>int</type>
            <value>18</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DepthMapSource" enumeration="true">
      <shortdesc>Depth map source options.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No depth map in use.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="TRANSPARENCYCHANNEL" rwaccess="readonly">
          <shortdesc>Uses the transparency channel for the depth map.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LAYERMASK" rwaccess="readonly">
          <shortdesc>Uses the layer mask for the depth map.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="IMAGEHIGHLIGHT" rwaccess="readonly">
          <shortdesc>Uses the image highlight for the depth map.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Geometry" enumeration="true">
      <shortdesc>Geometric options for shapes, such as the iris shape in the Lens Blur Filter.</shortdesc>
      <elements type="class">
        <property name="TRIANGLE" rwaccess="readonly">
          <shortdesc>Triangle.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="PENTAGON" rwaccess="readonly">
          <shortdesc>Pentagon.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="HEXAGON" rwaccess="readonly">
          <shortdesc>Hexagon.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SQUARE" rwaccess="readonly">
          <shortdesc>Square.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="HEPTAGON" rwaccess="readonly">
          <shortdesc>Heptagon.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="OCTAGON" rwaccess="readonly">
          <shortdesc>Octagon.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ColorReductionType" enumeration="true">
      <shortdesc>The color reduction algorithm.</shortdesc>
      <elements type="class">
        <property name="PERCEPTUAL" rwaccess="readonly">
          <shortdesc>Gives priority to colors for which the human eye has greater sensitivity.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="SELECTIVE" rwaccess="readonly">
          <shortdesc>Gives priority to broad areas of color and the preservation of web colors; usually produces images with the greatest color integrity.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ADAPTIVE" rwaccess="readonly">
          <shortdesc>Samples color from the spectrum appearing most commonly in the image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="RESTRICTIVE" rwaccess="readonly">
          <shortdesc>Uses the standard 216-color color table common to Windows and Mac OS 8-bit (256-color or web-safe palette); ensures that no browser dither is applied when the image is displayed using 8-bit color.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="CUSTOM" rwaccess="readonly">
          <shortdesc>Uses a color palette that is created or modified by the user. If you open an existing GIF or PNG-8 file, it will have a custom color palette.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="BLACKWHITE" rwaccess="readonly">
          <shortdesc>Uses a set palette of colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="GRAYSCALE" rwaccess="readonly">
          <shortdesc>Uses a set palette of colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="MACINTOSH" rwaccess="readonly">
          <shortdesc>Uses a set palette of colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="WINDOWS" rwaccess="readonly">
          <shortdesc>Uses a set palette of colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CameraRAWSettingsType" enumeration="true">
      <shortdesc>The default Camera RAW settings.</shortdesc>
      <elements type="class">
        <property name="CAMERA" rwaccess="readonly">
          <shortdesc>Use the settings of the camera.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="SELECTEDIMAGE" rwaccess="readonly">
          <shortdesc>Use the settings of the selected image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CUSTOM" rwaccess="readonly">
          <shortdesc>Use the custom settings.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="WhiteBalanceType" enumeration="true">
      <shortdesc>The lighting conditions (affects color balance).</shortdesc>
      <elements type="class">
        <property name="ASSHOT" rwaccess="readonly">
          <shortdesc>Use the settings of the camera as shot.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="AUTO" rwaccess="readonly">
          <shortdesc>Automatically use the white balance settings.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DAYLIGHT" rwaccess="readonly">
          <shortdesc>Use the settings as shot in daylight.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="CLOUDY" rwaccess="readonly">
          <shortdesc>Use the settings as shot on a cloudy day.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="SHADE" rwaccess="readonly">
          <shortdesc>Use the settings as shot in the shade.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="TUNGSTEN" rwaccess="readonly">
          <shortdesc>Use the settings as shot with tungsten lighting.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="FLUORESCENT" rwaccess="readonly">
          <shortdesc>Use the settings as shot with fluorescent lighting.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="FLASH" rwaccess="readonly">
          <shortdesc>Use the settings as shot with a flash.</shortdesc>
          <datatype>
            <type>int</type>
            <value>7</value>
          </datatype>
        </property>
        <property name="CUSTOM" rwaccess="readonly">
          <shortdesc>Use the custom settings for the shot parameters.</shortdesc>
          <datatype>
            <type>int</type>
            <value>8</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ColorSpaceType" enumeration="true">
      <shortdesc>The type of color space.</shortdesc>
      <elements type="class">
        <property name="ADOBERGB" rwaccess="readonly">
          <shortdesc>Use the Adobe RGB color space.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="COLORMATCHRGB" rwaccess="readonly">
          <shortdesc>Use the ColorMatch RGB color space.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PROPHOTORGB" rwaccess="readonly">
          <shortdesc>Use the ProPhoto RGB color space.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="SRGB" rwaccess="readonly">
          <shortdesc>Use the sRGB color space.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CameraRAWSize" enumeration="true">
      <shortdesc>The camera RAW image size.</shortdesc>
      <elements type="class">
        <property name="MINIMUM" rwaccess="readonly">
          <shortdesc>1536 x 1024 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>2048 x 1365 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>3072 x 2048 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>4096 x 2731 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="EXTRALARGE" rwaccess="readonly">
          <shortdesc>5120 x 3413 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="MAXIMUM" rwaccess="readonly">
          <shortdesc>6144 x 4096 image.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MagnificationType" enumeration="true">
      <shortdesc>The PDF magnification type.</shortdesc>
      <elements type="class">
        <property name="ACTUALSIZE" rwaccess="readonly">
          <shortdesc>Displays the image at actual size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="FITPAGE" rwaccess="readonly">
          <shortdesc>Fits the image to the page.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CropToType" enumeration="true">
      <shortdesc>The style to use when cropping a page.</shortdesc>
      <elements type="class">
        <property name="BOUNDINGBOX" rwaccess="readonly">
          <shortdesc>Crop to the bounding box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="MEDIABOX" rwaccess="readonly">
          <shortdesc>Crop to the media box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="CROPBOX" rwaccess="readonly">
          <shortdesc>Crop to the crop box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="BLEEDBOX" rwaccess="readonly">
          <shortdesc>Crop to the bleed box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="TRIMBOX" rwaccess="readonly">
          <shortdesc>Crop to the trim box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="ARTBOX" rwaccess="readonly">
          <shortdesc>Crop to the art box.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="FontPreviewType" enumeration="true">
      <shortdesc>The type size to use for font previews in the Type tool font menus.</shortdesc>
      <elements type="class">
        <property name="NONE" rwaccess="readonly">
          <shortdesc>No preview.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>Small type.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>Medium type.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>Large type.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="EXTRALARGE" rwaccess="readonly">
          <shortdesc>Extra large preview.</shortdesc>
          <datatype>
            <type>int</type>
            <value>4</value>
          </datatype>
        </property>
        <property name="HUGE" rwaccess="readonly">
          <shortdesc>Huge preview.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="FontSize" enumeration="true">
      <shortdesc>Font size in panels and dialogs.</shortdesc>
      <elements type="class">
        <property name="SMALL" rwaccess="readonly">
          <shortdesc>Small size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEDIUM" rwaccess="readonly">
          <shortdesc>Medium size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="LARGE" rwaccess="readonly">
          <shortdesc>Large size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MeasurementSource" enumeration="true">
      <shortdesc>The source for recording measurements.</shortdesc>
      <elements type="class">
        <property name="MEASURESELECTION" rwaccess="readonly">
          <shortdesc>The measure selection.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="MEASURECOUNTTOOL" rwaccess="readonly">
          <shortdesc>The measure count tool.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="MEASURERULERTOOL" rwaccess="readonly">
          <shortdesc>The measure ruler tool.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MeasurementRange" enumeration="true">
      <shortdesc>The measurement upon which to take action.</shortdesc>
      <elements type="class">
        <property name="ALLMEASUREMENTS" rwaccess="readonly">
          <shortdesc>All measurements.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="ACTIVEMEASUREMENTS" rwaccess="readonly">
          <shortdesc>Only active measurements.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Documents" dynamic="true">
      <shortdesc>A collection of documents.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>A document.</shortdesc>
          <parameters>
            <parameter name="width" optional="true">
              <shortdesc>The width of the document.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="height" optional="true">
              <shortdesc>The height of the document.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="resolution" optional="true">
              <shortdesc>The resolution of the document (in pixels per inch)</shortdesc>
              <datatype>
                <type>number</type>
                <value>72</value>
              </datatype>
            </parameter>
            <parameter name="name" optional="true">
              <shortdesc>The name of the document.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="mode" optional="true">
              <shortdesc>The document mode.</shortdesc>
              <datatype>
                <type href="#/NewDocumentMode">NewDocumentMode</type>
                <value>NewDocumentMode.RGB</value>
              </datatype>
            </parameter>
            <parameter name="initialFill" optional="true">
              <shortdesc>The initial fill of the document.</shortdesc>
              <datatype>
                <type href="#/DocumentFill">DocumentFill</type>
                <value>DocumentFill.WHITE</value>
              </datatype>
            </parameter>
            <parameter name="pixelAspectRatio" optional="true">
              <shortdesc>The initial pixel aspect ratio of the document.</shortdesc>
              <datatype>
                <type>number</type>
                <value>1.0</value>
              </datatype>
            </parameter>
            <parameter name="bitsPerChannel" optional="true">
              <shortdesc>The number of bits per channel.</shortdesc>
              <datatype>
                <type href="#/BitsPerChannelType">BitsPerChannelType</type>
                <value>BitsPerChannelType.EIGHT</value>
              </datatype>
            </parameter>
            <parameter name="colorProfileName" optional="true">
              <shortdesc>The name of color profile for document.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>Document</type>
          </datatype>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Document">Document</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Document">Document</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="Layers" dynamic="true">
      <shortdesc>The collection of layer objects, including art layer and layer set objects, in the document.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Layer">Layer</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Layer">Layer</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="LayerSets" dynamic="true">
      <shortdesc>The collection of layer set objects in the document.</shortdesc>
      <elements type="instance">
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/LayerSet">LayerSet</type>
          </datatype>
        </method>
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/LayerSet">LayerSet</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/LayerSet">LayerSet</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="ArtLayers" dynamic="true">
      <shortdesc>The collection of art layer objects in the document.</shortdesc>
      <elements type="instance">
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="Channels" dynamic="true">
      <shortdesc>The collection of channel objects in the document.</shortdesc>
      <elements type="instance">
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/Channel">Channel</type>
          </datatype>
        </method>
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Channel">Channel</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Channel">Channel</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="Guides" dynamic="true">
      <shortdesc>Guides associated with the document.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>A guide.</shortdesc>
          <parameters>
            <parameter name="direction">
              <shortdesc>Indicates whether the guide is vertical or horizontal.</shortdesc>
              <datatype>
                <type href="#/Direction">Direction</type>
              </datatype>
            </parameter>
            <parameter name="coordinate">
              <shortdesc>Location of the guide from origin of image.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>Guide</type>
          </datatype>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Guide">Guide</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="HistoryStates" dynamic="true">
      <shortdesc>The history state objects associated with the document.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/HistoryState">HistoryState</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/HistoryState">HistoryState</type>
          </datatype>
        </method>		
      </elements>
    </classdef>
    <classdef name="LayerComps" dynamic="true">
      <shortdesc>The layer comp objects associated with the document.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>Adds a layer comp.</shortdesc>
          <parameters>
            <parameter name="name">
              <shortdesc>The name of the layer comp.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="comment" optional="true">
              <shortdesc>The description of the layer comp.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="appearance" optional="true">
              <shortdesc>If true, uses the layer appearance or style for this layer comp.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
            <parameter name="position" optional="true">
              <shortdesc>If true, uses the layer position for this layer comp.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
            <parameter name="visibility" optional="true">
              <shortdesc>If true, uses the layer visibility for this layer comp.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>LayerComp</type>
          </datatype>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/LayerComp">LayerComp</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/LayerComp">LayerComp</type>
          </datatype>
        </method>		
      </elements>
    </classdef>
    <classdef name="TextFonts" dynamic="true">
      <shortdesc>A collection of fonts available on your computer.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/TextFont">TextFont</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/TextFont">TextFont</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="PathItems" dynamic="true">
      <shortdesc>The collection of path item objects in the document.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>Creates a new path item.</shortdesc>
          <parameters>
            <parameter name="name">
              <shortdesc>The name for the new path.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="entirePath">
              <shortdesc>The item's sub paths.</shortdesc>
              <datatype>
                <type href="#/SubPathInfo">SubPathInfo</type>
                <array />
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>PathItem</type>
          </datatype>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/PathItem">PathItem</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/PathItem">PathItem</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="SubPathItems" dynamic="true">
      <shortdesc>An array of path point info objects that describes a straight or curved segment of a path. You do not use the sub path item object to create a sub path. Rather, you use the sub path item object to retrieve information about a sub path. To create sub paths, see sub path info.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/SubPathItem">SubPathItem</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/SubPathItem">SubPathItem</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="PathPoints" dynamic="true">
      <shortdesc>A collection of path point objects that comprises the path points property of the sub path item object.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/PathPoint">PathPoint</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/PathPoint">PathPoint</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="Notifiers" dynamic="true">
      <shortdesc>A collection of notifier objects in the document.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>Creates a notifier.</shortdesc>
          <parameters>
            <parameter name="event">
              <shortdesc>The class id of the event, four characters or a unique string.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="eventFile">
              <shortdesc>The script file to execute when the event occurs.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="eventClass" optional="true">
              <shortdesc>The class of the object the event is applied to, four characters or a unique string. When an event applies to multiple types of objects, you use the event class parameter to distinguish which object this Notifier applies to. For example, the Make event (“Mk“) applies to documents (“Dcmn”), channels (“Chnl”) and other objects.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>Notifier</type>
          </datatype>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Notifier">Notifier</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Notifier">Notifier</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="CountItems" dynamic="true">
      <shortdesc>The collection of count items in the document.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>Creates a count item.</shortdesc>
          <parameters>
            <parameter name="position">
              <shortdesc>The position of origin.</shortdesc>
              <datatype>
                <type href="#/UnitPoint">UnitPoint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>CountItem</type>
          </datatype>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/CountItem">CountItem</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/CountItem">CountItem</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="ColorSamplers" dynamic="true">
      <shortdesc>The collection of color samplers in the document.</shortdesc>
      <elements type="class">
        <method name="add">
          <shortdesc>Creates a color sampler.</shortdesc>
          <parameters>
            <parameter name="position">
              <shortdesc>The horizontal and vertical (x,y) locations, respectively, of the color sampler.</shortdesc>
              <datatype>
                <type href="#/UnitPoint">UnitPoint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>ColorSampler</type>
          </datatype>
        </method>
      </elements>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>Number of elements in the collection.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <method name="getByName">
          <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
          <parameters>
            <parameter name="name">
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ColorSampler">ColorSampler</type>
          </datatype>
        </method>
        <method name="[]">
          <shortdesc>Get an element in the collection with the provided index. </shortdesc>
          <parameters>
            <parameter name="index">
              <datatype>
                <type>uint</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ColorSampler">ColorSampler</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="OpenOptions" dynamic="true">
      <shortdesc>Options that can be specified when opening a document.</shortdesc>
      <elements type="class" />
    </classdef>
    <classdef name="PhotoCDOpenOptions" dynamic="true">
      <superclass>OpenOptions</superclass>
      <shortdesc>DEPRECATED.</shortdesc>
      <elements type="class">
        <property name="pixelSize">
          <shortdesc>The dimensions of the image.</shortdesc>
          <datatype>
            <type href="#/PhotoCDSize">PhotoCDSize</type>
          </datatype>
        </property>
        <property name="colorProfileName">
          <shortdesc>The profile to use when reading the image.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The resolution of the image (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="colorSpace">
          <shortdesc>The color space for the image.</shortdesc>
          <datatype>
            <type href="#/PhotoCDColorSpace">PhotoCDColorSpace</type>
          </datatype>
        </property>
        <property name="orientation">
          <shortdesc>The image orientation.</shortdesc>
          <datatype>
            <type href="#/Orientation">Orientation</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RawFormatOpenOptions" dynamic="true">
      <superclass>OpenOptions</superclass>
      <shortdesc>Options that can be specified when opening a document in RAW format.</shortdesc>
      <elements type="class">
        <property name="height">
          <shortdesc>The image height (in pixels)</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="width">
          <shortdesc>The image width (in pixels)</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="channelNumber">
          <shortdesc>The number of channels in the image. Valid only when 'bits per channel' = 16. Range: 1 to 56.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="interleaveChannels">
          <shortdesc>If true, color values are stored sequentially.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="bitsPerChannel">
          <shortdesc>The number of bits for each channel. Valid values: 8 or 16.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="byteOrder">
          <shortdesc>The order in which bytes will be read. Valid only when 'bits per channel' = 16.</shortdesc>
          <datatype>
            <type href="#/ByteOrderType">ByteOrderType</type>
          </datatype>
        </property>
        <property name="headerSize">
          <shortdesc>The number of bytes of information that will appear in the file before actual image information begins; that is, the number of zeroes inserted at the beginning of the file as placeholders. Range: 0 to 1919999.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="retainHeader">
          <shortdesc>If true, the header is retained when saving.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GenericPDFOpenOptions" dynamic="true">
      <superclass>OpenOptions</superclass>
      <shortdesc>Options that can be specified when opening a generic PDF document.</shortdesc>
      <elements type="class">
        <property name="resolution">
          <shortdesc>The resolution of the document (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="mode">
          <shortdesc>The document mode.</shortdesc>
          <datatype>
            <type href="#/OpenDocumentMode">OpenDocumentMode</type>
          </datatype>
        </property>
        <property name="antiAlias">
          <shortdesc>If true, anti-aliasing is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="page">
          <shortdesc>The number of the page or image to open.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="object">
          <shortdesc>The number of the 3d object to open.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="constrainProportions">
          <shortdesc>DEPRECATED.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="height">
          <shortdesc>DEPRECATED.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="width">
          <shortdesc>DEPRECATED.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="bitsPerChannel">
          <shortdesc>The number of bits per channel.</shortdesc>
          <datatype>
            <type href="#/BitsPerChannelType">BitsPerChannelType</type>
          </datatype>
        </property>
        <property name="usePageNumber">
          <shortdesc>If true, the value specified in the page property refers to a page number. If false, the value specifies an image number.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="use3DObjectNumber">
          <shortdesc>If true, the value specified in the page property refers to a page number. If false, the value specifies an image number.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The name of the document.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="cropPage">
          <shortdesc>The cropping method to use.</shortdesc>
          <datatype>
            <type href="#/CropToType">CropToType</type>
          </datatype>
        </property>
        <property name="suppressWarnings">
          <shortdesc>If true, suppresses any warnings that may occur during opening.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GenericEPSOpenOptions" dynamic="true">
      <superclass>OpenOptions</superclass>
      <shortdesc>Options that can be specified when opening a generic EPS document.</shortdesc>
      <elements type="class">
        <property name="height">
          <shortdesc>The image height.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="width">
          <shortdesc>The image width.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The resolution of the document (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="mode">
          <shortdesc>The document mode.</shortdesc>
          <datatype>
            <type href="#/OpenDocumentMode">OpenDocumentMode</type>
          </datatype>
        </property>
        <property name="antiAlias">
          <shortdesc>If true, anti-aliasing is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="constrainProportions">
          <shortdesc>If true, the image proportions are constrained.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DICOMOpenOptions" dynamic="true">
      <superclass>OpenOptions</superclass>
      <shortdesc>Options for opening a DICOM document.</shortdesc>
      <elements type="class">
        <property name="anonymize">
          <shortdesc>If true, patient information is anonymized.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="showOverlays">
          <shortdesc>If true, overlays are shown (if present).</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="rows">
          <shortdesc>The number of rows in an n-up configuration.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="columns">
          <shortdesc>The number of columns in an n-up configuration.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="windowWidth">
          <shortdesc>The brightness of the image in Houndsfield units.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="windowLevel">
          <shortdesc>The contrast of the image in Houndsfield units.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="reverse">
          <shortdesc>If true, the image is inverted.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CameraRAWOpenOptions" dynamic="true">
      <superclass>OpenOptions</superclass>
      <shortdesc>Options for opening a camera RAW document.</shortdesc>
      <elements type="class">
        <property name="colorSpace">
          <shortdesc>The image color space.</shortdesc>
          <datatype>
            <type href="#/ColorSpaceType">ColorSpaceType</type>
          </datatype>
        </property>
        <property name="bitsPerChannel">
          <shortdesc>The number of bits per channel.</shortdesc>
          <datatype>
            <type href="#/BitsPerChannelType">BitsPerChannelType</type>
          </datatype>
        </property>
        <property name="size">
          <shortdesc>The size of the new document.</shortdesc>
          <datatype>
            <type href="#/CameraRAWSize">CameraRAWSize</type>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The resolution of the document (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="settings">
          <shortdesc>The global settings for all Camera RAW options.</shortdesc>
          <datatype>
            <type href="#/CameraRAWSettingsType">CameraRAWSettingsType</type>
            <value>CameraRAWSettingsType.CAMERA</value>
          </datatype>
        </property>
        <property name="whiteBalance">
          <shortdesc>The white balance options for the image.</shortdesc>
          <datatype>
            <type href="#/WhiteBalanceType">WhiteBalanceType</type>
          </datatype>
        </property>
        <property name="temperature">
          <shortdesc>The temperature of the shot. Range: 2000 to 50000.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="tint">
          <shortdesc>The tint of the shot. Range: -150 to 150.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="exposure">
          <shortdesc>The exposure of the shot. Range: -4.0 to 4.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="shadows">
          <shortdesc>The shadows of the shot. Range: 0 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="brightness">
          <shortdesc>The brightness of the shot. Range: 0 to 150.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="contrast">
          <shortdesc>The constrast of the shot. Range: -50 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="saturation">
          <shortdesc>The saturation of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="sharpness">
          <shortdesc>The sharpness of the shot. Range: 0 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="luminanceSmoothing">
          <shortdesc>The luminance smoothing of the shot. Range: 0 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="colorNoiseReduction">
          <shortdesc>The color noise reduction of the shot. Range: 0 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="chromaticAberrationRC">
          <shortdesc>The chromatic aberration R/C of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="chromaticAberrationBY">
          <shortdesc>The chromatic aberration B/Y of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="vignettingAmount">
          <shortdesc>The vignetting amount of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="vignettingMidpoint">
          <shortdesc>The vignetting mid point of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="shadowTint">
          <shortdesc>The shadow tint of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="redHue">
          <shortdesc>The red hue of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="redSaturation">
          <shortdesc>The red saturation of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="greenHue">
          <shortdesc>The green hue of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="greenSaturation">
          <shortdesc>The green saturation of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="blueHue">
          <shortdesc>The blue hue of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="blueSaturation">
          <shortdesc>The blue saturation of the shot. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SaveOptions" dynamic="true" enumeration="true">
      <shortdesc>Options for saving a file.</shortdesc>
      <elements type="class">
        <property name="SAVECHANGES" rwaccess="readonly">
          <shortdesc>Save changes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="DONOTSAVECHANGES" rwaccess="readonly">
          <shortdesc>Do not save changes.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PROMPTTOSAVECHANGES" rwaccess="readonly">
          <shortdesc>Ask the user whether to save.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PhotoshopSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a Photoshop document.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="layers">
          <shortdesc>If true, the layers are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="annotations">
          <shortdesc>If true, the annotations are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="spotColors">
          <shortdesc>If true, spot colors are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BMPSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in BMP format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="osType">
          <shortdesc>The target operating system.</shortdesc>
          <datatype>
            <type href="#/OperatingSystem">OperatingSystem</type>
            <value>OperatingSystem.WINDOWS</value>
          </datatype>
        </property>
        <property name="depth">
          <shortdesc>The number of bits per sample.</shortdesc>
          <datatype>
            <type href="#/BMPDepthType">BMPDepthType</type>
            <value>BMPDepthType.TWENTYFOUR</value>
          </datatype>
        </property>
        <property name="rleCompression">
          <shortdesc>If true, RLE compression is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="flipRowOrder">
          <shortdesc>If true, the image is written from bottom to top.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GIFSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in GIF format.</shortdesc>
      <elements type="class">
        <property name="colors">
          <shortdesc>The number of colors in palette. Not valid for all palette types.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="dither">
          <shortdesc>The type of dither.</shortdesc>
          <datatype>
            <type href="#/DitherType">DitherType</type>
          </datatype>
        </property>
        <property name="ditherAmount">
          <shortdesc>The amount of dither. Valid only when 'dither type' is diffusion. Range: 1 to 100.</shortdesc>
          <datatype>
            <type>int</type>
            <min>1</min>
            <max>100</max>
            <value>75</value>
          </datatype>
        </property>
        <property name="forced">
          <shortdesc>The type of colors to force into the color palette.</shortdesc>
          <datatype>
            <type href="#/ForcedColors">ForcedColors</type>
          </datatype>
        </property>
        <property name="interlaced">
          <shortdesc>If true, rows are interlaced.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="matte">
          <shortdesc>The color to use to fill anti-aliased edges adjacent to transparent areas of the image. Default: white.</shortdesc>
          <datatype>
            <type href="#/MatteType">MatteType</type>
          </datatype>
        </property>
        <property name="palette">
          <shortdesc>The type of palette to use.</shortdesc>
          <datatype>
            <type href="#/PaletteType">PaletteType</type>
            <value>PaletteType.LOCALSELECTIVE</value>
          </datatype>
        </property>
        <property name="preserveExactColors">
          <shortdesc>If true, protects colors in the image that contain entries in the color table from being dithered. Valid only when 'dither' = diffusion.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="transparency">
          <shortdesc>If true, preserves transparent ares of the image during GIF conversion.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="EPSSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in EPS format.</shortdesc>
      <elements type="class">
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="preview">
          <shortdesc>The type of preview.</shortdesc>
          <datatype>
            <type href="#/MacPreviewType">MacPreviewType</type>
            <value>MacPreviewType.MONOCHROMETIFF</value>
          </datatype>
        </property>
        <property name="encoding">
          <shortdesc>The type of encoding to use for the document.</shortdesc>
          <datatype>
            <type href="#/SaveEncoding">SaveEncoding</type>
            <value>SaveEncoding.BINARY</value>
          </datatype>
        </property>
        <property name="halftoneScreen">
          <shortdesc>If true, includes the halftone screen.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="transferFunction">
          <shortdesc>If true, includes the transfer functions in the document to compensate for dot gain between the image and film.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="psColorManagement">
          <shortdesc>If true, uses PostScript color management.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="vectorData">
          <shortdesc>If true, includes vector data. Valid only when the document contains vector data (un-rasterized text).</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="interpolation">
          <shortdesc>If true, uses image interpolation.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="transparentWhites">
          <shortdesc>If true, displays white areas as transparent. Valid only for documents in BitMap mode.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="JPEGSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in JPEG format.</shortdesc>
      <elements type="class">
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="formatOptions">
          <shortdesc>The download format to use.</shortdesc>
          <datatype>
            <type href="#/FormatOptionsType">FormatOptionsType</type>
            <value>FormatOptionsType.STANDARDBASELINE</value>
          </datatype>
        </property>
        <property name="matte">
          <shortdesc>The color to use to fill anti-aliased edges adjacent to transparent areas of the image. Default: white.</shortdesc>
          <datatype>
            <type href="#/MatteType">MatteType</type>
          </datatype>
        </property>
        <property name="scans">
          <shortdesc>The number of scans. Valid only for progressive type JPEG files.</shortdesc>
          <datatype>
            <type>int</type>
            <min>3</min>
            <max>5</max>
          </datatype>
        </property>
        <property name="quality">
          <shortdesc>The quality of the produced image.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>12</max>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PDFSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in PDF format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="layers">
          <shortdesc>If true, the layers are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="annotations">
          <shortdesc>If true, the annotations are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="spotColors">
          <shortdesc>If true, the spot colors are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="downgradeColorProfile">
          <shortdesc>DEPRECATED, ( should the embedded color profile be downgraded to version 2 )</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="transparency">
          <shortdesc>DEPRECATED.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="interpolation">
          <shortdesc>DEPRECATED. ( use image interpolation? )</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="vectorData">
          <shortdesc>DEPRECATED. ( include vector data )</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedFonts">
          <shortdesc>DEPRECATED. ( embed fonts? Only valid if a text layer is included )</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="useOutlines">
          <shortdesc>DEPRECATED. ( use outlines for text? Only valid if vector data is included )</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="encoding">
          <shortdesc>The encoding method to use.</shortdesc>
          <datatype>
            <type href="#/PDFEncodingType">PDFEncodingType</type>
          </datatype>
        </property>
        <property name="jpegQuality">
          <shortdesc>The quality of the produced image. Valid only for JPEG-encoded PDF documents. Range: 0 to 12.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>12</max>
          </datatype>
        </property>
        <property name="presetFile">
          <shortdesc>The preset file to use for settings; overrides other settings.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="PDFStandard">
          <shortdesc>The PDF standard to make the document compatible with.</shortdesc>
          <datatype>
            <type href="#/PDFStandardType">PDFStandardType</type>
          </datatype>
        </property>
        <property name="PDFCompatibility">
          <shortdesc>The PDF version to make the document compatible with.</shortdesc>
          <datatype>
            <type href="#/PDFCompatibilityType">PDFCompatibilityType</type>
          </datatype>
        </property>
        <property name="description">
          <shortdesc>Description of the save options in use.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="preserveEditing">
          <shortdesc>If true, allows users to reopen the PDF in Photoshop with native Photoshop data intact.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedThumbnail">
          <shortdesc>If true, includes a small preview image in Acrobat.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="optimizeForWeb">
          <shortdesc>If true, improves performance of PDFs on Web servers.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="view">
          <shortdesc>If true, opens the saved PDF in Acrobat.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="downSample">
          <shortdesc>The downsample method to use.</shortdesc>
          <datatype>
            <type href="#/PDFResampleType">PDFResampleType</type>
          </datatype>
        </property>
        <property name="downSampleSize">
          <shortdesc>The size (in pixels per inch) to downsample images to if they exceed the value specified for 'down sample size limit'.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="downSampleSizeLimit">
          <shortdesc>Limits downsampling or subsampling to images that exceed this value (in pixels per inch).</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="tileSize">
          <shortdesc>The compression option. Valid only when encoding is JPEG2000.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="convertToEightBit">
          <shortdesc>If true, converts a 16-bit image to 8-bit for better compatibility with other applications.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="colorConversion">
          <shortdesc>If true, converts the color profile to the destination profile.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="destinationProfile">
          <shortdesc>Describes the final RGB or CMYK output device, such as a monitor or press standard.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="profileInclusionPolicy">
          <shortdesc>If true, shows which profiles to include.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="outputCondition">
          <shortdesc>An optional comment field for inserting descriptions of the output condition. The text is stored in the PDF/X file.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="outputConditionID">
          <shortdesc>The identifier for the output condition.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="registryName">
          <shortdesc>The URL where the output condition is registered.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PICTFileSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in PICT format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The number of bits per pixel.</shortdesc>
          <datatype>
            <type href="#/PICTBitsPerPixels">PICTBitsPerPixels</type>
          </datatype>
        </property>
        <property name="compression">
          <shortdesc>The compression method.</shortdesc>
          <datatype>
            <type href="#/PICTCompression">PICTCompression</type>
            <value>PICTCompression.NONE</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PICTResourceSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document as a PICT resource file.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The number of bits per pixel.</shortdesc>
          <datatype>
            <type href="#/PICTBitsPerPixels">PICTBitsPerPixels</type>
          </datatype>
        </property>
        <property name="compression">
          <shortdesc>The compression type.</shortdesc>
          <datatype>
            <type href="#/PICTCompression">PICTCompression</type>
            <value>PICTCompression.NONE</value>
          </datatype>
        </property>
        <property name="resourceID">
          <shortdesc>The ID of the PICT resource.</shortdesc>
          <datatype>
            <type>int</type>
            <value>128</value>
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The name of PICT resource.</shortdesc>
          <datatype>
            <type>string</type>
            <value>""</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PixarSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in Pixar format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PNGSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in PNG format.</shortdesc>
      <elements type="class">
        <property name="interlaced">
          <shortdesc>If true, rows are interlaced.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="compression">
          <shortdesc>Compression used on the image.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>9</max>
            <value>0</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RawSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in RAW format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="spotColors">
          <shortdesc>If true, spot colors are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SGIRGBSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in SGI RGB format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="spotColors">
          <shortdesc>If true, the spot colors are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TargaSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in TGA (Targa) format.</shortdesc>
      <elements type="class">
        <property name="resolution">
          <shortdesc>The number of bits per pixel.</shortdesc>
          <datatype>
            <type href="#/TargaBitsPerPixels">TargaBitsPerPixels</type>
            <value>TargaBitsPerPixels.TWENTYFOUR</value>
          </datatype>
        </property>
        <property name="rleCompression">
          <shortdesc>If true, RLE compression is used.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TiffSaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in TIFF format.</shortdesc>
      <elements type="class">
        <property name="alphaChannels">
          <shortdesc>If true, the alpha channels are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="layers">
          <shortdesc>If true, the layers are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="annotations">
          <shortdesc>If true, the annotations are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="spotColors">
          <shortdesc>If true, spot colors are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="imageCompression">
          <shortdesc>The compression type.</shortdesc>
          <datatype>
            <type href="#/TiffEncodingType">TiffEncodingType</type>
            <value>TiffEncodingType.NONE</value>
          </datatype>
        </property>
        <property name="jpegQuality">
          <shortdesc>The quality of the produced image, which is inversely proportionate to the amount of JPEG compression. Valid only for JPEG compressed TIFF documents. Range: 0 to 12.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>12</max>
          </datatype>
        </property>
        <property name="byteOrder">
          <shortdesc>The order in which the bytes will be read. Default: Mac OS when running in Mac OS, and IBM PC when running in Windows.</shortdesc>
          <datatype>
            <type href="#/ByteOrderType">ByteOrderType</type>
          </datatype>
        </property>
        <property name="saveImagePyramid">
          <shortdesc>If true, preserves multi-resolution information.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="transparency">
          <shortdesc>If true, saves the transparency as an additional alpha channel when the file is opened in another application.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="layerCompression">
          <shortdesc>The method of compression to use when saving layers (as opposed to saving composite data). Valid only when 'layers' = true.</shortdesc>
          <datatype>
            <type href="#/LayerCompressionType">LayerCompressionType</type>
          </datatype>
        </property>
        <property name="interleaveChannels">
          <shortdesc>If true, the channels in the image are interleaved.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DCS1_SaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in Photoshop DCS 1.0 format.</shortdesc>
      <elements type="class">
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="preview">
          <shortdesc>The type of preview.</shortdesc>
          <datatype>
            <type href="#/MacPreviewType">MacPreviewType</type>
            <value>MacPreviewType.MACOSEIGHTBIT</value>
          </datatype>
        </property>
        <property name="DCS">
          <shortdesc>The DCS type.</shortdesc>
          <datatype>
            <type href="#/DCSType">DCSType</type>
            <value>DCSType.COLORCOMPOSITE</value>
          </datatype>
        </property>
        <property name="encoding">
          <shortdesc>The type of encoding to use for the document.</shortdesc>
          <datatype>
            <type href="#/SaveEncoding">SaveEncoding</type>
            <value>SaveEncoding.BINARY</value>
          </datatype>
        </property>
        <property name="halftoneScreen">
          <shortdesc>If true, includes halftone screen.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="transferFunction">
          <shortdesc>If true, includes transfer functions in the document to compensate for dot gain between the image and film.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="vectorData">
          <shortdesc>If true, includes vector data. Valid only if the document contains vector data (un-rasterized text).</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="interpolation">
          <shortdesc>If true, image interpolation is used.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DCS2_SaveOptions" dynamic="true">
      <superclass>SaveOptions</superclass>
      <shortdesc>Options for saving a document in Photoshop DCS 2.0 format.</shortdesc>
      <elements type="class">
        <property name="spotColors">
          <shortdesc>If true, the spot colors are saved.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="embedColorProfile">
          <shortdesc>If true, the color profile is embedded in the document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="preview">
          <shortdesc>The type of preview.</shortdesc>
          <datatype>
            <type href="#/MacPreviewType">MacPreviewType</type>
            <value>MacPreviewType.MACOSEIGHTBIT</value>
          </datatype>
        </property>
        <property name="DCS">
          <shortdesc>The DCS type.</shortdesc>
          <datatype>
            <type href="#/DCSType">DCSType</type>
            <value>DCSType.NOCOMPOSITE</value>
          </datatype>
        </property>
        <property name="multiFileDCS">
          <shortdesc>If true, saves color channels as multiple files.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="encoding">
          <shortdesc>The type of encoding to use for document.</shortdesc>
          <datatype>
            <type href="#/SaveEncoding">SaveEncoding</type>
            <value>SaveEncoding.BINARY</value>
          </datatype>
        </property>
        <property name="halftoneScreen">
          <shortdesc>If true, includes halftone screen.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="transferFunction">
          <shortdesc>If true, includes transfer functions in the document to compensate for dot gain between the image and film.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="vectorData">
          <shortdesc>If true, includes vector data. Valid only if the document contains vector data (un-rasterized text).</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="interpolation">
          <shortdesc>If true, image interpolation is used.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ExportOptions" dynamic="true">
      <shortdesc>Options for exporting an object.</shortdesc>
      <elements type="class" />
    </classdef>
    <classdef name="ExportOptionsIllustrator" dynamic="true">
      <superclass>ExportOptions</superclass>
      <shortdesc>Options for exporting Illustrator paths.</shortdesc>
      <elements type="class">
        <property name="path">
          <shortdesc>The path to export.</shortdesc>
          <datatype>
            <type href="#/IllustratorPathType">IllustratorPathType</type>
            <value>IllustratorPathType.DOCUMENTBOUNDS</value>
          </datatype>
        </property>
        <property name="pathName">
          <shortdesc>The name of the path to export. Valid only for named paths.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ExportOptionsSaveForWeb" dynamic="true">
      <superclass>ExportOptions</superclass>
      <shortdesc>Options for exporting Save For Web files.</shortdesc>
      <elements type="class">
        <property name="format">
          <shortdesc>The file format to use. Save For Web supports only Compuserve GIF, JPEG, PNG-8, PNG-24, and BMP formats.</shortdesc>
          <datatype>
            <type href="#/SaveDocumentType">SaveDocumentType</type>
            <value>SaveDocumentType.COMPUSERVEGIF</value>
          </datatype>
        </property>
        <property name="PNG8">
          <shortdesc>If true, uses 8 bits. If false, uses 24 bits. Valid only when 'format' = PNG.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="lossy">
          <shortdesc>The amount of lossiness allowed.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="colorReduction">
          <shortdesc>The color reduction algorithm.</shortdesc>
          <datatype>
            <type href="#/ColorReductionType">ColorReductionType</type>
            <value>ColorReductionType.SELECTIVE</value>
          </datatype>
        </property>
        <property name="colors">
          <shortdesc>The number of colors in the palette.</shortdesc>
          <datatype>
            <type>int</type>
            <value>256</value>
          </datatype>
        </property>
        <property name="dither">
          <shortdesc>The type of dither.</shortdesc>
          <datatype>
            <type href="#/DitherType">DitherType</type>
            <value>DitherType.DIFFUSION</value>
          </datatype>
        </property>
        <property name="ditherAmount">
          <shortdesc>The amount of dither. Valid only when 'dither' = diffusion.</shortdesc>
          <datatype>
            <type>int</type>
            <value>100</value>
          </datatype>
        </property>
        <property name="transparency">
          <shortdesc>If true, transparent areas of the image are included in the saved image.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="transparencyDither">
          <shortdesc>The transparency dither algorithm.</shortdesc>
          <datatype>
            <type href="#/DitherType">DitherType</type>
            <value>DitherType.NONE</value>
          </datatype>
        </property>
        <property name="transparencyAmount">
          <shortdesc>The amount of transparency dither. Valid only when 'transparency' = true.</shortdesc>
          <datatype>
            <type>int</type>
            <value>100</value>
          </datatype>
        </property>
        <property name="interlaced">
          <shortdesc>If true, the image downloads in multiple passes, progressive.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="matteColor">
          <shortdesc>The colors to blend transparent pixels against.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="webSnap">
          <shortdesc>The tolerance amount within which to snap close colors to web palette colors.</shortdesc>
          <datatype>
            <type>int</type>
            <value>0</value>
          </datatype>
        </property>
        <property name="optimized">
          <shortdesc>If true, creates smaller but less compatible files.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="quality">
          <shortdesc>The quality of the produced image (as a percentage). Range: 0 to 100.</shortdesc>
          <datatype>
            <type>int</type>
            <value>60</value>
          </datatype>
        </property>
        <property name="includeProfile">
          <shortdesc>If true, includes the document's embedded profile.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="blur">
          <shortdesc>The amount of blur to apply to the image to reduce artifacts.</shortdesc>
          <datatype>
            <type>number</type>
            <value>0</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DocumentConversionOptions" dynamic="true">
      <shortdesc>Options for converting documents.</shortdesc>
      <elements type="class" />
    </classdef>
    <classdef name="BitmapConversionOptions" dynamic="true">
      <superclass>DocumentConversionOptions</superclass>
      <shortdesc>Options for changing the document mode to Bitmap.</shortdesc>
      <elements type="class">
        <property name="resolution">
          <shortdesc>The output resolution (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
            <value>72</value>
          </datatype>
        </property>
        <property name="method">
          <shortdesc>The conversion method.</shortdesc>
          <datatype>
            <type href="#/BitmapConversionType">BitmapConversionType</type>
            <value>BitmapConversionType.DIFFUSIONDITHER</value>
          </datatype>
        </property>
        <property name="patternName">
          <shortdesc>The name of the pattern to use. Valid only when 'method' = custom.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="frequency">
          <shortdesc>The number of printer dots per inch. Valid only when 'method' = halftone screen. Range: 1.0 to 999.99.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="angle">
          <shortdesc>The angle (in degrees) at which to orient individual dots. Valid only when 'method' = halftone screen. Range: -180 to 180.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="shape">
          <shortdesc>The dot shape. Valid only when 'method' = halftone screen.</shortdesc>
          <datatype>
            <type href="#/BitmapHalfToneType">BitmapHalfToneType</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="IndexedConversionOptions" dynamic="true">
      <superclass>DocumentConversionOptions</superclass>
      <shortdesc>Options for converting an RGB image to an indexed color model.</shortdesc>
      <elements type="class">
        <property name="palette">
          <shortdesc>The type of palette.</shortdesc>
          <datatype>
            <type href="#/PaletteType">PaletteType</type>
            <value>PaletteType.EXACT</value>
          </datatype>
        </property>
        <property name="colors">
          <shortdesc>The number of colors in the palette. Not valid for all palette types.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="forced">
          <shortdesc>The type of colors to force into the color palette.</shortdesc>
          <datatype>
            <type href="#/ForcedColors">ForcedColors</type>
          </datatype>
        </property>
        <property name="transparency">
          <shortdesc>If true, preserves transparent areas of the image during conversion to GIF format.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="dither">
          <shortdesc>The type of dither.</shortdesc>
          <datatype>
            <type href="#/DitherType">DitherType</type>
          </datatype>
        </property>
        <property name="ditherAmount">
          <shortdesc>The amount of dither. Valid only when 'dither' = diffusion.</shortdesc>
          <datatype>
            <type>int</type>
            <min>1</min>
            <max>100</max>
          </datatype>
        </property>
        <property name="preserveExactColors">
          <shortdesc>If true, protects colors in the image that contain entries in the color table from being dithered. Valid only when 'dither' = diffusion.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="matte">
          <shortdesc>The color to use to fill anti-aliased edges adjacent to transparent areas of the image. When transparency = false, the matte color is applied to transparent areas.</shortdesc>
          <datatype>
            <type href="#/MatteType">MatteType</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Color" dynamic="true">
      <shortdesc>A color value.</shortdesc>
      <elements type="class" />
    </classdef>
    <classdef name="SolidColor" dynamic="true">
      <shortdesc>A color definition used in the document.</shortdesc>
      <elements type="class">
        <property name="model">
          <shortdesc>The color model.</shortdesc>
          <datatype>
            <type href="#/ColorModel">ColorModel</type>
          </datatype>
        </property>
        <property name="rgb">
          <shortdesc>The RGB color model.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="gray">
          <shortdesc>The grayscale color model.</shortdesc>
          <datatype>
            <type href="#/GrayColor">GrayColor</type>
          </datatype>
        </property>
        <property name="cmyk">
          <shortdesc>The CMYK color model.</shortdesc>
          <datatype>
            <type href="#/CMYKColor">CMYKColor</type>
          </datatype>
        </property>
        <property name="lab">
          <shortdesc>The lab color model.</shortdesc>
          <datatype>
            <type href="#/LabColor">LabColor</type>
          </datatype>
        </property>
        <property name="hsb">
          <shortdesc>The HSB color model.</shortdesc>
          <datatype>
            <type href="#/HSBColor">HSBColor</type>
          </datatype>
        </property>
        <property name="nearestWebColor" rwaccess="readonly">
          <shortdesc>The nearest web color to the current color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="model">
          <shortdesc>The color model.</shortdesc>
          <datatype>
            <type href="#/ColorModel">ColorModel</type>
          </datatype>
        </property>
        <property name="rgb">
          <shortdesc>The RGB color model.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="gray">
          <shortdesc>The grayscale color model.</shortdesc>
          <datatype>
            <type href="#/GrayColor">GrayColor</type>
          </datatype>
        </property>
        <property name="cmyk">
          <shortdesc>The CMYK color model.</shortdesc>
          <datatype>
            <type href="#/CMYKColor">CMYKColor</type>
          </datatype>
        </property>
        <property name="lab">
          <shortdesc>The lab color model.</shortdesc>
          <datatype>
            <type href="#/LabColor">LabColor</type>
          </datatype>
        </property>
        <property name="hsb">
          <shortdesc>The HSB color model.</shortdesc>
          <datatype>
            <type href="#/HSBColor">HSBColor</type>
          </datatype>
        </property>
        <property name="nearestWebColor" rwaccess="readonly">
          <shortdesc>The nearest web color to the current color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <method name="isEqual">
          <shortdesc>Compares two colors.</shortdesc>
          <parameters>
            <parameter name="color">
              <shortdesc>Another color to compare with.</shortdesc>
              <datatype>
                <type href="#/SolidColor">SolidColor</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
      </elements>    
    </classdef>
    <classdef name="GrayColor" dynamic="true">
      <superclass>Color</superclass>
      <shortdesc>Options for defining a gray color.</shortdesc>
      <elements type="class">
        <property name="gray">
          <shortdesc>The gray value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>100</max>
            <value>0</value>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="gray">
          <shortdesc>The gray value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>100</max>
            <value>0</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="RGBColor" dynamic="true">
      <superclass>Color</superclass>
      <shortdesc>The definition of an RGB color mode.</shortdesc>
      <elements type="class">
        <property name="red">
          <shortdesc>The red color value. Range: 0.0 to 255.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>255</max>
            <value>255</value>
          </datatype>
        </property>
        <property name="green">
          <shortdesc>The green color value. Range: 0.0 to 255.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>255</max>
            <value>255</value>
          </datatype>
        </property>
        <property name="blue">
          <shortdesc>The blue color value. Range: 0.0 to 255.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>255</max>
            <value>255</value>
          </datatype>
        </property>
        <property name="hexValue">
          <shortdesc>The hex representation of this color.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="red">
          <shortdesc>The red color value. Range: 0.0 to 255.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>255</max>
            <value>255</value>
          </datatype>
        </property>
        <property name="green">
          <shortdesc>The green color value. Range: 0.0 to 255.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>255</max>
            <value>255</value>
          </datatype>
        </property>
        <property name="blue">
          <shortdesc>The blue color value. Range: 0.0 to 255.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>255</max>
            <value>255</value>
          </datatype>
        </property>
        <property name="hexValue">
          <shortdesc>The hex representation of this color.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="CMYKColor" dynamic="true">
      <superclass>Color</superclass>
      <shortdesc>A CMYK color specification.</shortdesc>
      <elements type="class">
        <property name="cyan">
          <shortdesc>The cyan color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="magenta">
          <shortdesc>The magenta color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="yellow">
          <shortdesc>The yellow color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="black">
          <shortdesc>The black color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="cyan">
          <shortdesc>The cyan color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="magenta">
          <shortdesc>The magenta color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="yellow">
          <shortdesc>The yellow color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="black">
          <shortdesc>The black color value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="LabColor" dynamic="true">
      <superclass>Color</superclass>
      <shortdesc>A Lab color specification.</shortdesc>
      <elements type="class">
        <property name="L">
          <shortdesc>The L-value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="A">
          <shortdesc>The a-value. Range: -128.0 and 127.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="B">
          <shortdesc>The b-value. Range: -128.0 and 127.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="L">
          <shortdesc>The L-value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="A">
          <shortdesc>The a-value. Range: -128.0 and 127.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="B">
          <shortdesc>The b-value. Range: -128.0 and 127.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="HSBColor" dynamic="true">
      <superclass>Color</superclass>
      <shortdesc>An HSB color specification.</shortdesc>
      <elements type="class">
        <property name="hue">
          <shortdesc>The hue value. Range: 0.0 to 360.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="saturation">
          <shortdesc>The saturation value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="brightness">
          <shortdesc>The brightness value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="hue">
          <shortdesc>The hue value. Range: 0.0 to 360.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="saturation">
          <shortdesc>The saturation value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="brightness">
          <shortdesc>The brightness value. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="NoColor" dynamic="true">
      <superclass>Color</superclass>
      <shortdesc>Represents a missing color.</shortdesc>
      <elements type="class" />
    </classdef>
    <classdef name="PresentationOptions" dynamic="true">
      <shortdesc>Options for the PDF presentation command.</shortdesc>
      <elements type="class">
        <property name="presentation">
          <shortdesc>If true, the file type is presentation. If false, the file type is Multi-Page document.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="autoAdvance">
          <shortdesc>If true, the presentation auto advances.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="interval">
          <shortdesc>The amount of time (in seconds) before auto advancing the view. Valid only when 'auto advance' is true. Range: 1 to 60.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="loop">
          <shortdesc>If true, the presentation loops after the last page.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="transition">
          <shortdesc>The image transition type.</shortdesc>
          <datatype>
            <type href="#/TransitionType">TransitionType</type>
            <value>TransitionType.NONE</value>
          </datatype>
        </property>
        <property name="magnification">
          <shortdesc>The magnification type when viewing the image.</shortdesc>
          <datatype>
            <type href="#/MagnificationType">MagnificationType</type>
            <value>MagnificationType.ACTUALSIZE</value>
          </datatype>
        </property>
        <property name="includeFilename">
          <shortdesc>If true, includes the file name for the image.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="PDFFileOptions">
          <shortdesc>Options for creating the PDF file.</shortdesc>
          <datatype>
            <type href="#/PDFSaveOptions">PDFSaveOptions</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryOptions" dynamic="true">
      <shortdesc>Deprecated, the make photo gallery method has moved to Bridge.</shortdesc>
      <elements type="class">
        <property name="layoutStyle">
          <shortdesc>The style to use for laying out the web page.</shortdesc>
          <datatype>
            <type>string</type>
            <value>Centered Frame 1 - Basic</value>
          </datatype>
        </property>
        <property name="emailAddress">
          <shortdesc>The email address to show on the web page.</shortdesc>
          <datatype>
            <type>string</type>
            <value></value>
          </datatype>
        </property>
        <property name="useShortExtension">
          <shortdesc>Short web page extension .htm or long web page extension .html.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="useUTF8Encoding">
          <shortdesc>Web page should use UTF-8 encoding.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeSubFolders">
          <shortdesc>Include all files found in sub folders of the input folder.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="addSizeAttributes">
          <shortdesc>Add width and height attributes for images.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="preserveAllMetadata">
          <shortdesc>Save all of the metadata in the JPEG files.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="bannerOptions">
          <shortdesc>Options related to banner settings.</shortdesc>
          <datatype>
            <type href="#/GalleryBannerOptions">GalleryBannerOptions</type>
          </datatype>
        </property>
        <property name="imagesOptions">
          <shortdesc>Options related to images settings.</shortdesc>
          <datatype>
            <type href="#/GalleryImagesOptions">GalleryImagesOptions</type>
          </datatype>
        </property>
        <property name="thumbnailOptions">
          <shortdesc>Options related to thumbnail settings.</shortdesc>
          <datatype>
            <type href="#/GalleryThumbnailOptions">GalleryThumbnailOptions</type>
          </datatype>
        </property>
        <property name="customColorOptions">
          <shortdesc>Options related to custom color settings.</shortdesc>
          <datatype>
            <type href="#/GalleryCustomColorOptions">GalleryCustomColorOptions</type>
          </datatype>
        </property>
        <property name="securityOptions">
          <shortdesc>Options related to security settings.</shortdesc>
          <datatype>
            <type href="#/GallerySecurityOptions">GallerySecurityOptions</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryBannerOptions" dynamic="true">
      <shortdesc>Deprecated, the make photo gallery method has moved to Bridge.</shortdesc>
      <elements type="class">
        <property name="siteName">
          <shortdesc>Web photo gallery site name.</shortdesc>
          <datatype>
            <type>string</type>
            <value>Adobe Web Photo Gallery</value>
          </datatype>
        </property>
        <property name="photographer">
          <shortdesc>Web photo gallery photographer.</shortdesc>
          <datatype>
            <type>string</type>
            <value></value>
          </datatype>
        </property>
        <property name="contactInfo">
          <shortdesc>Web photo gallery contact info.</shortdesc>
          <datatype>
            <type>string</type>
            <value></value>
          </datatype>
        </property>
        <property name="date">
          <shortdesc>Web photo gallery date.</shortdesc>
          <datatype>
            <type>string</type>
            <value></value>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>The font setting for the banner text.</shortdesc>
          <datatype>
            <type href="#/GalleryFontType">GalleryFontType</type>
            <value>GalleryFontType.ARIAL</value>
          </datatype>
        </property>
        <property name="fontSize">
          <shortdesc>The size of the font for the banner text.</shortdesc>
          <datatype>
            <type>int</type>
            <min>1</min>
            <max>7</max>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryImagesOptions" dynamic="true">
      <shortdesc>Deprecated, the make photo gallery method has moved to Bridge.</shortdesc>
      <elements type="class">
        <property name="numericLinks">
          <shortdesc>Add numeric links.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="resizeImages">
          <shortdesc>Resize images data.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="dimension">
          <shortdesc>Resized image dimensions in pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>350</value>
          </datatype>
        </property>
        <property name="resizeConstraint">
          <shortdesc>How should the image be constrained.</shortdesc>
          <datatype>
            <type href="#/GalleryConstrainType">GalleryConstrainType</type>
            <value>GalleryConstrainType.CONSTRAINBOTH</value>
          </datatype>
        </property>
        <property name="imageQuality">
          <shortdesc>The quality setting for the JPEG image.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>12</max>
            <value>5</value>
          </datatype>
        </property>
        <property name="border">
          <shortdesc>The amount of border pixels you want between your images.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>99</max>
            <value>0</value>
          </datatype>
        </property>
        <property name="includeFilename">
          <shortdesc>Include the file name in the text for the gallery images.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="caption">
          <shortdesc>Generate a caption for the images.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeCredits">
          <shortdesc>Include the credits in the text for the gallery images.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeTitle">
          <shortdesc>Include the title in the text for the gallery images.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeCopyright">
          <shortdesc>Include the copyright in the text for the gallery images.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>Font for the gallery images text.</shortdesc>
          <datatype>
            <type href="#/GalleryFontType">GalleryFontType</type>
            <value>GalleryFontType.ARIAL</value>
          </datatype>
        </property>
        <property name="fontSize">
          <shortdesc>Font size for the gallery images text.</shortdesc>
          <datatype>
            <type>int</type>
            <min>1</min>
            <max>7</max>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryThumbnailOptions" dynamic="true">
      <shortdesc>Deprecated, the make photo gallery method has moved to Bridge.</shortdesc>
      <elements type="class">
        <property name="includeFilename">
          <shortdesc>Include file name for thumbnail.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="caption">
          <shortdesc>With caption.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeCredits">
          <shortdesc>Include credits for thumbnail.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeTitle">
          <shortdesc>Include title for thumbnail.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="includeCopyright">
          <shortdesc>Include copyright for thumbnail.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>Web photo gallery font.</shortdesc>
          <datatype>
            <type href="#/GalleryFontType">GalleryFontType</type>
            <value>GalleryFontType.ARIAL</value>
          </datatype>
        </property>
        <property name="fontSize">
          <shortdesc>The size of the font for the thumbnail images text.</shortdesc>
          <datatype>
            <type>int</type>
            <min>1</min>
            <max>7</max>
            <value>3</value>
          </datatype>
        </property>
        <property name="size">
          <shortdesc>The size of the thumbnail images.</shortdesc>
          <datatype>
            <type href="#/GalleryThumbSizeType">GalleryThumbSizeType</type>
            <value>GalleryThumbSizeType.MEDIUM</value>
          </datatype>
        </property>
        <property name="dimension">
          <shortdesc>Web photo gallery thumbnail dimension in pixels.</shortdesc>
          <datatype>
            <type>int</type>
            <value>75</value>
          </datatype>
        </property>
        <property name="columnCount">
          <shortdesc>Web photo gallery thumbnail columns.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="rowCount">
          <shortdesc>Web photo gallery thumbnail rows.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
        <property name="border">
          <shortdesc>The amount of border pixels you want around your thumbnail images.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
            <max>99</max>
            <value>0</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GalleryCustomColorOptions" dynamic="true">
      <shortdesc>Deprecated, the make photo gallery method has moved to Bridge.</shortdesc>
      <elements type="class">
        <property name="backgroundColor">
          <shortdesc>Background color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="bannerColor">
          <shortdesc>Banner color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="textColor">
          <shortdesc>Text color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="activeLinkColor">
          <shortdesc>Active link color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="linkColor">
          <shortdesc>Link color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="visitedLinkColor">
          <shortdesc>Visited link color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="GallerySecurityOptions" dynamic="true">
      <shortdesc>Deprecated, the make photo gallery method has moved to Bridge.</shortdesc>
      <elements type="class">
        <property name="content">
          <shortdesc>Web photo gallery security content.</shortdesc>
          <datatype>
            <type href="#/GallerySecurityType">GallerySecurityType</type>
            <value>GallerySecurityType.NONE</value>
          </datatype>
        </property>
        <property name="text">
          <shortdesc>Web photo gallery security custom text.</shortdesc>
          <datatype>
            <type>string</type>
            <value></value>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>Web photo gallery security font.</shortdesc>
          <datatype>
            <type href="#/GalleryFontType">GalleryFontType</type>
            <value>GalleryFontType.ARIAL</value>
          </datatype>
        </property>
        <property name="fontSize">
          <shortdesc>Web photo gallery security font size.</shortdesc>
          <datatype>
            <type>int</type>
            <min>1</min>
            <value>36</value>
          </datatype>
        </property>
        <property name="textColor">
          <shortdesc>Web page security text color.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="opacity">
          <shortdesc>Web page security opacity as a percent.</shortdesc>
          <datatype>
            <type>int</type>
            <value>100</value>
          </datatype>
        </property>
        <property name="textPosition">
          <shortdesc>Web photo gallery security text position.</shortdesc>
          <datatype>
            <type href="#/GallerySecurityTextPositionType">GallerySecurityTextPositionType</type>
            <value>GallerySecurityTextPositionType.CENTERED</value>
          </datatype>
        </property>
        <property name="textRotate">
          <shortdesc>Web photo gallery security text rotate.</shortdesc>
          <datatype>
            <type href="#/GallerySecurityTextRotateType">GallerySecurityTextRotateType</type>
            <value>GallerySecurityTextRotateType.ZERO</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ContactSheetOptions" dynamic="true">
      <shortdesc>Options that can be specified for a contact sheet.</shortdesc>
      <elements type="class">
        <property name="width">
          <shortdesc>The width (in pixels) of the resulting document. Range: 100 to 2900.</shortdesc>
          <datatype>
            <type>int</type>
            <value>576</value>
          </datatype>
        </property>
        <property name="height">
          <shortdesc>The height (in pixels) of the resulting document. Range: 100 to 2900.</shortdesc>
          <datatype>
            <type>int</type>
            <value>720</value>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The resolution of the document (in pixels per inch). Range: 35 to 1200.</shortdesc>
          <datatype>
            <type>number</type>
            <value>72.0</value>
          </datatype>
        </property>
        <property name="mode">
          <shortdesc>The document color mode.</shortdesc>
          <datatype>
            <type href="#/NewDocumentMode">NewDocumentMode</type>
            <value>NewDocumentMode.RGB</value>
          </datatype>
        </property>
        <property name="flatten">
          <shortdesc>If true, flattens all layers in the final document.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="acrossFirst">
          <shortdesc>If true, places the images horizontally first.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="useAutoSpacing">
          <shortdesc>If true, auto spaces the images in the contact sheet.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="columnCount">
          <shortdesc>The number of contact sheet columns.</shortdesc>
          <datatype>
            <type>int</type>
            <value>5</value>
          </datatype>
        </property>
        <property name="rowCount">
          <shortdesc>The number of contact sheet rows.</shortdesc>
          <datatype>
            <type>int</type>
            <value>6</value>
          </datatype>
        </property>
        <property name="vertical">
          <shortdesc>The vertical spacing (in pixels) between images. Range: 0 to 29000.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="horizontal">
          <shortdesc>The horizontal spacing (in pixels) between images. Range: 0 to 29000.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="bestFit">
          <shortdesc>If true, rotates images for best fit.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="caption">
          <shortdesc>If true, uses the filename as a caption for the image.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>The font used for the caption.</shortdesc>
          <datatype>
            <type href="#/GalleryFontType">GalleryFontType</type>
            <value>GalleryFontType.ARIAL</value>
          </datatype>
        </property>
        <property name="fontSize">
          <shortdesc>The caption font size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PicturePackageOptions" dynamic="true">
      <shortdesc>Options that can be specified for a Picture Package.</shortdesc>
      <elements type="class">
        <property name="layout">
          <shortdesc>The layout to use to generate the picture package.</shortdesc>
          <datatype>
            <type>string</type>
            <value>(2)5x7</value>
          </datatype>
        </property>
        <property name="resolution">
          <shortdesc>The resolution of the document (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
            <value>72.0</value>
          </datatype>
        </property>
        <property name="mode">
          <shortdesc>The document color mode.</shortdesc>
          <datatype>
            <type href="#/NewDocumentMode">NewDocumentMode</type>
            <value>NewDocumentMode.RGB</value>
          </datatype>
        </property>
        <property name="flatten">
          <shortdesc>If true, flattens all layers in the final document.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="content">
          <shortdesc>The content information.</shortdesc>
          <datatype>
            <type href="#/PicturePackageTextType">PicturePackageTextType</type>
            <value>PicturePackageTextType.NONE</value>
          </datatype>
        </property>
        <property name="text">
          <shortdesc>The picture package custom text.</shortdesc>
          <datatype>
            <type>string</type>
            <value></value>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>The font used for security text.</shortdesc>
          <datatype>
            <type href="#/GalleryFontType">GalleryFontType</type>
            <value>GalleryFontType.ARIAL</value>
          </datatype>
        </property>
        <property name="fontSize">
          <shortdesc>The font size.</shortdesc>
          <datatype>
            <type>int</type>
            <value>12</value>
          </datatype>
        </property>
        <property name="opacity">
          <shortdesc>The web page security text opacity (as a percentage) Range: 0 to 100.</shortdesc>
          <datatype>
            <type>int</type>
            <value>100</value>
          </datatype>
        </property>
        <property name="textColor">
          <shortdesc>The color of the security text.</shortdesc>
          <datatype>
            <type href="#/RGBColor">RGBColor</type>
          </datatype>
        </property>
        <property name="textPosition">
          <shortdesc>The position of the security text.</shortdesc>
          <datatype>
            <type href="#/GallerySecurityTextPositionType">GallerySecurityTextPositionType</type>
            <value>GallerySecurityTextPositionType.CENTERED</value>
          </datatype>
        </property>
        <property name="textRotate">
          <shortdesc>The orientation of the security text.</shortdesc>
          <datatype>
            <type href="#/GallerySecurityTextRotateType">GallerySecurityTextRotateType</type>
            <value>GallerySecurityTextRotateType.ZERO</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="BatchOptions" dynamic="true">
      <shortdesc>Options to specify when running a Batch command.</shortdesc>
      <elements type="class">
        <property name="overrideOpen">
          <shortdesc>If true, overrides action open commands.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="suppressOpen">
          <shortdesc>If true, suppresses file open options dialogs.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="suppressProfile">
          <shortdesc>If true, suppresses color profile warnings.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="destination">
          <shortdesc>The type of destination for the processed files.</shortdesc>
          <datatype>
            <type href="#/BatchDestinationType">BatchDestinationType</type>
            <value>BatchDestinationType.NODESTINATION</value>
          </datatype>
        </property>
        <property name="destinationFolder">
          <shortdesc>The folder location for the processed files. Valid only when 'destination' = folder.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="overrideSave">
          <shortdesc>If true, overrides save as action steps with the specified destination.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>false</value>
          </datatype>
        </property>
        <property name="fileNaming">
          <shortdesc>A list of file naming options. Maximum: 6.</shortdesc>
          <datatype>
            <type href="#/FileNamingType">FileNamingType</type>
            <array />
          </datatype>
        </property>
        <property name="startingSerial">
          <shortdesc>The starting serial number to use in naming files.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="windowsCompatible">
          <shortdesc>If true, the final file names are Windows compatible.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="macintoshCompatible">
          <shortdesc>If true, the final file names are Macintosh compatible.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="unixCompatible">
          <shortdesc>If true, the final file names are Unix compatible.</shortdesc>
          <datatype>
            <type>bool</type>
            <value>true</value>
          </datatype>
        </property>
        <property name="errorFile">
          <shortdesc>The file in which to log errors encountered. To display errors on the screen and stop batch processing when errors occur, leave blank.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="SubPathInfo" dynamic="true">
      <shortdesc>An array of path point info objects that describes a straight or curved segment of a path.</shortdesc>
      <elements type="class">
        <property name="operation">
          <shortdesc>The sub path operation on other sub paths.</shortdesc>
          <datatype>
            <type href="#/ShapeOperation">ShapeOperation</type>
          </datatype>
        </property>
        <property name="closed">
          <shortdesc>If true, the path is closed.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="entireSubPath">
          <shortdesc>All of the sub path item's path points.</shortdesc>
          <datatype>
            <type href="#/PathPointInfo">PathPointInfo</type>
            <array />
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PathPointInfo" dynamic="true">
      <shortdesc>A point on a path, expressed as an array of three coordinate arrays: the anchor point, left direction point, and right direction point. For paths that are straight segments (not curved), the coordinates of all three points are the same. For curved segements, the coordinates are different. The difference between the anchor point and the left or right direction points determines the arc of the curve. You use the left direction point to bend the curve "outward" or make it convex; you use the right direction point to bend the curve "inward" or make it concave.</shortdesc>
      <elements type="class">
        <property name="anchor">
          <shortdesc>The x and y coordinates of one end point of the path segment.</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
            <array/>
          </datatype>
        </property>
        <property name="leftDirection">
          <shortdesc>The location of the left direction point ("in" position).</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
            <array/>
          </datatype>
        </property>
        <property name="rightDirection">
          <shortdesc>The location of the right direction point ("out" position).</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
            <array/>
          </datatype>
        </property>
        <property name="kind">
          <shortdesc>The point type.</shortdesc>
          <datatype>
            <type href="#/PointKind">PointKind</type>
          </datatype>
        </property>
      </elements>
      <elements type="instance">
        <property name="anchor">
          <shortdesc>The x and y coordinates of one end point of the path segment.</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
            <array/>
          </datatype>
        </property>
        <property name="leftDirection">
          <shortdesc>The location of the left direction point ("in" position).</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
            <array/>
          </datatype>
        </property>
        <property name="rightDirection">
          <shortdesc>The location of the right direction point ("out" position).</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
            <array/>
          </datatype>
        </property>
        <property name="kind">
          <shortdesc>The point type.</shortdesc>
          <datatype>
            <type href="#/PointKind">PointKind</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ActionDescriptor" dynamic="true">
      <shortdesc>A record of key-value pairs for actions, such as those included on the Adobe Photoshop Actions menu. The ActionDescriptor class is part of the Action Manager functionality. For more details on the Action Manager, see the Photoshop Scripting Guide.</shortdesc>
      <elements type="class">
        <property name="count" rwaccess="readonly">
          <shortdesc>The number of keys contained in the descriptor.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ActionList" dynamic="true">
      <shortdesc>The list of commands that comprise an Action (such as an Action created using the Actions palette in the Adobe Photoshop application). The action list object is part of the Action Manager functionality. For details on using the Action Manager, see the Photoshop Scripting Guide.</shortdesc>
      <elements type="class">
        <property name="count" rwaccess="readonly">
          <shortdesc>The number of commands that comprise the action.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ActionReference" dynamic="true">
      <shortdesc>Contains data describing a referenced Action. The action reference object is part of the Action Manager functionality. For details on using the Action Manager, see the Photoshop Scripting Guide.</shortdesc>
      <elements type="class" />
    </classdef>
    <classdef name="Application" dynamic="true">
      <shortdesc>The Adobe Photoshop application object, which contains all other Adobe Photoshop objects.</shortdesc>
      <description>
        This is the root of the object model, and provides access to all other objects. To access the properties and methods, you can use the pre-defined global variable <i>app</i>. For example:  <font face="Courier">var currentDoc = app.activeDocument; </font></description>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="colorSettings">
          <shortdesc>The name of the selected color setting's set.</shortdesc>
          <datatype>
            <type>any</type>
          </datatype>
        </property>
        <property name="activeDocument">
          <shortdesc>The frontmost document.</shortdesc>
          <datatype>
            <type href="#/Document">Document</type>
          </datatype>
        </property>
        <property name="name" rwaccess="readonly">
          <shortdesc>The application name.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="path" rwaccess="readonly">
          <shortdesc>The full path of the location of the Adobe Photoshop application.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="preferences" rwaccess="readonly">
          <shortdesc>The application preference settings (equivalent to selecting Edit &gt; Preferences in the Adobe Photoshop application in Windows or Photoshop &gt; Preferences in Mac OS).</shortdesc>
          <datatype>
            <type href="#/Preferences">Preferences</type>
          </datatype>
        </property>
        <property name="scriptingVersion" rwaccess="readonly">
          <shortdesc>The version of the Scripting interface.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="freeMemory" rwaccess="readonly">
          <shortdesc>The amount of unused memory available to Photoshop.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="version" rwaccess="readonly">
          <shortdesc>The version of Adobe Photoshop application that you are running.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="displayDialogs">
          <shortdesc>The dialog mode for the document, which indicates whether or not Photoshop displays dialogs when the script runs.</shortdesc>
          <datatype>
            <type href="#/DialogModes">DialogModes</type>
          </datatype>
        </property>
        <property name="foregroundColor">
          <shortdesc>The default foreground color (used to paint, fill, and stroke selections).</shortdesc>
          <datatype>
            <type href="#/SolidColor">SolidColor</type>
          </datatype>
        </property>
        <property name="backgroundColor">
          <shortdesc>The default background color (used to paint, fill, and stroke selections).</shortdesc>
          <datatype>
            <type href="#/SolidColor">SolidColor</type>
          </datatype>
        </property>
        <property name="playbackParameters">
          <shortdesc>The playback options, which indicate the speed at which Photoshop plays actions.</shortdesc>
          <datatype>
            <type href="#/ActionDescriptor">ActionDescriptor</type>
          </datatype>
        </property>
        <property name="playbackDisplayDialogs">
          <shortdesc>The dialog mode for playback mode, which indicates whether or not Photoshop displays dialogs in playback mode.</shortdesc>
          <datatype>
            <type href="#/DialogModes">DialogModes</type>
          </datatype>
        </property>
        <property name="notifiersEnabled">
          <shortdesc>If true, notifiers are enabled.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="windowsFileTypes" rwaccess="readonly">
          <shortdesc>A list of the image file extensions Photoshop can open.</shortdesc>
          <datatype>
            <type>string</type>
            <array />
          </datatype>
        </property>
        <property name="macintoshFileTypes" rwaccess="readonly">
          <shortdesc>A list of the image file types Photoshop can open.</shortdesc>
          <datatype>
            <type>string</type>
            <array />
          </datatype>
        </property>
        <property name="preferencesFolder" rwaccess="readonly">
          <shortdesc>The full path to the preferences folder.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="locale" rwaccess="readonly">
          <shortdesc>The language locale of the application.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="documents" rwaccess="readonly">
          <shortdesc>The collection of open documents.</shortdesc>
          <datatype>
            <type href="#/Documents">Documents</type>
          </datatype>
        </property>
        <property name="fonts" rwaccess="readonly">
          <shortdesc>The fonts installed on this system.</shortdesc>
          <datatype>
            <type href="#/TextFonts">TextFonts</type>
          </datatype>
        </property>
        <property name="notifiers" rwaccess="readonly">
          <shortdesc>The notifiers currently configured (in the Scripts Events Manager menu in the application).</shortdesc>
          <datatype>
            <type href="#/Notifiers">Notifiers</type>
          </datatype>
        </property>
        <property name="scriptingBuildDate" rwaccess="readonly">
          <shortdesc>The build date of the scripting interface.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="recentFiles" rwaccess="readonly">
          <shortdesc>Files in the Recent Files list.</shortdesc>
          <datatype>
            <type href="#/FileArray">FileArray</type>
          </datatype>
        </property>
        <property name="build" rwaccess="readonly">
          <shortdesc>The build number of Adobe Photoshop application.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="systemInformation" rwaccess="readonly">
          <shortdesc>System information of the host application and machine.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="measurementLog" rwaccess="readonly">
          <shortdesc>The log of measurements taken.</shortdesc>
          <datatype>
            <type href="#/MeasurementLog">MeasurementLog</type>
          </datatype>
        </property>
        <property name="currentTool">
          <shortdesc>Name of the current tool.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <method name="toolSupportsBrushes">
          <shortdesc>Check if the specified tool supports brushes.</shortdesc>
          <parameters>
            <parameter name="tool">
              <shortdesc>The name of the tool to check.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="saveToolBrushToFile">
          <shortdesc>PRIVATE - save the current tool brush to a file.</shortdesc>
          <parameters>
            <parameter name="file">
              <shortdesc>File to save the brush to.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyToolBrushFromFile">
          <shortdesc>PRIVATE - set the current tool brush from a file.</shortdesc>
          <parameters>
            <parameter name="file">
              <shortdesc>Brush file to apply.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="thumbnailStyleFile">
          <shortdesc>PRIVATE - write out a thumbnail file from a style file.</shortdesc>
          <parameters>
            <parameter name="file">
              <shortdesc>Style file to read.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="dest">
              <shortdesc>Thumb file to write.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="thumbnailSize" optional="true">
              <shortdesc>Size of thumbnail to save.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="backgroundValue" optional="true">
              <shortdesc>Background grayvalue.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="thumbnailText">
          <shortdesc>PRIVATE - write out a thumbnail file from text parameters.</shortdesc>
          <parameters>
            <parameter name="dest">
              <shortdesc>Thumb file to write.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="text" optional="true">
              <shortdesc>Text to render.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="font" optional="true">
              <shortdesc>PostScript name of font.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="size" optional="true">
              <shortdesc>Size of type.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="color" optional="true">
              <shortdesc>Color of type.</shortdesc>
              <datatype>
                <type href="#/SolidColor">SolidColor</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="doProgress">
          <shortdesc>Performs a task with a progress bar. Other progress APIs must be called periodically to update the progress bar and allow cancelling.</shortdesc>
          <parameters>
            <parameter name="progressString">
              <shortdesc>String to show in the progress window.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="javaScriptString">
              <shortdesc>JavaScriptString to execute.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="doForcedProgress">
          <shortdesc>Performs a task with a progress bar. Forces progress bar to display, ignoring the normal heuristics that keep it from showing unnecessarily (e.g. during very short tasks). Other progress APIs must be called periodically to update the progress bar and allow cancelling.</shortdesc>
          <parameters>
            <parameter name="progressString">
              <shortdesc>String to show in the progress window.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="javaScriptString">
              <shortdesc>JavaScriptString to execute.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="changeProgressText">
          <shortdesc>Changes the text that appears in the progress window.</shortdesc>
          <parameters>
            <parameter name="progressString">
              <shortdesc>String to show in the progress window.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="doProgressTask">
          <shortdesc>Sections off a portion of the unused progress bar for execution of a subtask. Returns false on cancel.</shortdesc>
          <parameters>
            <parameter name="taskLength">
              <shortdesc>Amount of the unused progress bar to section off, between 0.0 and 1.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="javaScriptString">
              <shortdesc>JavaScriptString to execute.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="doProgressSegmentTask">
          <shortdesc>Sections off a portion of the unused progress bar for execution of a subtask. Returns false on cancel. Use when iterating a list of tasks with unequal run times.</shortdesc>
          <parameters>
            <parameter name="segmentLength">
              <shortdesc>The length of the current task.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="done">
              <shortdesc>The total length of all completed tasks.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="total">
              <shortdesc>The total length of all tasks.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="javaScriptString">
              <shortdesc>JavaScriptString to execute.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="doProgressSubTask">
          <shortdesc>Sections off a portion of the unused progress bar for execution of a subtask. Returns false on cancel. Use when iterating a simple list of tasks with equal run times.</shortdesc>
          <parameters>
            <parameter name="index">
              <shortdesc>The 0-based index of the current task.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="limit">
              <shortdesc>The total number of tasks.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="javaScriptString">
              <shortdesc>JavaScriptString to execute.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="updateProgress">
          <shortdesc>Updates the progress bar started by doProgress. Use for manual non-task based progress updating. Returns false on cancel.</shortdesc>
          <parameters>
            <parameter name="done">
              <shortdesc>The number of tasks completed.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="total">
              <shortdesc>The total number of tasks.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="togglePalettes">
          <shortdesc>Toggle palette visibility.</shortdesc>
        </method>
        <method name="doAction">
          <shortdesc>Plays the specified action from the Actions palette.</shortdesc>
          <parameters>
            <parameter name="action">
              <shortdesc>The name of the action to play. (Note that the action name is case-sensitive and must match the name as it appears in the Actions palette.)</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="from">
              <shortdesc>The name of the action set containing the action being played. (Note that the Action Set name is case-sensitive and must match the name as it appears in the Actions palette.)</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="load">
          <shortdesc>Loads a support document.</shortdesc>
          <parameters>
            <parameter name="document">
              <shortdesc>The document to load.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="open">
          <shortdesc>Opens the specified document file(s).</shortdesc>
          <parameters>
            <parameter name="document">
              <shortdesc>The document(s) to opend.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="as" optional="true">
              <shortdesc>The document type (The default is to let Photoshop deduce the format).</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
            <parameter name="asSmartObject" optional="true">
              <shortdesc>Creates a smart object around the document.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Document">Document</type>
          </datatype>
        </method>
        <method name="purge">
          <shortdesc>Purges one or more caches.</shortdesc>
          <parameters>
            <parameter name="target">
              <shortdesc>The caches to purge.</shortdesc>
              <datatype>
                <type href="#/PurgeTarget">PurgeTarget</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="makePhotoGallery">
          <shortdesc>DEPRECATED. Creates a web photo gallery.</shortdesc>
          <parameters>
            <parameter name="inputFolder">
              <shortdesc>Folder to process or an array of files to process.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
            <parameter name="outputFolder">
              <shortdesc>Location for output files.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for the web photo gallery.</shortdesc>
              <datatype>
                <type href="#/GalleryOptions">GalleryOptions</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="makePDFPresentation">
          <shortdesc>Creates a PDF presentation file.</shortdesc>
          <parameters>
            <parameter name="inputFiles">
              <shortdesc>The input files to include in the presentation.</shortdesc>
              <datatype>
                <type href="#/AliasArray">AliasArray</type>
              </datatype>
            </parameter>
            <parameter name="outputFile">
              <shortdesc>The location of the output file.</shortdesc>
              <datatype>
                <type href="#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for the PDF presentation.</shortdesc>
              <datatype>
                <type href="#/PresentationOptions">PresentationOptions</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="makePhotomerge">
          <shortdesc>DEPRECATED. Merges multiple files into one, user interaction required.</shortdesc>
          <parameters>
            <parameter name="inputFiles">
              <shortdesc>List of input files to include.</shortdesc>
              <datatype>
                <type href="#/AliasArray">AliasArray</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="makeContactSheet">
          <shortdesc>Creates a contact sheet from multiple files.</shortdesc>
          <parameters>
            <parameter name="inputFiles">
              <shortdesc>The files to include.</shortdesc>
              <datatype>
                <type href="#/AliasArray">AliasArray</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for creating the contact sheet.</shortdesc>
              <datatype>
                <type href="#/ContactSheetOptions">ContactSheetOptions</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="makePicturePackage">
          <shortdesc>Creates a picture package from multiple files.</shortdesc>
          <parameters>
            <parameter name="inputFiles">
              <shortdesc>The files to include.</shortdesc>
              <datatype>
                <type href="#/AliasArray">AliasArray</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for creating a Picture Package.</shortdesc>
              <datatype>
                <type href="#/PicturePackageOptions">PicturePackageOptions</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="batch">
          <shortdesc>Runs the batch automation routine; analogous to using the Batch command in Photoshop.</shortdesc>
          <parameters>
            <parameter name="inputFiles">
              <shortdesc>The files to operate on.</shortdesc>
              <datatype>
                <type href="#/AliasArray">AliasArray</type>
              </datatype>
            </parameter>
            <parameter name="action">
              <shortdesc>The name of the action to play (note that the Action name is case-sensitive and must match the name in the Actions palette).</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="from">
              <shortdesc>The name of the action set containing the action being played (note that the Action Set name is case-sensitive and must match the name in the Actions palette).</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for batch automation.</shortdesc>
              <datatype>
                <type href="#/BatchOptions">BatchOptions</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="bringToFront">
          <shortdesc>Makes Photoshop the active application.</shortdesc>
        </method>
        <method name="refresh">
          <shortdesc>Pauses the script until the application refreshes.</shortdesc>
        </method>
        <method name="refreshFonts">
          <shortdesc>Force the font list to get refreshed.</shortdesc>
        </method>
        <method name="putCustomOptions">
          <shortdesc>Save user objects in the Photoshop registry.</shortdesc>
          <parameters>
            <parameter name="key">
              <shortdesc>The unique string ID for the user object.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="customObject">
              <shortdesc>The user-defined custom object to save in the registry.</shortdesc>
              <datatype>
                <type href="#/ActionDescriptor">ActionDescriptor</type>
              </datatype>
            </parameter>
            <parameter name="persistent" optional="true">
              <shortdesc>If true, the object persists after the script has finished.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="getCustomOptions">
          <shortdesc>Retrieves user objects from the Photoshop registry for the ID with value key.</shortdesc>
          <parameters>
            <parameter name="key">
              <shortdesc>The unique string ID for the user object.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ActionDescriptor">ActionDescriptor</type>
          </datatype>
        </method>
        <method name="eraseCustomOptions">
          <shortdesc>Removes the specified user objects from the Photoshop registry.</shortdesc>
          <parameters>
            <parameter name="key">
              <shortdesc>The unique string ID for user object(s) to remove.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="featureEnabled">
          <shortdesc>If true, the specified feature is enabled.</shortdesc>
          <parameters>
            <parameter name="name">
              <shortdesc>The name of the feature.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="openDialog">
          <shortdesc>Uses the Photoshop open dialog to select files.</shortdesc>
          <datatype>
            <type href="#/FileArray">FileArray</type>
          </datatype>
        </method>
        <method name="runMenuItem">
          <shortdesc>Run a menu item.</shortdesc>
          <parameters>
            <parameter name="menuID">
              <shortdesc>Id of menu to run.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="system">
          <shortdesc>Perform a system call.</shortdesc>
          <parameters>
            <parameter name="callString">
              <shortdesc>System call string.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>int</type>
          </datatype>
        </method>
        <method name="executeAction">
          <shortdesc>Plays an ActionManager event.</shortdesc>
          <parameters>
            <parameter name="eventID">
              <shortdesc>The event to play.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="descriptor" optional="true">
              <shortdesc>The action descriptor to play.</shortdesc>
              <datatype>
                <type href="#/ActionDescriptor">ActionDescriptor</type>
              </datatype>
            </parameter>
            <parameter name="displayDialogs" optional="true">
              <shortdesc>The display permissions for dialogs and alert messages.</shortdesc>
              <datatype>
                <type href="#/DialogModes">DialogModes</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ActionDescriptor">ActionDescriptor</type>
          </datatype>
        </method>
        <method name="executeActionGet">
          <shortdesc>Obtains an action descriptor.</shortdesc>
          <parameters>
            <parameter name="reference">
              <shortdesc>The reference specification of the property.</shortdesc>
              <datatype>
                <type href="#/ActionReference">ActionReference</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ActionDescriptor">ActionDescriptor</type>
          </datatype>
        </method>
        <method name="stringIDToTypeID">
          <shortdesc>Converts from a string ID to a runtime ID.</shortdesc>
          <parameters>
            <parameter name="stringID">
              <shortdesc>The ID to convert.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>int</type>
          </datatype>
        </method>
        <method name="typeIDToStringID">
          <shortdesc>Converts from a runtime ID to a string ID.</shortdesc>
          <parameters>
            <parameter name="typeID">
              <shortdesc>The ID to convert.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="charIDToTypeID">
          <shortdesc>Converts from a four character code to a runtime ID.</shortdesc>
          <parameters>
            <parameter name="charID">
              <shortdesc>The ID to convert.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>int</type>
          </datatype>
        </method>
        <method name="typeIDToCharID">
          <shortdesc>Converts from a runtime ID to a character ID.</shortdesc>
          <parameters>
            <parameter name="typeID">
              <shortdesc>The ID to convert.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="beep">
          <shortdesc>Alerts the user.</shortdesc>
        </method>
        <method name="isQuicktimeAvailable">
          <shortdesc>Returns true if Quicktime is installed.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="showColorPicker">
          <shortdesc>Display color picker dialog. Returns false if dialog is cancelled, true otherwise.</shortdesc>
          <parameters>
            <parameter name="pickForeground" optional="true">
              <shortdesc>If true the foreground color is chosen, if false the background color is chosen.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="Document" dynamic="true">
      <shortdesc>The active containment object for the layers and all other objects in the script; the basic canvas for the file.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="backgroundLayer" rwaccess="readonly">
          <shortdesc>The background layer for the document.</shortdesc>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </property>
        <property name="bitsPerChannel">
          <shortdesc>The number of bits per channel.</shortdesc>
          <datatype>
            <type href="#/BitsPerChannelType">BitsPerChannelType</type>
          </datatype>
        </property>
        <property name="colorProfileType">
          <shortdesc>The type of color model that defines the working space of the document.</shortdesc>
          <datatype>
            <type href="#/ColorProfileType">ColorProfileType</type>
          </datatype>
        </property>
        <property name="colorProfileName">
          <shortdesc>The name of the color profile. Valid only when no value is specified for color profile kind (to indicate a custom color profile).</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="mode" rwaccess="readonly">
          <shortdesc>The color profile.</shortdesc>
          <datatype>
            <type href="#/DocumentMode">DocumentMode</type>
          </datatype>
        </property>
        <property name="componentChannels" rwaccess="readonly">
          <shortdesc>The color component channels for this document.</shortdesc>
          <datatype>
            <type href="#/Channel">Channel</type>
            <array />
          </datatype>
        </property>
        <property name="activeHistoryState">
          <shortdesc>The current history state for this document.</shortdesc>
          <datatype>
            <type href="#/HistoryState">HistoryState</type>
          </datatype>
        </property>
        <property name="activeHistoryBrushSource">
          <shortdesc>The history state to use with the history brush.</shortdesc>
          <datatype>
            <type href="#/HistoryState">HistoryState</type>
          </datatype>
        </property>
        <property name="activeLayer">
          <shortdesc>The selected layer.</shortdesc>
          <datatype>
            <type href="#/Layer">Layer</type>
          </datatype>
        </property>
        <property name="activeChannels">
          <shortdesc>The selected channels.</shortdesc>
          <datatype>
            <type href="#/Channel">Channel</type>
            <array />
          </datatype>
        </property>
        <property name="info" rwaccess="readonly">
          <shortdesc>Metadata about the document.</shortdesc>
          <datatype>
            <type href="#/DocumentInfo">DocumentInfo</type>
          </datatype>
        </property>
        <property name="printSettings" rwaccess="readonly">
          <shortdesc>Document print settings.</shortdesc>
          <datatype>
            <type href="#/DocumentPrintSettings">DocumentPrintSettings</type>
          </datatype>
        </property>
        <property name="fullName" rwaccess="readonly">
          <shortdesc>The full path name of the document.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="height" rwaccess="readonly">
          <shortdesc>The height of the document.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="managed" rwaccess="readonly">
          <shortdesc>If true, the document is a workgroup document.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="saved" rwaccess="readonly">
          <shortdesc>If true, the document been saved since the last change.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="name" rwaccess="readonly">
          <shortdesc>The document name.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="path" rwaccess="readonly">
          <shortdesc>The path to the document.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="quickMaskMode">
          <shortdesc>If true, the document is in Quick Mask mode.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="resolution" rwaccess="readonly">
          <shortdesc>The resolution of the document (in pixels per inch)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="selection" rwaccess="readonly">
          <shortdesc>The selected area of the document.</shortdesc>
          <datatype>
            <type href="#/Selection">Selection</type>
          </datatype>
        </property>
        <property name="width" rwaccess="readonly">
          <shortdesc>The width of the document.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="histogram" rwaccess="readonly">
          <shortdesc>A histogram showing the number of pixels at each color intensity level for the composite channel.</shortdesc>
          <description>Valid only when 'mode' = RGB, CMYK, or indexed.</description>
          <datatype>
            <type>int</type>
            <array />
          </datatype>
        </property>
        <property name="pixelAspectRatio">
          <shortdesc>The (custom) pixel aspect ratio of the document. Range: 0.100 to 10.000.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="xmpMetadata" rwaccess="readonly">
          <shortdesc>The XMP properties of the document. The Camera RAW settings are stored here.</shortdesc>
          <datatype>
            <type href="#/XMPMetadata">XMPMetadata</type>
          </datatype>
        </property>
        <property name="measurementScale" rwaccess="readonly">
          <shortdesc>The measurement scale of the document.</shortdesc>
          <datatype>
            <type href="#/MeasurementScale">MeasurementScale</type>
          </datatype>
        </property>
        <property name="id" rwaccess="readonly">
          <shortdesc>The unique ID of this document.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="layers" rwaccess="readonly">
          <shortdesc>The layers collection in the document.</shortdesc>
          <datatype>
            <type href="#/Layers">Layers</type>
          </datatype>
        </property>
        <property name="layerSets" rwaccess="readonly">
          <shortdesc>The layer sets collection in the document.</shortdesc>
          <datatype>
            <type href="#/LayerSets">LayerSets</type>
          </datatype>
        </property>
        <property name="artLayers" rwaccess="readonly">
          <shortdesc>The art layers collection in the document.</shortdesc>
          <datatype>
            <type href="#/ArtLayers">ArtLayers</type>
          </datatype>
        </property>
        <property name="channels" rwaccess="readonly">
          <shortdesc>The channels collection in this document.</shortdesc>
          <datatype>
            <type href="#/Channels">Channels</type>
          </datatype>
        </property>
        <property name="guides" rwaccess="readonly">
          <shortdesc>The guides in this document.</shortdesc>
          <datatype>
            <type href="#/Guides">Guides</type>
          </datatype>
        </property>
        <property name="historyStates" rwaccess="readonly">
          <shortdesc>The history states collection in this document.</shortdesc>
          <datatype>
            <type href="#/HistoryStates">HistoryStates</type>
          </datatype>
        </property>
        <property name="layerComps" rwaccess="readonly">
          <shortdesc>The layer comps collection in this document.</shortdesc>
          <datatype>
            <type href="#/LayerComps">LayerComps</type>
          </datatype>
        </property>
        <property name="pathItems" rwaccess="readonly">
          <shortdesc>The path items collection in this document.</shortdesc>
          <datatype>
            <type href="#/PathItems">PathItems</type>
          </datatype>
        </property>
        <property name="countItems" rwaccess="readonly">
          <shortdesc>The current count items in the document.</shortdesc>
          <datatype>
            <type href="#/CountItems">CountItems</type>
          </datatype>
        </property>
        <property name="colorSamplers" rwaccess="readonly">
          <shortdesc>The current color samplers associated with the document.</shortdesc>
          <datatype>
            <type href="#/ColorSamplers">ColorSamplers</type>
          </datatype>
        </property>
        <method name="duplicate">
          <shortdesc>Duplicate this object.</shortdesc>
          <parameters>
            <parameter name="relativeObject">
              <datatype>
                <type>Object</type>
              </datatype>
            </parameter>
            <parameter name="insertionLocation">
              <datatype>
                <type href="#/ElementPlacement">ElementPlacement</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Document">Document</type>
          </datatype>
        </method>
        <method name="close">
          <shortdesc>Closes the document.</shortdesc>
          <parameters>
            <parameter name="saving" optional="true">
              <shortdesc>Specifies whether changes should be saved before closing.</shortdesc>
              <datatype>
                <type href="#/SaveOptionsType">SaveOptionsType</type>
                <value>SaveOptionsType.PROMPTTOSAVECHANGES</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="convertProfile">
          <shortdesc>Converts the document from using one color profile to using another.</shortdesc>
          <parameters>
            <parameter name="destinationProfile">
              <shortdesc>The color profile to convert to. Either a string specifying a color profile, one of the working color spaces, or Lab color.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="intent">
              <shortdesc>The conversion intent.</shortdesc>
              <datatype>
                <type href="#/Intent">Intent</type>
              </datatype>
            </parameter>
            <parameter name="blackPointCompensation" optional="true">
              <shortdesc>If true, black point compensation is used.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
            <parameter name="dither" optional="true">
              <shortdesc>If true, dither is used.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="changeMode">
          <shortdesc>Changes the mode of the document.</shortdesc>
          <parameters>
            <parameter name="destinationMode">
              <shortdesc>The mode to change to.</shortdesc>
              <datatype>
                <type href="#/ChangeMode">ChangeMode</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for changing the mode.</shortdesc>
              <datatype>
                <type href="#/DocumentConversionOptions">DocumentConversionOptions</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="crop">
          <shortdesc>Crops the document.</shortdesc>
          <parameters>
            <parameter name="bounds">
              <shortdesc>The area to crop.</shortdesc>
              <datatype>
                <type href="#/UnitRect">UnitRect</type>
              </datatype>
            </parameter>
            <parameter name="angle" optional="true">
              <shortdesc>The angle of cropping bounds.</shortdesc>
              <datatype>
                <type>number</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="width" optional="true">
              <shortdesc>The width of the resulting document.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="height" optional="true">
              <shortdesc>The height of the resulting document.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="exportDocument">
          <shortdesc>Exports the document.</shortdesc>
          <parameters>
            <parameter name="exportIn">
              <shortdesc>The file to export to.</shortdesc>
              <datatype>
                <type href="#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="exportAs" optional="true">
              <shortdesc>The type of export.</shortdesc>
              <datatype>
                <type href="#/ExportType">ExportType</type>
                <value>ExportType.ILLUSTRATORPATHS</value>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for the specified export type.</shortdesc>
              <datatype>
                <type href="#/ExportOptions">ExportOptions</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="flipCanvas">
          <shortdesc>Flips the canvas horizontally or vertically.</shortdesc>
          <parameters>
            <parameter name="direction">
              <shortdesc>The direction in which to flip the canvas.</shortdesc>
              <datatype>
                <type href="#/Direction">Direction</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="importAnnotations">
          <shortdesc>Imports annotations into the document.</shortdesc>
          <parameters>
            <parameter name="file">
              <shortdesc>The document to import annotations from.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="flatten">
          <shortdesc>Flattens all layers.</shortdesc>
        </method>
        <method name="mergeVisibleLayers">
          <shortdesc>Flattens all visible layers in the document.</shortdesc>
        </method>
        <method name="paste">
          <shortdesc>Pastes contents of the clipboard into the document.</shortdesc>
          <parameters>
            <parameter name="intoSelection" optional="true">
              <shortdesc>If true, contents are pasted into the current selection.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
        <method name="print">
          <shortdesc>Prints the document.</shortdesc>
          <parameters>
            <parameter name="sourceSpace" optional="true">
              <shortdesc>The color space for the source.</shortdesc>
              <datatype>
                <type href="#/SourceSpaceType">SourceSpaceType</type>
                <value>SourceSpaceType.DOCUMENT</value>
              </datatype>
            </parameter>
            <parameter name="printSpace" optional="true">
              <shortdesc>The color space for the printer. Can be "nothing" (meaning same as source); one of the working spaces or Lab color; or a string specifying a color space. Default: nothing.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="intent" optional="true">
              <shortdesc>The color conversion intent.</shortdesc>
              <datatype>
                <type href="#/Intent">Intent</type>
                <value>Intent.RELATIVECOLORIMETRIC</value>
              </datatype>
            </parameter>
            <parameter name="blackPointCompensation" optional="true">
              <shortdesc>If true, black point compensation is used.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="printOneCopy">
          <shortdesc>Print one copy of the document.</shortdesc>
        </method>
        <method name="revealAll">
          <shortdesc>Expands the document to show clipped sections.</shortdesc>
        </method>
        <method name="rasterizeAllLayers">
          <shortdesc>Rasterizes all layers.</shortdesc>
        </method>
        <method name="recordMeasurements">
          <shortdesc>Records the measurements of document.</shortdesc>
          <parameters>
            <parameter name="source" optional="true">
              <shortdesc>The source of the measurements to record.</shortdesc>
              <datatype>
                <type href="#/MeasurementSource">MeasurementSource</type>
              </datatype>
            </parameter>
            <parameter name="dataPoints" optional="true">
              <shortdesc>An array of identifiers of data points to record. Any data points not appropriate for the specified source are ignored.</shortdesc>
              <datatype>
                <type>string</type>
                <array />
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="rotateCanvas">
          <shortdesc>Rotates the canvas.</shortdesc>
          <parameters>
            <parameter name="angle">
              <shortdesc>The number of degrees to rotate. A positive angle rotates the canvas clockwise; a negative value rotates the canvas counter-clockwise.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="resizeCanvas">
          <shortdesc>Changes the size of the canvas.</shortdesc>
          <parameters>
            <parameter name="width" optional="true">
              <shortdesc>The desired width of the canvas.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="height" optional="true">
              <shortdesc>The desired height of the canvas.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The anchor point to resize around.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="resizeImage">
          <shortdesc>Changes the size of the image.</shortdesc>
          <parameters>
            <parameter name="width" optional="true">
              <shortdesc>The desired width of the image.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="height" optional="true">
              <shortdesc>The desired height of the image.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="resolution" optional="true">
              <shortdesc>The resolution (in pixels per inch)</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="resampleMethod" optional="true">
              <shortdesc>The downsample method.</shortdesc>
              <datatype>
                <type href="#/ResampleMethod">ResampleMethod</type>
                <value>ResampleMethod.BICUBIC</value>
              </datatype>
            </parameter>
            <parameter name="amount" optional="true">
              <shortdesc>Amount of noise value when using preserve details (range: 0 - 100)</shortdesc>
              <datatype>
                <type>int</type>
                <min>0</min>
                <max>100</max>
                <value>0</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="splitChannels">
          <shortdesc>Splits the channels of the document.</shortdesc>
          <datatype>
            <type href="#/Document">Document</type>
            <array />
          </datatype>
        </method>
        <method name="save">
          <shortdesc>Saves the document.</shortdesc>
        </method>
        <method name="saveAs">
          <shortdesc>Saves the document with the specified save options.</shortdesc>
          <parameters>
            <parameter name="saveIn">
              <shortdesc>The file to save to, specified as a string containing the full file path or an alias. If not specified, the document is saved to its existing file.</shortdesc>
              <datatype>
                <type href="#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="options" optional="true">
              <shortdesc>Options for the specified file type.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
            <parameter name="asCopy" optional="true">
              <shortdesc>Saves the document as a copy, leaving the original open.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
            <parameter name="extensionType" optional="true">
              <shortdesc>Appends the specified extension to the file name.</shortdesc>
              <datatype>
                <type href="#/MacExtensionType">MacExtensionType</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="suspendHistory">
          <shortdesc>Provides a single history state for the entire script. Allows a single undo for all actions taken in the script.</shortdesc>
          <parameters>
            <parameter name="historyString">
              <shortdesc>The string to use for the history state.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="javaScriptString">
              <shortdesc>A string of JavaScript code to execute during the suspension of history.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="trap">
          <shortdesc>Applies trapping to a CMYK document. Valid only when 'mode' = CMYK.</shortdesc>
          <parameters>
            <parameter name="width">
              <shortdesc>The trap width in pixels.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="trim">
          <shortdesc>Trims the transparent area around the image on the specified sides of the canvas.</shortdesc>
          <parameters>
            <parameter name="type" optional="true">
              <shortdesc>The color or type of pixels to base the trim on.</shortdesc>
              <datatype>
                <type href="#/TrimType">TrimType</type>
                <value>TrimType.TOPLEFT</value>
              </datatype>
            </parameter>
            <parameter name="top" optional="true">
              <shortdesc>If true, trims away the top of the document.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
            <parameter name="left" optional="true">
              <shortdesc>If true, trims away the left of the document.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
            <parameter name="bottom" optional="true">
              <shortdesc>If true, trims away the bottom of the document.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
            <parameter name="right" optional="true">
              <shortdesc>If true, trims away the right of the document.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="duplicate">
          <shortdesc>Creates a duplicate of the document object.</shortdesc>
          <parameters>
            <parameter name="name" optional="true">
              <shortdesc>The name of the new document.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="mergeLayersOnly" optional="true">
              <shortdesc>If ture, duplicates merged layers only.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Document">Document</type>
          </datatype>
        </method>
        <method name="autoCount">
          <shortdesc>Counts the objects in the document.</shortdesc>
          <parameters>
            <parameter name="channel">
              <shortdesc>The channel to use for counting.</shortdesc>
              <datatype>
                <type href="#/Channel">Channel</type>
              </datatype>
            </parameter>
            <parameter name="threshold">
              <shortdesc>Threshold to use for counting. Range: 0 to 255.</shortdesc>
              <datatype>
                <type>int</type>
                <min>0</min>
                <max>255</max>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="DocumentInfo" dynamic="true">
      <shortdesc>Metadata about a document object. These values can be set by selecting File &gt; File Info in the Adobe Photoshop application.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="title">
          <shortdesc>The document title.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="author">
          <shortdesc>The author.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="authorPosition">
          <shortdesc>The author's position.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="caption">
          <shortdesc>The caption.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="captionWriter">
          <shortdesc>The caption author.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="jobName">
          <shortdesc>The job name.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="copyrighted">
          <shortdesc>The copyright status.</shortdesc>
          <datatype>
            <type href="#/CopyrightedType">CopyrightedType</type>
          </datatype>
        </property>
        <property name="copyrightNotice">
          <shortdesc>The copyright notice.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="ownerUrl">
          <shortdesc>The url of the copyright info.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="keywords">
          <shortdesc>A list of keywords.</shortdesc>
          <datatype>
            <type>string</type>
            <array />
          </datatype>
        </property>
        <property name="category">
          <shortdesc>The document category.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="supplementalCategories">
          <shortdesc>Other categories.</shortdesc>
          <datatype>
            <type>string</type>
            <array />
          </datatype>
        </property>
        <property name="creationDate">
          <shortdesc>The creation date.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="city">
          <shortdesc>The city.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="provinceState">
          <shortdesc>The state or province.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="country">
          <shortdesc>The country.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="credit">
          <shortdesc>The author credit.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="source">
          <shortdesc>The source.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="headline">
          <shortdesc>The headline.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="instructions">
          <shortdesc>Instructions for using or processing the image.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="transmissionReference">
          <shortdesc>The transmission reference.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="urgency">
          <shortdesc>The document urgency.</shortdesc>
          <datatype>
            <type href="#/Urgency">Urgency</type>
          </datatype>
        </property>
        <property name="exif" rwaccess="readonly">
          <shortdesc>For JPEG images, information stored with digital photographs including camera type, date and time of photo, and file size.</shortdesc>
          <datatype>
            <type>any</type>
            <array />
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Preferences" dynamic="true">
      <shortdesc>Options to define for the preferences property of the application object, basically equivalent to selecting Edit &gt; Preferences (Windows) or Photoshop &gt; Preferences in the Adobe Photoshop application.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="colorPicker">
          <shortdesc>The color picker to use.</shortdesc>
          <datatype>
            <type href="#/ColorPicker">ColorPicker</type>
          </datatype>
        </property>
        <property name="interpolation">
          <shortdesc>The method to use to assign color values to any new pixels created when an image is resampled or resized.</shortdesc>
          <datatype>
            <type href="#/ResampleMethod">ResampleMethod</type>
          </datatype>
        </property>
        <property name="exportClipboard">
          <shortdesc>If true, retains Adobe Photoshop contents on the clipboard after you exit the application.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="showToolTips">
          <shortdesc>If true, pop-up definitions are displayed on mouseover.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="keyboardZoomResizesWindows">
          <shortdesc>If true, automatically resizes the window when zooming in or out using keyboard shortcuts.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="autoUpdateOpenDocuments">
          <shortdesc>If true, automatically updates open documents.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="showAsianTextOptions">
          <shortdesc>If true, Asian text options are displayed in the Paragraph palette.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="beepWhenDone">
          <shortdesc>If true, alerts the user when a process finishes.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="dynamicColorSliders">
          <shortdesc>If true, dynamic color sliders appear in the Color palette.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="savePaletteLocations">
          <shortdesc>If true, makes new palette locations the default location.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="showEnglishFontNames">
          <shortdesc>If true, Asian font names are listed in English.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="useShiftKeyForToolSwitch">
          <shortdesc>If true, enables cycling through a set of hidden tools.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="textFontSize">
          <shortdesc>Size of the small font used in panels and dialogs.</shortdesc>
          <datatype>
            <type href="#/FontSize">FontSize</type>
          </datatype>
        </property>
        <property name="numberOfHistoryStates">
          <shortdesc>The number of history states to preserve. Range: 1 to 100.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="createFirstSnapshot">
          <shortdesc>If true, automatically makes the first snapshot when a new document is created.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="nonLinearHistory">
          <shortdesc>If true, allows non-linear history.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="smartQuotes">
          <shortdesc>If true, curly quote marks are used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="imagePreviews">
          <shortdesc>The behavior mode to use when saving files.</shortdesc>
          <datatype>
            <type href="#/SaveBehavior">SaveBehavior</type>
          </datatype>
        </property>
        <property name="iconPreview">
          <shortdesc>If true, shows the image preview as a thumbnail.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="fullSizePreview">
          <shortdesc>If true, shows the image preview as a full size image.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="macOSThumbnail">
          <shortdesc>If true, creates a thumbnail when saving the image in Mac OS.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="windowsThumbnail">
          <shortdesc>If true, creates a thumbnail when saving the image in Windows. (Requires hardware support.)</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="appendExtension">
          <shortdesc>Save files with extensions on Windows.</shortdesc>
          <datatype>
            <type href="#/SaveBehavior">SaveBehavior</type>
          </datatype>
        </property>
        <property name="useLowerCaseExtension">
          <shortdesc>If true, the file extension is lowercase.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="askBeforeSavingLayeredTIFF">
          <shortdesc>If true, asks the user to verify layer preservation options when saving a file in TIFF format.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="maximizeCompatibility">
          <shortdesc>The behavior to use to check whether to maximize compatibility when opening Adobe Photoshop (PSD) files.</shortdesc>
          <datatype>
            <type href="#/QueryStateType">QueryStateType</type>
          </datatype>
        </property>
        <property name="recentFileListLength">
          <shortdesc>The number of items in the recent file list. Range: 0 to 30.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="colorChannelsInColor">
          <shortdesc>If true, displays component channels in the Channels palette in color.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="useDiffusionDither">
          <shortdesc>If true, uses diffusion dither.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="pixelDoubling">
          <shortdesc>If true, halves the resolution or (doubles the size of pixels) to make previews display more quickly.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="paintingCursors">
          <shortdesc>The type of pointer to use.</shortdesc>
          <datatype>
            <type href="#/PaintingCursors">PaintingCursors</type>
          </datatype>
        </property>
        <property name="otherCursors">
          <shortdesc>The type of pointer to use.</shortdesc>
          <datatype>
            <type href="#/OtherPaintingCursors">OtherPaintingCursors</type>
          </datatype>
        </property>
        <property name="gridSize">
          <shortdesc>The size of grid squares.</shortdesc>
          <datatype>
            <type href="#/GridSize">GridSize</type>
          </datatype>
        </property>
        <property name="useVideoAlpha">
          <shortdesc>If true, enables Adobe Photoshop to send transparency information to your computer’s video board. (Requires hardware support.)</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="gamutWarningOpacity">
          <shortdesc>The opacity (as a percentage) of the warning color for out-of-gamut colors. Range: 0 to 100.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="rulerUnits">
          <shortdesc>The unit that the scripting system uses when receiving and returning values.</shortdesc>
          <datatype>
            <type href="#/Units">Units</type>
          </datatype>
        </property>
        <property name="typeUnits">
          <shortdesc>The unit type-size that the numeric inputs are assumed to represent.</shortdesc>
          <datatype>
            <type href="#/TypeUnits">TypeUnits</type>
          </datatype>
        </property>
        <property name="columnWidth">
          <shortdesc>The width of columns (in points)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="columnGutter">
          <shortdesc>The gutter of columns (in points)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="pointSize">
          <shortdesc>The point/pica size.</shortdesc>
          <datatype>
            <type href="#/PointType">PointType</type>
          </datatype>
        </property>
        <property name="guideStyle">
          <shortdesc>The formatting style for non-printing guide lines.</shortdesc>
          <datatype>
            <type href="#/GuideLineStyle">GuideLineStyle</type>
          </datatype>
        </property>
        <property name="gridStyle">
          <shortdesc>The formatting style for non-printing grid lines.</shortdesc>
          <datatype>
            <type href="#/GridLineStyle">GridLineStyle</type>
          </datatype>
        </property>
        <property name="gridSubDivisions">
          <shortdesc>The value by which to subdivide the grid.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="showSliceNumber">
          <shortdesc>If true, displays slice numbers in the document window when using the Slice tool.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="useAdditionalPluginFolder">
          <shortdesc>If true, uses an additional folder for compatible plug-ins stored with a different application.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="additionalPluginFolder">
          <shortdesc>The path to the additional plug-in folder. Valid only when 'use additional plugin folder' = true.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="imageCacheLevels">
          <shortdesc>The number of images to hold in the cache. Range: 1 to 8.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="imageCacheForHistograms">
          <shortdesc>If true, shows the current image cache used to create the histogram.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="maxRAMuse">
          <shortdesc>Maximum percentage of available RAM used by Photoshop.</shortdesc>
          <datatype>
            <type>int</type>
            <min>5</min>
            <max>100</max>
          </datatype>
        </property>
        <property name="useHistoryLog">
          <shortdesc>Turn on and off the history logging.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="saveLogItems">
          <shortdesc>Options for saving the history items.</shortdesc>
          <datatype>
            <type href="#/SaveLogItemsType">SaveLogItemsType</type>
          </datatype>
        </property>
        <property name="editLogItems">
          <shortdesc>Options for edit log items.</shortdesc>
          <datatype>
            <type href="#/EditLogItemsType">EditLogItemsType</type>
          </datatype>
        </property>
        <property name="saveLogItemsFile">
          <shortdesc>File to save the history log.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="fontPreviewSize">
          <shortdesc>Show font previews in the type tool font menus.</shortdesc>
          <datatype>
            <type href="#/FontPreviewType">FontPreviewType</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="DocumentPrintSettings" dynamic="true">
      <shortdesc>Print settings for a document.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="caption">
          <shortdesc>Description field from File Info.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="labels">
          <shortdesc>Prints the document title.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="cornerCropMarks">
          <shortdesc>Print corner crop marks.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="centerCropMarks">
          <shortdesc>Print center crop marks.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="colorBars">
          <shortdesc>Print color calibration bars.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="registrationMarks">
          <shortdesc>Print registration marks.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="negative">
          <shortdesc>Invert the image colors.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="flip">
          <shortdesc>Flip the image horizontally.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="interpolate">
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="vectorData">
          <shortdesc>Include vector data.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="backgroundColor">
          <shortdesc>Background color of page.</shortdesc>
          <datatype>
            <type href="#/SolidColor">SolidColor</type>
          </datatype>
        </property>
        <property name="renderIntent">
          <shortdesc>Color conversion intent when print space is different from the source space.</shortdesc>
          <datatype>
            <type href="#/Intent">Intent</type>
          </datatype>
        </property>
        <property name="hardProof">
          <shortdesc>Print a hard proof.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="printSpace">
          <shortdesc>Color space for printer. Can be nothing (meaning same as source) or a string specifying a specific color profile.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="mapBlack">
          <shortdesc>Map blacks.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="printBorder">
          <shortdesc>Width of the print border.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="bleedWidth">
          <shortdesc>Bleed width.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="colorHandling">
          <shortdesc>Color handling.</shortdesc>
          <datatype>
            <type href="#/PrintColorHandling">PrintColorHandling</type>
          </datatype>
        </property>
        <property name="copies">
          <shortdesc>Number of copies.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="docPosition" rwaccess="readonly">
          <shortdesc>Position of image when printing.</shortdesc>
          <datatype>
            <type href="#/DocPositionStyle">DocPositionStyle</type>
          </datatype>
        </property>
        <property name="posY" rwaccess="readonly">
          <shortdesc>Y position of image on page.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="posX" rwaccess="readonly">
          <shortdesc>X position of image on page.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="printerName">
          <shortdesc>Name of printer.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="scale" rwaccess="readonly">
          <shortdesc>Scale of image on page.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="activePrinter">
          <shortdesc>Currently selected printer.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="printers" rwaccess="readonly">
          <shortdesc>List of available printers.</shortdesc>
          <datatype>
            <type>string</type>
            <array />
          </datatype>
        </property>
        <method name="setPagePosition">
          <shortdesc>Set the position of the image on the page.</shortdesc>
          <parameters>
            <parameter name="docPosition">
              <shortdesc>Position of the image on page when printing. Can be centered, scale to fit, or user defined.</shortdesc>
              <datatype>
                <type href="#/DocPositionStyle">DocPositionStyle</type>
              </datatype>
            </parameter>
            <parameter name="posX" optional="true">
              <shortdesc>X position of image on page.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="posY" optional="true">
              <shortdesc>Y position of image on page.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="scale" optional="true">
              <shortdesc>Position of the image on page when printing. Can be centered, scale to fit, or user defined.</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="Selection" dynamic="true">
      <shortdesc>The selected area of the document or layer.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="bounds" rwaccess="readonly">
          <shortdesc>The bounding rectangle of the entire selection.</shortdesc>
          <datatype>
            <type href="#/UnitRect">UnitRect</type>
          </datatype>
        </property>
        <property name="solid" rwaccess="readonly">
          <shortdesc>If true, the bounding rectangle a solid rectangle.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <method name="clear">
          <shortdesc>Clears the selection and does not copy it to the clipboard.</shortdesc>
        </method>
        <method name="copy">
          <shortdesc>Copies the selection to the clipboard.</shortdesc>
          <parameters>
            <parameter name="merge" optional="true">
              <shortdesc>If true the copy includes all visible layers. If false, copies only from the current layer.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="cut">
          <shortdesc>Cuts the current selection to the clipboard.</shortdesc>
        </method>
        <method name="selectBorder">
          <shortdesc>Selects the selection border only (in the specified width); subsequent actions do not affect the selected area within the borders.</shortdesc>
          <parameters>
            <parameter name="width">
              <shortdesc>The width of the border selection.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="contract">
          <shortdesc>Contracts the selection.</shortdesc>
          <parameters>
            <parameter name="by">
              <shortdesc>The amount to contract the selection.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="fill">
          <shortdesc>Fills the selection.</shortdesc>
          <parameters>
            <parameter name="fillType">
              <shortdesc>The color or history state with which to fill the object.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
            <parameter name="mode" optional="true">
              <shortdesc>The color blend mode.</shortdesc>
              <datatype>
                <type href="#/ColorBlendMode">ColorBlendMode</type>
                <value>ColorBlendMode.NORMAL</value>
              </datatype>
            </parameter>
            <parameter name="opacity" optional="true">
              <shortdesc>The opacity as a percentage. Range: 1 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="preserveTransparency" optional="true">
              <shortdesc>If true, perserves transparencies.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="stroke">
          <shortdesc>Strokes the selection.</shortdesc>
          <parameters>
            <parameter name="strokeColor">
              <shortdesc>The color to stroke the selection with.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
            <parameter name="width">
              <shortdesc>The stroke width.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="location" optional="true">
              <shortdesc>The stroke location.</shortdesc>
              <datatype>
                <type href="#/StrokeLocation">StrokeLocation</type>
                <value>StrokeLocation.CENTER</value>
              </datatype>
            </parameter>
            <parameter name="mode" optional="true">
              <shortdesc>The color blend mode.</shortdesc>
              <datatype>
                <type href="#/ColorBlendMode">ColorBlendMode</type>
                <value>ColorBlendMode.NORMAL</value>
              </datatype>
            </parameter>
            <parameter name="opacity" optional="true">
              <shortdesc>The opacity of the stroke color as a percentage. Range: 1 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="preserveTransparency" optional="true">
              <shortdesc>If true, preserves transparency.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="selectAll">
          <shortdesc>Selects the entire layer.</shortdesc>
        </method>
        <method name="deselect">
          <shortdesc>Deselects the current selection.</shortdesc>
        </method>
        <method name="select">
          <shortdesc>Selects the specified region.</shortdesc>
          <parameters>
            <parameter name="region">
              <shortdesc>Array of x and y coordinates that describe the corners of the selection, in the format [[x1, y1], [x2,y2],[x3, y3], [x4,y4]]</shortdesc>
              <datatype>
                <type>any</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="type" optional="true">
              <shortdesc>The method for combining the new selection with the existing selection.</shortdesc>
              <datatype>
                <type href="#/SelectionType">SelectionType</type>
                <value>SelectionType.REPLACE</value>
              </datatype>
            </parameter>
            <parameter name="feather" optional="true">
              <shortdesc>The feather amount.</shortdesc>
              <datatype>
                <type>number</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="antiAlias" optional="true">
              <shortdesc>If true, anti-aliasing is used.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="expand">
          <shortdesc>Expands the selection.</shortdesc>
          <parameters>
            <parameter name="by">
              <shortdesc>The amount to expand the selection.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="feather">
          <shortdesc>Feathers the edges of the selection.</shortdesc>
          <parameters>
            <parameter name="by">
              <shortdesc>The amount to feather the edge.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="grow">
          <shortdesc>Grows the selection to include all adjacent pixels falling within the specified tolerance range.</shortdesc>
          <parameters>
            <parameter name="tolerance">
              <shortdesc>The tolerance range. Range: 0 to 255.</shortdesc>
              <datatype>
                <type>int</type>
                <min>0</min>
                <max>255</max>
              </datatype>
            </parameter>
            <parameter name="antiAlias">
              <shortdesc>If true, anti-aliasing is used.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="invert">
          <shortdesc>Inverts the selection.</shortdesc>
        </method>
        <method name="similar">
          <shortdesc>Grows the selection to include pixels throughout the image falling within the tolerance range.</shortdesc>
          <parameters>
            <parameter name="tolerance">
              <shortdesc>The tolerance range. Range: 0 to 255.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="antiAlias">
              <shortdesc>If true, anti-aliasing is used.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="smooth">
          <shortdesc>Cleans up stray pixels left inside or outside a color-based selection (within the radius specified in pixels).</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The sample radius in pixels. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <min>0</min>
                <max>100</max>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="store">
          <shortdesc>Saves the selection as a channel.</shortdesc>
          <parameters>
            <parameter name="into">
              <shortdesc>The channel to save the selection to.</shortdesc>
              <datatype>
                <type href="#/Channel">Channel</type>
              </datatype>
            </parameter>
            <parameter name="combination" optional="true">
              <shortdesc>How to add the selection to the existing contents of the channel.</shortdesc>
              <datatype>
                <type href="#/SelectionType">SelectionType</type>
                <value>SelectionType.REPLACE</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="load">
          <shortdesc>Loads the selection from the specified channel.</shortdesc>
          <parameters>
            <parameter name="from">
              <shortdesc>The channel to load the selection from.</shortdesc>
              <datatype>
                <type href="#/Channel">Channel</type>
              </datatype>
            </parameter>
            <parameter name="combination" optional="true">
              <shortdesc>How to combine the channel contents with the existing selection.</shortdesc>
              <datatype>
                <type href="#/SelectionType">SelectionType</type>
                <value>SelectionType.REPLACE</value>
              </datatype>
            </parameter>
            <parameter name="inverting" optional="true">
              <shortdesc>If true, selects the inverse of the channel contents.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="translate">
          <shortdesc>Moves the object relative to its current position.</shortdesc>
          <parameters>
            <parameter name="deltaX" optional="true">
              <shortdesc>The amount to move the object horizontally.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="deltaY" optional="true">
              <shortdesc>The amount to move the object vertically.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="translateBoundary">
          <shortdesc>Moves the boundary of selection relative to its current position.</shortdesc>
          <parameters>
            <parameter name="deltaX" optional="true">
              <shortdesc>The amount to move the object horizontally.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="deltaY" optional="true">
              <shortdesc>The amount to move the object vertically.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="rotate">
          <shortdesc>Rotates the object.</shortdesc>
          <parameters>
            <parameter name="angle">
              <shortdesc>The number of degrees to rotate the object.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The point to rotate about.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="rotateBoundary">
          <shortdesc>Rotates the boundary of the selection.</shortdesc>
          <parameters>
            <parameter name="angle">
              <shortdesc>The rotation angle (in degrees)</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The point to rotate about.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="resize">
          <shortdesc>Resizes the selected area to the specified dimensions and anchor position.</shortdesc>
          <parameters>
            <parameter name="horizontal" optional="true">
              <shortdesc>The amount to scale the selection horizontally (as a percentage).</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="vertical" optional="true">
              <shortdesc>The amount to scale the selection vertically (as a percentage).</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The point to scale around.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="resizeBoundary">
          <shortdesc>Scales the boundary of the selection.</shortdesc>
          <parameters>
            <parameter name="horizontal" optional="true">
              <shortdesc>The amount to scale the object horizontally (as a percentage).</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="vertical" optional="true">
              <shortdesc>The amount to scale the object vertically (as a percentage).</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The point to scale around.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="makeWorkPath">
          <shortdesc>Makes this selection item the workpath for this document.</shortdesc>
          <parameters>
            <parameter name="tolerance" optional="true">
              <shortdesc>The tolerance in pixels.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="LayerSet" dynamic="true">
      <superclass>Layer</superclass>
      <shortdesc>A group of layer objects, which can include art layer objects and other (nested) layer set objects. A single command or set of commands manipulates all layers in a layer set object.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="enabledChannels">
          <shortdesc>The channels that are enabled for the layer set. Must be a list of component channels.</shortdesc>
          <datatype>
            <type href="#/Channel">Channel</type>
            <array />
          </datatype>
        </property>
        <property name="layers" rwaccess="readonly">
          <shortdesc>The layers in this layer set.</shortdesc>
          <datatype>
            <type href="#/Layers">Layers</type>
          </datatype>
        </property>
        <property name="layerSets" rwaccess="readonly">
          <shortdesc>The layer sets contained within the layer set.</shortdesc>
          <datatype>
            <type href="#/LayerSets">LayerSets</type>
          </datatype>
        </property>
        <property name="artLayers" rwaccess="readonly">
          <shortdesc>The art layers contained in this layer set.</shortdesc>
          <datatype>
            <type href="#/ArtLayers">ArtLayers</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/LayerSet">LayerSet</type>
          </datatype>
        </method>
        <method name="merge">
          <shortdesc>Merges the layer set.</shortdesc>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="ArtLayer" dynamic="true">
      <superclass>Layer</superclass>
      <shortdesc>An object within a document that contains the visual elements of the image (equivalent to a layer in the Adobe Photoshop application).</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="fillOpacity">
          <shortdesc>The interior opacity of the layer. Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="layerMaskDensity">
          <shortdesc>The density of the layer mask (between 0.0 and 100.0)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="layerMaskFeather">
          <shortdesc>The feather of the layer mask (between 0.0 and 250.0)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="vectorMaskDensity">
          <shortdesc>The density of the vector mask (between 0.0 and 100.0)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="vectorMaskFeather">
          <shortdesc>The feather of the vector mask (between 0.0 and 250.0)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="filterMaskDensity">
          <shortdesc>The density of the filter mask (between 0.0 and 100.0)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="filterMaskFeather">
          <shortdesc>The feather of the filter mask (between 0.0 and 250.0)</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="grouped">
          <shortdesc>If true, the layer is grouped with the layer below.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="isBackgroundLayer">
          <shortdesc>If true, the layer is a background layer.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="pixelsLocked">
          <shortdesc>If true, the pixels in the layer's image cannot be edited.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="positionLocked">
          <shortdesc>If true, the pixels in the layer's image cannot be moved within the layer.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="transparentPixelsLocked">
          <shortdesc>If true, editing is confined to the opaque portions of the layer.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="kind">
          <shortdesc>Sets the layer kind (such as 'text layer') for an empty layer. Valid only when the layer is empty and when 'is background layer ' is false. You can use the 'kind ' property to make a background layer a normal layer; however, to make a layer a background layer, you must set 'is background layer' to true.</shortdesc>
          <datatype>
            <type href="#/LayerKind">LayerKind</type>
          </datatype>
        </property>
        <property name="textItem" rwaccess="readonly">
          <shortdesc>The text that is associated with the layer. Valid only when 'kind' is text layer.</shortdesc>
          <datatype>
            <type href="#/TextItem">TextItem</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
        <method name="applyStyle">
          <shortdesc>Applies the specified style to the layer.</shortdesc>
          <parameters>
            <parameter name="styleName">
              <shortdesc>The layer style to apply.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyStyleFile">
          <parameters>
            <parameter name="file">
              <shortdesc>Style file to apply.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="saveStyleFile">
          <parameters>
            <parameter name="file">
              <shortdesc>File to save the style to.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="thumbnail" optional="true">
              <shortdesc>File to save the style thumbnail to.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="thumbnailSize" optional="true">
              <shortdesc>Size of thumbnail to save.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="backgroundValue" optional="true">
              <shortdesc>Background grayvalue.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="clear">
          <shortdesc>Cuts the layer without moving it to the clipboard.</shortdesc>
        </method>
        <method name="copy">
          <shortdesc>Copies the layer to the clipboard.</shortdesc>
          <parameters>
            <parameter name="merge" optional="true">
              <shortdesc>If true, the copy includes all visible layers. If false, the copy only copies from the current layer.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="cut">
          <shortdesc>Cuts the layer to the clipboard.</shortdesc>
        </method>
        <method name="merge">
          <shortdesc>Merges the layer down, removing the layer from the document. Returns a reference to the art layer that this layer is merged into.</shortdesc>
          <datatype>
            <type href="#/ArtLayer">ArtLayer</type>
          </datatype>
        </method>
        <method name="rasterize">
          <shortdesc>Converts the targeted content in the layer into a flat, raster image.</shortdesc>
          <parameters>
            <parameter name="target">
              <shortdesc>What to rasterize.</shortdesc>
              <datatype>
                <type href="#/RasterizeType">RasterizeType</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyAverage">
          <shortdesc>Applies the average filter.</shortdesc>
        </method>
        <method name="applyGaussianBlur">
          <shortdesc>Applies the gaussian blur filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The blur width in pixels. Range: 1.0 to 250.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyLensBlur">
          <shortdesc>Apply the lens blur filter.</shortdesc>
          <parameters>
            <parameter name="source" optional="true">
              <shortdesc>The source for the depth map.</shortdesc>
              <datatype>
                <type href="#/DepthMapSource">DepthMapSource</type>
                <value>DepthMapSource.NONE</value>
              </datatype>
            </parameter>
            <parameter name="focalDistance" optional="true">
              <shortdesc>The blur focal distance (in pixels) for the depth map. RangeL 0 to 255. Valid only when 'source' is transparency or layer mask.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="invertDepthMap" optional="true">
              <shortdesc>If true, inverts the depth map.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
            <parameter name="shape" optional="true">
              <shortdesc>The shape of the iris.</shortdesc>
              <datatype>
                <type href="#/Geometry">Geometry</type>
                <value>Geometry.HEXAGON</value>
              </datatype>
            </parameter>
            <parameter name="radius" optional="true">
              <shortdesc>The radius of the iris. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>15</value>
              </datatype>
            </parameter>
            <parameter name="bladeCurvature" optional="true">
              <shortdesc>The blade curvature of the iris. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="rotation" optional="true">
              <shortdesc>The rotation of the iris (in degrees). Range: 0 to 360.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="brightness" optional="true">
              <shortdesc>The brightness for the specular highlights. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="threshold" optional="true">
              <shortdesc>The threshold for the specular highlights. Range: 0 to 255.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="amount" optional="true">
              <shortdesc>The amount of noise. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="distribution" optional="true">
              <shortdesc>The distribution value for the noise.</shortdesc>
              <datatype>
                <type href="#/NoiseDistribution">NoiseDistribution</type>
                <value>NoiseDistribution.UNIFORM</value>
              </datatype>
            </parameter>
            <parameter name="monochromatic" optional="true">
              <shortdesc>If true, the noise is monochromatic.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyBlur">
          <shortdesc>Applies the blur filter.</shortdesc>
        </method>
        <method name="applyBlurMore">
          <shortdesc>Applies the blur more filter.</shortdesc>
        </method>
        <method name="applyMotionBlur">
          <shortdesc>Applies the motion blur filter.</shortdesc>
          <parameters>
            <parameter name="angle">
              <shortdesc>The angle (in degrees). Range: -360 to 360.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="radius">
              <shortdesc>The radius (in pixels). Range: 1 to 999.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyRadialBlur">
          <shortdesc>Applies the radial blur filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The amount of blur. Range: 1 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="blurMethod">
              <shortdesc>The blur method to use.</shortdesc>
              <datatype>
                <type href="#/RadialBlurMethod">RadialBlurMethod</type>
              </datatype>
            </parameter>
            <parameter name="blurQuality">
              <shortdesc>The smoothness or graininess of the blurred image.</shortdesc>
              <datatype>
                <type href="#/RadialBlurQuality">RadialBlurQuality</type>
              </datatype>
            </parameter>
            <parameter name="blurCenter" optional="true">
              <shortdesc>Position (unit value)</shortdesc>
              <datatype>
                <type href="#/UnitPoint">UnitPoint</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applySmartBlur">
          <shortdesc>Applies the smart blur filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The blur radius. Range: 0 - 1000.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="threshold">
              <shortdesc>The blur threshold. Range: 0 - 1000.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="blurQuality">
              <shortdesc>The smoothness or graininess of the blurred image.</shortdesc>
              <datatype>
                <type href="#/SmartBlurQuality">SmartBlurQuality</type>
              </datatype>
            </parameter>
            <parameter name="mode">
              <shortdesc>The smart blur mode.</shortdesc>
              <datatype>
                <type href="#/SmartBlurMode">SmartBlurMode</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyDiffuseGlow">
          <shortdesc>Applies the diffuse glow filter.</shortdesc>
          <parameters>
            <parameter name="graininess">
              <shortdesc>The amount of graininess. Range: 0 to 10.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="glowAmount">
              <shortdesc>The glow amount. Range: 0 to 20.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="clearAmount">
              <shortdesc>The clear amount. Range: 0 to 20.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyDisplace">
          <shortdesc>Applies the displace filter.</shortdesc>
          <parameters>
            <parameter name="horizontalScale">
              <shortdesc>The amount of horizontal distortion. Range: -999 to 999.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="verticalScale">
              <shortdesc>The amount of vertical distortion. Range: -999 to 999.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="displacementType">
              <shortdesc>The displacement type.</shortdesc>
              <datatype>
                <type href="#/DisplacementMapType">DisplacementMapType</type>
              </datatype>
            </parameter>
            <parameter name="undefinedAreas">
              <shortdesc>The treatment of undistorted areas.</shortdesc>
              <datatype>
                <type href="#/UndefinedAreas">UndefinedAreas</type>
              </datatype>
            </parameter>
            <parameter name="displacementMapFile">
              <shortdesc>The distortion image map.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyGlassEffect">
          <shortdesc>Applies the glass filter.</shortdesc>
          <parameters>
            <parameter name="distortion">
              <shortdesc>The amount of distortion. Range: 0 to 20.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="smoothness">
              <shortdesc>The smoothness. Range: 1 to 15.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="scaling">
              <shortdesc>The amount of scaling. Range: 50 to 200.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="invert" optional="true">
              <shortdesc>If true, the texture is inverted.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
            <parameter name="texture" optional="true">
              <shortdesc>The type of texture.</shortdesc>
              <datatype>
                <type href="#/TextureType">TextureType</type>
              </datatype>
            </parameter>
            <parameter name="textureFile" optional="true">
              <shortdesc>The file from which to load the texture type.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyOceanRipple">
          <shortdesc>Applies the ocean ripple filter.</shortdesc>
          <parameters>
            <parameter name="size">
              <shortdesc>The ripple size. Range: 1 to 15.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="magnitude">
              <shortdesc>The ripple magnitude. Range: 0 to 20.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyPinch">
          <shortdesc>Applies the pinch filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The pinch amount. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyPolarCoordinates">
          <shortdesc>Applies the polar coordinates filter.</shortdesc>
          <parameters>
            <parameter name="conversion">
              <shortdesc>The conversion type.</shortdesc>
              <datatype>
                <type href="#/PolarConversionType">PolarConversionType</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyRipple">
          <shortdesc>Applies the ripple filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The ripple amount. Range: -999 to 999.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="size">
              <shortdesc>The ripple size.</shortdesc>
              <datatype>
                <type href="#/RippleSize">RippleSize</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyShear">
          <shortdesc>Applies the shear filter.</shortdesc>
          <parameters>
            <parameter name="curve">
              <shortdesc>Specification of the shear curve in points as x,y coordinate pairs in the format [[x1, y1],[x2, y2]]. Any number of coordinate pairs can be specified.</shortdesc>
              <datatype>
                <type>any</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="undefinedAreas">
              <shortdesc>The treatment of areas left blank by the distortion.</shortdesc>
              <datatype>
                <type href="#/UndefinedAreas">UndefinedAreas</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applySpherize">
          <shortdesc>Applies the spherize filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The amount of distortion. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="mode">
              <shortdesc>The distortion mode.</shortdesc>
              <datatype>
                <type href="#/SpherizeMode">SpherizeMode</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyTwirl">
          <shortdesc>Applies the twirl filter.</shortdesc>
          <parameters>
            <parameter name="angle">
              <shortdesc>The twirl angle. Range: -999 to 999.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyWave">
          <shortdesc>Applies the wave filter.</shortdesc>
          <parameters>
            <parameter name="generatorNumber">
              <shortdesc>The number of generators. Range: 1 to 999.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="minimumWavelength">
              <shortdesc>The minimum wave length. Range: 1 to 998.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="maximumWavelength">
              <shortdesc>The maximum wave length. Range: 2 to (minimum wavelength + 1)</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="minimumAmplitude">
              <shortdesc>The minimum amplitude. Range: 1 to 998.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="maximumAmplitude">
              <shortdesc>The maximum amplitude. Range: 2 to (minimum amplitude + 1)</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="horizontalScale">
              <shortdesc>The amount of horizontal scale (as a percentage). Range: 1 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="verticalScale">
              <shortdesc>The amount of vertical scale (as a percentage). Range: 1 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="waveType">
              <shortdesc>The wave type.</shortdesc>
              <datatype>
                <type href="#/WaveType">WaveType</type>
              </datatype>
            </parameter>
            <parameter name="undefinedAreas">
              <shortdesc>The treatment of areas left blank by the distortion.</shortdesc>
              <datatype>
                <type href="#/UndefinedAreas">UndefinedAreas</type>
              </datatype>
            </parameter>
            <parameter name="randomSeed">
              <shortdesc>The random seed.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyZigZag">
          <shortdesc>Applies the zigzag filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The amount of zigzag. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="ridges">
              <shortdesc>The ridge length.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="style">
              <shortdesc>The zigzag style.</shortdesc>
              <datatype>
                <type href="#/ZigZagType">ZigZagType</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyAddNoise">
          <shortdesc>Applies the add noise filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The amount of noise (as a percentage). Range: 0.1 to 400.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="distribution">
              <shortdesc>The noise distribution type.</shortdesc>
              <datatype>
                <type href="#/NoiseDistribution">NoiseDistribution</type>
              </datatype>
            </parameter>
            <parameter name="monochromatic">
              <shortdesc>If true, applies the filter only to the tonal elements in the image without changing the colors.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyDespeckle">
          <shortdesc>Applies the despeckle filter.</shortdesc>
        </method>
        <method name="applyDustAndScratches">
          <shortdesc>Applies the dust and scratches filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The size (in pixels) of the area searched for dissimilar pixels. Range: 1 to 16.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="threshold">
              <shortdesc>Determines how dissimilar the pixels should be before they are eliminated. Range: 0 to 255.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyMedianNoise">
          <shortdesc>Applies the median noise filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The size of the area searched for pixels of similar brightness. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyClouds">
          <shortdesc>Applies the clouds filter.</shortdesc>
        </method>
        <method name="applyDifferenceClouds">
          <shortdesc>Applies the difference clouds filter.</shortdesc>
        </method>
        <method name="applyLensFlare">
          <shortdesc>Applies the lens flare filter.</shortdesc>
          <parameters>
            <parameter name="brightness">
              <shortdesc>The flare brightness. Range: 10 to 300.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="flareCenter">
              <shortdesc>The position of the flare center.</shortdesc>
              <datatype>
                <type href="#/UnitPoint">UnitPoint</type>
              </datatype>
            </parameter>
            <parameter name="lensType">
              <shortdesc>The lens type.</shortdesc>
              <datatype>
                <type href="#/LensType">LensType</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyTextureFill">
          <shortdesc>Applies the texture fill filter.</shortdesc>
          <parameters>
            <parameter name="textureFile">
              <shortdesc>The texture file. Must be a grayscale Photoshop file.</shortdesc>
              <datatype>
                <type href="$COMMON/javascript.xml#/File">File</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applySharpen">
          <shortdesc>Applies the sharpen filter.</shortdesc>
        </method>
        <method name="applySharpenEdges">
          <shortdesc>Applies the sharpen edges filter.</shortdesc>
        </method>
        <method name="applySharpenMore">
          <shortdesc>Applies the sharpen more filter.</shortdesc>
        </method>
        <method name="applyUnSharpMask">
          <shortdesc>Applies the unsharp mask filter.</shortdesc>
          <parameters>
            <parameter name="amount">
              <shortdesc>The amount of sharpening (as a percentage). Range: 1 to 500.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="radius">
              <shortdesc>The radius in pixels. Range: 0.1 to 250.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="threshold">
              <shortdesc>The contrast threshold. Range: 0 to 255.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyDeInterlace">
          <shortdesc>Applies the de-interlace filter.</shortdesc>
          <parameters>
            <parameter name="eliminateFields">
              <shortdesc>The fields to eliminate.</shortdesc>
              <datatype>
                <type href="#/EliminateFields">EliminateFields</type>
              </datatype>
            </parameter>
            <parameter name="createFields">
              <shortdesc>The method to use to replace eliminated fields.</shortdesc>
              <datatype>
                <type href="#/CreateFields">CreateFields</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyNTSC">
          <shortdesc>Applies the NTSC colors filter.</shortdesc>
        </method>
        <method name="applyCustomFilter">
          <shortdesc>Applies the custom filter.</shortdesc>
          <parameters>
            <parameter name="characteristics">
              <shortdesc>The custom filter characteristics. This is an array of 25 values that corresponds to a left-to-right, top-to- bottom traversal of the array presented in the Custom dialog in the user interface (Filter &gt; Other &gt; Custom).</shortdesc>
              <datatype>
                <type>int</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="scale">
              <shortdesc>The value by which to divide the sum of the brightness values of the pixels included in the calculation.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="offset">
              <shortdesc>The value to be added to the result of the scale calculation.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyHighPass">
          <shortdesc>Applies the high pass filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The width (in pixels) of the radius where edge details are retained.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyMaximum">
          <shortdesc>Applies the maximum filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The choke area (in pixels). Range: 0 to 100.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyMinimum">
          <shortdesc>Applies the minimum filter.</shortdesc>
          <parameters>
            <parameter name="radius">
              <shortdesc>The spread area (in pixels). Range: 0 to 100.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="applyOffset">
          <shortdesc>Applies the offset filter.</shortdesc>
          <parameters>
            <parameter name="horizontal">
              <shortdesc>The amount (in pixels) to move the selection horizontally (to the right). Range: -6144 to 6144.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="vertical">
              <shortdesc>The amount (in pixels) to move the selection vertically (downward). Range: -6144 to 6144.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="undefinedAreas">
              <shortdesc>The method for filling areas left blank by the offset.</shortdesc>
              <datatype>
                <type href="#/OffsetUndefinedAreas">OffsetUndefinedAreas</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="adjustLevels">
          <shortdesc>Adjusts levels of the selected channels.</shortdesc>
          <parameters>
            <parameter name="inputRangeStart">
              <shortdesc>The input levels minimum. Range: 0 to 253.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="inputRangeEnd">
              <shortdesc>The input levels maximum. Range: (input range start + 2) to 253.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="inputRangeGamma">
              <shortdesc>The input levels gamma. Range: 0.10 to 9.99.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="outputRangeStart">
              <shortdesc>The output levels minimum. Range: 0 to 253.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="outputRangeEnd">
              <shortdesc>The output levels maximum. Range: (output range start + 2) to 253.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="autoLevels">
          <shortdesc>Adjust the levels of the selected channels using the auto levels option.</shortdesc>
        </method>
        <method name="autoContrast">
          <shortdesc>Adjusts the contrast of the selected channels automatically.</shortdesc>
        </method>
        <method name="adjustCurves">
          <shortdesc>Adjusts the tonal range of the selected channel using up to fourteen points.</shortdesc>
          <parameters>
            <parameter name="curveShape">
              <shortdesc>The curve points. The number of points must be between 2 and 14.</shortdesc>
              <datatype>
                <type href="#/Point">Point</type>
                <array />
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="adjustBrightnessContrast">
          <shortdesc>Adjusts the brightness and constrast.</shortdesc>
          <parameters>
            <parameter name="brightness">
              <shortdesc>The brightness amount. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
            <parameter name="contrast">
              <shortdesc>The contrast amount. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="adjustColorBalance">
          <shortdesc>Adjusts the color balance of the layer's component channels.</shortdesc>
          <parameters>
            <parameter name="shadows" optional="true">
              <shortdesc>The adjustments for the shadows. The array must include three values (in the range -100 to 100), which represent cyan or red, magenta or green, and yellow or blue, when the document mode is CMYK or RGB.</shortdesc>
              <datatype>
                <type>int</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="midtones" optional="true">
              <shortdesc>The adjustments for the midtones. The array must include three values (in the range -100 to 100), which represent cyan or red, magenta or green, and yellow or blue, when the document mode is CMYK or RGB.</shortdesc>
              <datatype>
                <type>int</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="highlights" optional="true">
              <shortdesc>The adjustments for the highlights. The array must include three values (in the range -100 to 100), which represent cyan or red, magenta or green, and yellow or blue, when the document mode is CMYK or RGB.</shortdesc>
              <datatype>
                <type>int</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="preserveLuminosity" optional="true">
              <shortdesc>If true, luminosity is preserved.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="desaturate">
          <shortdesc>Converts a color image to a grayscale image in the current color mode by assigning equal values of each component color to each pixel.</shortdesc>
        </method>
        <method name="selectiveColor">
          <parameters>
            <parameter name="selectionMethod">
              <shortdesc>Modifies the amount of a process color in a specified primary color without affecting the other primary colors.</shortdesc>
              <datatype>
                <type href="#/AdjustmentReference">AdjustmentReference</type>
              </datatype>
            </parameter>
            <parameter name="reds" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="yellows" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="greens" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="cyans" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="blues" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="magentas" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="whites" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="neutrals" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="blacks" optional="true">
              <shortdesc>Array of 4 values: cyan, magenta, yellow, black.</shortdesc>
              <datatype>
                <type>number</type>
                <array />
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="mixChannels">
          <shortdesc>Modifies a targeted (output) color channel using a mix of the existing color channels in the image. (output channels = An array of channel specifications. For each component channel, specify a list of adjustment values (-200 to 200) followed by a 'constant' value (-200 to 200).) When monochrome = true, the maximum number of channel value specifications is 1. Valid only when 'document mode' = RGB or CMYK. RGB arrays must include four doubles. CMYK arrays must include five doubles.</shortdesc>
          <parameters>
            <parameter name="outputChannels">
              <shortdesc>A list of channel specifications. For each component channel that the document has, you must specify a list of adjustment values followed by a 'constant' value.</shortdesc>
              <datatype>
                <type>any</type>
                <array />
              </datatype>
            </parameter>
            <parameter name="monochrome" optional="true">
              <shortdesc>If true, uses monochrome mixing. Note: If this is true, you can only specify one channel value.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="invert">
          <shortdesc>Inverts the colors in the layer by converting the brightness value of each pixel in the channels to the inverse value on the 256-step color-values scale.</shortdesc>
        </method>
        <method name="equalize">
          <shortdesc>Redistributes the brightness values of pixels in an image to more evenly represent the entire range of brightness levels within the image.</shortdesc>
        </method>
        <method name="threshold">
          <shortdesc>Converts grayscale or color images to high-contrast, B/W images by converting pixels lighter than the specified threshold to white and pixels darker than the threshold to black.</shortdesc>
          <parameters>
            <parameter name="level">
              <shortdesc>The threshold level.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="posterize">
          <shortdesc>Specifies the number of tonal levels for each channel and then maps pixels to the closest matching level.</shortdesc>
          <parameters>
            <parameter name="levels">
              <shortdesc>The tonal levels. Range: 2 to 255.</shortdesc>
              <datatype>
                <type>int</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="photoFilter">
          <shortdesc>Adjusts the layer's color balance and temperature as if a color filter had been applied.</shortdesc>
          <parameters>
            <parameter name="fillColor" optional="true">
              <shortdesc>The color to use for the fill.</shortdesc>
              <datatype>
                <type href="#/SolidColor">SolidColor</type>
              </datatype>
            </parameter>
            <parameter name="density" optional="true">
              <shortdesc>The density (as a percentage) of the filter effect. Range: 1 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>25</value>
              </datatype>
            </parameter>
            <parameter name="preserveLuminosity" optional="true">
              <shortdesc>If true, luminosity is preserved.</shortdesc>
              <datatype>
                <type>bool</type>
                <value>true</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="shadowHighlight">
          <shortdesc>Adjusts the range of tones in the shadows and highlights.</shortdesc>
          <parameters>
            <parameter name="shadowAmount" optional="true">
              <shortdesc>The shadow amount, as a percentage. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>50</value>
              </datatype>
            </parameter>
            <parameter name="shadowWidth" optional="true">
              <shortdesc>The shadow width, as a percentage. Range: 0 to 100 for tonal width (0 = narrow), (100 = broad).</shortdesc>
              <datatype>
                <type>int</type>
                <value>50</value>
              </datatype>
            </parameter>
            <parameter name="shadowRaduis" optional="true">
              <shortdesc>The shadow radius (in pixels). Range: 0 to 2500.</shortdesc>
              <datatype>
                <type>int</type>
                <value>30</value>
              </datatype>
            </parameter>
            <parameter name="highlightAmount" optional="true">
              <shortdesc>The highlight amount, as a percentage. Range: 0 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="highlightWidth" optional="true">
              <shortdesc>The highlight width. Range: 0 to 100 for tonal width (0 = narrow), (100 = broad).</shortdesc>
              <datatype>
                <type>int</type>
                <value>50</value>
              </datatype>
            </parameter>
            <parameter name="highlightRaduis" optional="true">
              <shortdesc>The highlight radius (in pixels). Range: 0 to 2500.</shortdesc>
              <datatype>
                <type>int</type>
                <value>30</value>
              </datatype>
            </parameter>
            <parameter name="colorCorrection" optional="true">
              <shortdesc>The amount to adjust the colors in the changed portion of the image. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>20</value>
              </datatype>
            </parameter>
            <parameter name="midtoneContrast" optional="true">
              <shortdesc>The amount of midtone contrast. Range: -100 to 100.</shortdesc>
              <datatype>
                <type>int</type>
                <value>0</value>
              </datatype>
            </parameter>
            <parameter name="blackClip" optional="true">
              <shortdesc>Fractions of whites to be clipped. Range: 0.000 to 50.000.</shortdesc>
              <datatype>
                <type>number</type>
                <value>0.01</value>
              </datatype>
            </parameter>
            <parameter name="whiteClip" optional="true">
              <shortdesc>Fractions of blacks to be clipped. Range: 0.000 to 50.000.</shortdesc>
              <datatype>
                <type>number</type>
                <value>0.01</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="Layer" dynamic="true">
      <shortdesc>A layer object.</shortdesc>
      <description>Layers may contain nested layers, which are called sublayers in the user interface. The layer object contains all of the page items in the specific layer as elements. Your script can access page items as elements of either the layer object or the document object.</description>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The name of the layer.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="allLocked">
          <shortdesc>If true, the layer's contents and settings are locked.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="blendMode">
          <shortdesc>The mode to use when compositing an object.</shortdesc>
          <datatype>
            <type href="#/BlendMode">BlendMode</type>
          </datatype>
        </property>
        <property name="linkedLayers" rwaccess="readonly">
          <shortdesc>The layers linked to this layer.</shortdesc>
          <datatype>
            <type href="#/Layer">Layer</type>
            <array />
          </datatype>
        </property>
        <property name="opacity">
          <shortdesc>The layer's master opacity (as a percentage). Range: 0.0 to 100.0.</shortdesc>
          <datatype>
            <type>number</type>
            <min>0</min>
            <max>100</max>
          </datatype>
        </property>
        <property name="visible">
          <shortdesc>If true, the layer is visible.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="id" rwaccess="readonly">
          <shortdesc>The unique ID of this layer.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="itemIndex" rwaccess="readonly">
          <shortdesc>The layer index sans layer groups, how Photoshop would index them.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="bounds" rwaccess="readonly">
          <shortdesc>If the Layer is a layer set, this property returns a reference to the corresponding layer set object.</shortdesc>
          <datatype>
            <type href="#/UnitRect">UnitRect</type>
          </datatype>
        </property>
        <property name="boundsNoEffects" rwaccess="readonly">
          <shortdesc>Bounding rectangle of the Layer not including effects.</shortdesc>
          <datatype>
            <type href="#/UnitRect">UnitRect</type>
          </datatype>
        </property>
        <property name="xmpMetadata" rwaccess="readonly">
          <shortdesc>XMP metadata associated with the Layer.</shortdesc>
          <datatype>
            <type href="#/XMPMetadata">XMPMetadata</type>
          </datatype>
        </property>
        <method name="move">
          <shortdesc>Move the object.</shortdesc>
          <parameters>
            <parameter name="relativeObject">
              <datatype>
                <type>Object</type>
              </datatype>
            </parameter>
            <parameter name="insertionLocation">
              <datatype>
                <type href="#/ElementPlacement">ElementPlacement</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Layer">Layer</type>
          </datatype>
        </method>
        <method name="duplicate">
          <shortdesc>Duplicate this object.</shortdesc>
          <parameters>
            <parameter name="relativeObject">
              <datatype>
                <type>Object</type>
              </datatype>
            </parameter>
            <parameter name="insertionLocation">
              <datatype>
                <type href="#/ElementPlacement">ElementPlacement</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Layer">Layer</type>
          </datatype>
        </method>
        <method name="moveToEnd">
          <shortdesc>...</shortdesc>
          <parameters>
            <parameter name="layerSet" optional="true">
              <datatype>
                <type href="#/LayerSet">LayerSet</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="unlink">
          <shortdesc>Unlinks the layer.</shortdesc>
        </method>
        <method name="link">
          <shortdesc>Links the layer with the specified layer.</shortdesc>
          <parameters>
            <parameter name="with">
              <shortdesc>The layer to link to.</shortdesc>
              <datatype>
                <type href="#/Layer">Layer</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="translate">
          <shortdesc>Moves the object relative to its current position.</shortdesc>
          <parameters>
            <parameter name="deltaX" optional="true">
              <shortdesc>The amount to move the object horizontally.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
            <parameter name="deltaY" optional="true">
              <shortdesc>The amount to move the object vertically.</shortdesc>
              <datatype>
                <type href="#/UnitValue">UnitValue</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="rotate">
          <shortdesc>Rotates the object.</shortdesc>
          <parameters>
            <parameter name="angle">
              <shortdesc>The number of degrees to rotate the object.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The point to rotate about.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="resize">
          <shortdesc>Scales the object.</shortdesc>
          <parameters>
            <parameter name="horizontal" optional="true">
              <shortdesc>The amount to scale the object horizontally (as a percentage).</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="vertical" optional="true">
              <shortdesc>The amount to scale the object vertically (as a percentage).</shortdesc>
              <datatype>
                <type>number</type>
                <value>100</value>
              </datatype>
            </parameter>
            <parameter name="anchor" optional="true">
              <shortdesc>The point to resize about.</shortdesc>
              <datatype>
                <type href="#/AnchorPosition">AnchorPosition</type>
                <value>AnchorPosition.MIDDLECENTER</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="Channel" dynamic="true">
      <shortdesc>Object that stores information about a color element in the image, analogous to a plate in the printing process that applies a single color. The document's color mode determines the number of default channels. For example, an RGB document has four default channels: A composite channel: RGB; and three component channels: red, green, and blue. A channel can also be an alpha channel, which stores selections as masks; or a spot channel, which stores spot colors.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="histogram" rwaccess="readonly">
          <shortdesc>A histogram of the color of the channel.</shortdesc>
          <datatype>
            <type>int</type>
            <array />
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The channel name.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="kind">
          <shortdesc>The type of channel.</shortdesc>
          <datatype>
            <type href="#/ChannelType">ChannelType</type>
          </datatype>
        </property>
        <property name="opacity">
          <shortdesc>The opacity of alpha channels (called solidity for spot channels). Range: 0 to 100. Valid only when 'type' = masked area or selected area.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="visible">
          <shortdesc>If true, the channel is visible.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="color">
          <shortdesc>The color of the channel. Not valid for component channels.</shortdesc>
          <datatype>
            <type href="#/SolidColor">SolidColor</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/Channel">Channel</type>
          </datatype>
        </method>
        <method name="duplicate">
          <shortdesc>Duplicate this object.</shortdesc>
          <parameters>
            <parameter name="relativeObject">
              <datatype>
                <type>Object</type>
              </datatype>
            </parameter>
            <parameter name="insertionLocation">
              <datatype>
                <type href="#/ElementPlacement">ElementPlacement</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Channel">Channel</type>
          </datatype>
        </method>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="merge">
          <shortdesc>Merges a spot channel into the component channels.</shortdesc>
        </method>
        <method name="duplicate">
          <shortdesc>Duplicates the channel.</shortdesc>
          <parameters>
            <parameter name="targetDocument" optional="true">
              <shortdesc>The document to duplicate the channel to.</shortdesc>
              <datatype>
                <type href="#/Document">Document</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/Channel">Channel</type>
          </datatype>
        </method>
      </elements>
    </classdef>
    <classdef name="Guide" dynamic="true">
      <shortdesc>A guide in the document.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="direction">
          <shortdesc>Indicates whether the guide is vertical or horizontal.</shortdesc>
          <datatype>
            <type href="#/Direction">Direction</type>
          </datatype>
        </property>
        <property name="coordinate">
          <shortdesc>Location of the guide from origin of image.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
      </elements>
    </classdef>
    <classdef name="HistoryState" dynamic="true">
      <shortdesc>A version of the document stored automatically (and added to the history states collection, which preserves the document state each time the document is changed).</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="name" rwaccess="readonly">
          <shortdesc>The history state name.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="snapshot" rwaccess="readonly">
          <shortdesc>If true, the history state is a snapshot.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TextFont" dynamic="true">
      <shortdesc>An installed font.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="name" rwaccess="readonly">
          <shortdesc>The font name.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="postScriptName" rwaccess="readonly">
          <shortdesc>The PostScript name of the font.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="family" rwaccess="readonly">
          <shortdesc>The font family.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="style" rwaccess="readonly">
          <shortdesc>The font style.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="TextItem" dynamic="true">
      <shortdesc>The text object contained in an art layer.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="antiAliasMethod">
          <shortdesc>The method of anti-aliasing to use.</shortdesc>
          <datatype>
            <type href="#/AntiAlias">AntiAlias</type>
          </datatype>
        </property>
        <property name="autoKerning">
          <shortdesc>Options for auto kerning.</shortdesc>
          <datatype>
            <type href="#/AutoKernType">AutoKernType</type>
          </datatype>
        </property>
        <property name="color">
          <shortdesc>The text color.</shortdesc>
          <datatype>
            <type href="#/SolidColor">SolidColor</type>
          </datatype>
        </property>
        <property name="useAutoLeading">
          <shortdesc>If true, uses the font's built-in leading information.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="tracking">
          <shortdesc>The amount of uniform spacing between multiple characters. Range: -1000 to 10000.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="verticalScale">
          <shortdesc>Character scaling (vertical) in proportion to horizontal scale. Range: 0 - 1000 as a percentage.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="horizontalScale">
          <shortdesc>Character scaling (horizontal) in proportion to horizontal scale. Range: 0 - 1000 as a percentage.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="baselineShift">
          <shortdesc>The amount of baseline offset of text.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="contents">
          <shortdesc>The actual text in the layer.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="font">
          <shortdesc>The text face of the character.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="leading">
          <shortdesc>The leading amount.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="ligatures">
          <shortdesc>If true, ligatures are used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="alternateLigatures">
          <shortdesc>If true, alternate ligatures are used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="oldStyle">
          <shortdesc>If true, old style is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="position">
          <shortdesc>The position of the origin for the text. The array must contain two values. Setting this property is basically equivalent to clicking the text tool at a point in the document to create the point of origin for text.</shortdesc>
          <datatype>
            <type href="#/UnitPoint">UnitPoint</type>
          </datatype>
        </property>
        <property name="direction">
          <shortdesc>The text orientation.</shortdesc>
          <datatype>
            <type href="#/Direction">Direction</type>
          </datatype>
        </property>
        <property name="size">
          <shortdesc>The font size in points.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="fauxBold">
          <shortdesc>If true, faux bold is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="fauxItalic">
          <shortdesc>If true, faux italic is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="capitalization">
          <shortdesc>The case of the text.</shortdesc>
          <datatype>
            <type href="#/Case">Case</type>
          </datatype>
        </property>
        <property name="strikeThru">
          <shortdesc>The strike through option to use.</shortdesc>
          <datatype>
            <type href="#/StrikeThruType">StrikeThruType</type>
          </datatype>
        </property>
        <property name="underline">
          <shortdesc>Options for underlining the text.</shortdesc>
          <datatype>
            <type href="#/UnderlineType">UnderlineType</type>
          </datatype>
        </property>
        <property name="language">
          <shortdesc>The language.</shortdesc>
          <datatype>
            <type href="#/Language">Language</type>
          </datatype>
        </property>
        <property name="noBreak">
          <shortdesc>If true, words are not allowed to break at the end of a line. When enacted on large amounts of consecutive characters, can prevent word wrap and thus may prevent some text from appearing on the screen.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="kind">
          <shortdesc>The type of text.</shortdesc>
          <datatype>
            <type href="#/TextType">TextType</type>
          </datatype>
        </property>
        <property name="justification">
          <shortdesc>The paragraph justification.</shortdesc>
          <datatype>
            <type href="#/Justification">Justification</type>
          </datatype>
        </property>
        <property name="leftIndent">
          <shortdesc>The amount to indent text from the left. Range: -1296 to 1296.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="firstLineIndent">
          <shortdesc>The amount to indent the first line of paragraphs. Range: -1296 to 1296.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="rightIndent">
          <shortdesc>The amount to indent text from the right. Range: -1296 to 1296.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="spaceBefore">
          <shortdesc>The amount of space before each paragraph. Range: -1296 to 1296.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="spaceAfter">
          <shortdesc>The amount of space after each paragraph. Range: -1296 to 1296.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="hangingPuntuation">
          <shortdesc>If true, uses Roman hanging punctuation.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="textComposer">
          <shortdesc>The text composing engine to use.</shortdesc>
          <datatype>
            <type href="#/TextComposer">TextComposer</type>
          </datatype>
        </property>
        <property name="hyphenation">
          <shortdesc>If true, hyphenation is used.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="minimumGlyphScaling">
          <shortdesc>The minimum amount (as a percentage) to scale the horizontal size of the text letters. Range: 50 - 200; at 100, the width of characters is not scaled. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="desiredGlyphScaling">
          <shortdesc>The desired amount (as a percentage) to scale the horizontal size of the text letters. Range: 50 - 200; at 100, the width of characters is not scaled. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="maximumGlyphScaling">
          <shortdesc>The maximum amount (as a percentage) to scale the horizontal size of the text letters. Range: 50 - 200; at 100, the width of characters is not scaled. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="minimumLetterScaling">
          <shortdesc>The minimum amount of space (as a percentage) between letters. Range: 100 to 500; at 0, no space is added between letters. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="desiredLetterScaling">
          <shortdesc>The amount of space (as a percentage) between letters. Range: 100 - 500; at 0, no space is added between letters. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="maximumLetterScaling">
          <shortdesc>The maximum amount (as a percentage) of space between letters. Range: 100 - 500; at 0, no space is added between letters. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="minimumWordScaling">
          <shortdesc>The minimum amount (as a percentage) of space between words. Range: 0 -1000; at 100, no additional space is added between words. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="desiredWordScaling">
          <shortdesc>The amount (as a percentage) of space between words. Range: 0 -1000; at 100, no additional space is added between words. Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="maximumWordScaling">
          <shortdesc>The maximum amount (as a percentage) of space between words (0 -1000; at 100, no additional space is added between words). Valid only for justified text.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="autoLeadingAmount">
          <shortdesc>The percentage to use for auto leading. Range: 0.01 to 5000.00.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="hyphenateWordsLongerThan">
          <shortdesc>The minimum number of letters a word must have in order for hyphenation in word wrap to be allowed. Range: 2 to 25.</shortdesc>
          <datatype>
            <type>int</type>
            <min>0</min>
          </datatype>
        </property>
        <property name="hyphenateAfterFirst">
          <shortdesc>The number of letters after which hyphenation in word wrap is allowed. Range: 1 to 15.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="hyphenateBeforeLast">
          <shortdesc>The number of letters before which hyphenation in word wrap is allowed. Range: 1 to 15.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="hyphenLimit">
          <shortdesc>The maximum number of consecutive lines that can end with a hyphenated word.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="hyphenationZone">
          <shortdesc>The distance at the end of a line that will cause a word to break in unjustified type. Range: 0 - 720 picas.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="hyphenateCapitalWords">
          <shortdesc>If true, capitalized words can be hyphenated.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="width">
          <shortdesc>The width of the bounding box for paragraph text.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="height">
          <shortdesc>The height of the bounding box for paragraph text.</shortdesc>
          <datatype>
            <type href="#/UnitValue">UnitValue</type>
          </datatype>
        </property>
        <property name="warpStyle">
          <shortdesc>The style of warp.</shortdesc>
          <datatype>
            <type href="#/WarpStyle">WarpStyle</type>
          </datatype>
        </property>
        <property name="warpDirection">
          <shortdesc>The warp direction.</shortdesc>
          <datatype>
            <type href="#/Direction">Direction</type>
          </datatype>
        </property>
        <property name="warpBend">
          <shortdesc>The warp bend percentage. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="warpHorizontalDistortion">
          <shortdesc>The warp horizontal distortion percentage. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="warpVerticalDistortion">
          <shortdesc>The warp vertical distortion percentage. Range: -100 to 100.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <method name="createPath">
          <shortdesc>Creates a clipping path from the outlines of the actual text items (such as letters or words).</shortdesc>
        </method>
        <method name="convertToShape">
          <shortdesc>Converts the text object and its containing layer to a fill layer with the text changed to a clipping path.</shortdesc>
        </method>
      </elements>
    </classdef>
    <classdef name="LayerComp" dynamic="true">
      <shortdesc>A snapshot of a state of the layers in a document (can be used to view different page layouts or compostions).</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The name of the layer comp.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="comment">
          <shortdesc>The description of the layer comp.</shortdesc>
          <datatype>
            <type>any</type>
          </datatype>
        </property>
        <property name="appearance">
          <shortdesc>If true, uses layer appearance (layer styles) settings.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="position">
          <shortdesc>If true, uses layer position.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="visibility">
          <shortdesc>If true, the layer comp is visible.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="selected" rwaccess="readonly">
          <shortdesc>If true, the layer comp is currently selected.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/LayerComp">LayerComp</type>
          </datatype>
        </method>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="apply">
          <shortdesc>Applies the layer comp to the document.</shortdesc>
        </method>
        <method name="recapture">
          <shortdesc>Recaptures the current layer state(s) for this layer comp.</shortdesc>
        </method>
        <method name="resetFromComp">
          <shortdesc>Resets the layer comp state to the document state.</shortdesc>
        </method>
      </elements>
    </classdef>
    <classdef name="PathItem" dynamic="true">
      <shortdesc>A path or drawing object, such as the outline of a shape or a straight or curved line, which contains sub paths that comprise its geometry.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The name of the path item.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="subPathItems" rwaccess="readonly">
          <shortdesc>The sub path objects for this path item.</shortdesc>
          <datatype>
            <type href="#/SubPathItems">SubPathItems</type>
          </datatype>
        </property>
        <property name="kind">
          <shortdesc>The type of path.</shortdesc>
          <datatype>
            <type href="#/PathKind">PathKind</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/PathItem">PathItem</type>
          </datatype>
        </method>
        <method name="duplicate">
          <shortdesc>Duplicate this object.</shortdesc>
          <parameters>
            <parameter name="relativeObject">
              <datatype>
                <type>Object</type>
              </datatype>
            </parameter>
            <parameter name="insertionLocation">
              <datatype>
                <type href="#/ElementPlacement">ElementPlacement</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/PathItem">PathItem</type>
          </datatype>
        </method>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="duplicate">
          <shortdesc>Duplicates this path item.</shortdesc>
          <parameters>
            <parameter name="name" optional="true">
              <shortdesc>The name for the new path.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type href="#/PathItem">PathItem</type>
          </datatype>
        </method>
        <method name="makeSelection">
          <shortdesc>Makes a selection object, whose border is the path, from this path item object.</shortdesc>
          <parameters>
            <parameter name="feather" optional="true">
              <shortdesc>The feather amount in pixels. Range: 0.0 to 250.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="antiAlias" optional="true">
              <shortdesc>If true, the selection uses anti-aliasing.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
            <parameter name="operation" optional="true">
              <shortdesc>The selection behavior relative to the existing selection (when a selection already exists).</shortdesc>
              <datatype>
                <type href="#/SelectionType">SelectionType</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="fillPath">
          <shortdesc>Fills the area enclosed by the path.</shortdesc>
          <parameters>
            <parameter name="fillColor" optional="true">
              <shortdesc>The color of the fill for this path.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
            <parameter name="mode" optional="true">
              <shortdesc>The blending mode of the fill for this path.</shortdesc>
              <datatype>
                <type href="#/ColorBlendMode">ColorBlendMode</type>
              </datatype>
            </parameter>
            <parameter name="opacity" optional="true">
              <shortdesc>The opacity of the fill for this path (as a percentage). Range: 0.0 to 100.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="preserveTransparency" optional="true">
              <shortdesc>If true, transparency is preserved.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
            <parameter name="feather" optional="true">
              <shortdesc>The feather amount in pixels. Range: 0.0 to 250.0.</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
            <parameter name="antiAlias" optional="true">
              <shortdesc>If true, uses anti-aliasing for the selection.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
            <parameter name="wholePath" optional="true">
              <shortdesc>If true, uses all subpaths when doing the fill.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="strokePath">
          <shortdesc>Strokes the path.</shortdesc>
          <parameters>
            <parameter name="tool" optional="true">
              <shortdesc>The tool to use when stroking the path.</shortdesc>
              <datatype>
                <type href="#/ToolType">ToolType</type>
              </datatype>
            </parameter>
            <parameter name="simulatePressure" optional="true">
              <shortdesc>If true, simulates the pressure when using the tool.</shortdesc>
              <datatype>
                <type>bool</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="makeClippingPath">
          <shortdesc>Makes this path item the clipping path for this document.</shortdesc>
          <parameters>
            <parameter name="flatness" optional="true">
              <shortdesc>Flatness in device pixels; tells the PostScript printer how to approximate curves. Range: 0.2 to 100).</shortdesc>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="select">
          <shortdesc>Makes this path item the active or selected path item.</shortdesc>
        </method>
        <method name="deselect">
          <shortdesc>Unselects the selection, no path items are selected.</shortdesc>
        </method>
      </elements>
    </classdef>
    <classdef name="SubPathItem" dynamic="true">
      <shortdesc>Information about a path. You do not use the sub path item object to create a path. Rather, you create path segments using the sub path info object. Use the sub path item object to retrieve information about a path. All properties are read-only.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="closed" rwaccess="readonly">
          <shortdesc>If true, the path is closed.</shortdesc>
          <datatype>
            <type>bool</type>
          </datatype>
        </property>
        <property name="operation" rwaccess="readonly">
          <shortdesc>The sub path operation on other sub paths.</shortdesc>
          <datatype>
            <type href="#/ShapeOperation">ShapeOperation</type>
          </datatype>
        </property>
        <property name="pathPoints" rwaccess="readonly">
          <shortdesc>The path points collection in the sub path.</shortdesc>
          <datatype>
            <type href="#/PathPoints">PathPoints</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="PathPoint" dynamic="true">
      <shortdesc>Information about an array of path point info objects. You do not use the path point object to create points that make up a path. Rather, you use the path point object to retrieve information about the points that describe path segments. To create path points, use the path point info object.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="anchor" rwaccess="readonly">
          <shortdesc>The position (coordinates) of the anchor point.</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
          </datatype>
        </property>
        <property name="leftDirection" rwaccess="readonly">
          <shortdesc>The location of the left direction point (the "in" position).</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
          </datatype>
        </property>
        <property name="rightDirection" rwaccess="readonly">
          <shortdesc>The location of the right direction point (the "out" position).</shortdesc>
          <datatype>
            <type href="#/Point">Point</type>
          </datatype>
        </property>
        <property name="kind" rwaccess="readonly">
          <shortdesc>The type of point.</shortdesc>
          <datatype>
            <type href="#/PointKind">PointKind</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="MeasurementLog" dynamic="true">
      <shortdesc>The log of measurements taken.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <method name="exportMeasurements">
          <shortdesc>Exports the specified measurements.</shortdesc>
          <parameters>
            <parameter name="file" optional="true">
              <shortdesc>The file to export to. If not specified, a 'file save' dialog is displayed.</shortdesc>
              <datatype>
                <type href="#/File">File</type>
              </datatype>
            </parameter>
            <parameter name="range" optional="true">
              <shortdesc>The measurements to export. Default: selected.</shortdesc>
              <datatype>
                <type href="#/MeasurementRange">MeasurementRange</type>
              </datatype>
            </parameter>
            <parameter name="dataPoints" optional="true">
              <shortdesc>An array of identifiers of data points to export. The order of the data points is respected in the exported file. Defaults to data points visible in Measurement Log palette.</shortdesc>
              <datatype>
                <type>string</type>
                <array />
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="deleteMeasurements">
          <shortdesc>Deletes the specified measurements.</shortdesc>
          <parameters>
            <parameter name="range" optional="true">
              <shortdesc>The measurements to delete. Default: selected.</shortdesc>
              <datatype>
                <type href="#/MeasurementRange">MeasurementRange</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="MeasurementScale" dynamic="true">
      <shortdesc>The measurement scale for the document.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="name">
          <shortdesc>The name of the scale.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="pixelLength">
          <shortdesc>The length (in pixels) to which this scale equates.</shortdesc>
          <datatype>
            <type>int</type>
          </datatype>
        </property>
        <property name="logicalLength">
          <shortdesc>The logical length this scale equates to.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="logicalUnits">
          <shortdesc>The logical units for this scale.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Notifier" dynamic="true">
      <shortdesc>An event-handler object that tells the script to execute specified code when a specified event occurs. For notifiers to work, they must be enabled. See the 'notifiers enabled' property of the Application object. Events that occur within scripts do not generally trigger notifiers, because they occur inside of a "play script" event.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="event" rwaccess="readonly">
          <shortdesc>The event ID in four characters or a unique string that the notifier is associated with.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="eventFile" rwaccess="readonly">
          <shortdesc>The path to the file to execute when the event occurs/activates the notifier.</shortdesc>
          <datatype>
            <type href="$COMMON/javascript.xml#/File">File</type>
          </datatype>
        </property>
        <property name="eventClass" rwaccess="readonly">
          <shortdesc>The class ID associated with the event for the Notifier object, four characters or a unique string.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
      </elements>
    </classdef>
    <classdef name="CountItem" dynamic="true">
      <shortdesc>A counted item in the document. The count item feature is available in the Extended Version only.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="position" rwaccess="readonly">
          <shortdesc>The position of count item in the document.</shortdesc>
          <datatype>
            <type href="#/UnitPoint">UnitPoint</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/CountItem">CountItem</type>
          </datatype>
        </method>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
      </elements>
    </classdef>
    <classdef name="ColorSampler" dynamic="true">
      <shortdesc>A color sampler in a document.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="position" rwaccess="readonly">
          <shortdesc>The position of the color sampler in the document.</shortdesc>
          <datatype>
            <type href="#/UnitPoint">UnitPoint</type>
          </datatype>
        </property>
        <property name="color" rwaccess="readonly">
          <shortdesc>The color of the color sampler.</shortdesc>
          <datatype>
            <type href="#/SolidColor">SolidColor</type>
          </datatype>
        </property>
        <method name="add">
          <shortdesc>Adds an element.</shortdesc>
          <datatype>
            <type href="#/ColorSampler">ColorSampler</type>
          </datatype>
        </method>
        <method name="remove">
          <shortdesc>Deletes this object.</shortdesc>
        </method>
        <method name="removeAll">
          <shortdesc>Deletes all elements.</shortdesc>
        </method>
        <method name="move">
          <shortdesc>Moves the color sampler to a new location.</shortdesc>
          <parameters>
            <parameter name="position">
              <shortdesc>Position of destination (unit value)</shortdesc>
              <datatype>
                <type href="#/UnitPoint">UnitPoint</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
      </elements>
    </classdef>
    <classdef name="XMPMetadata" dynamic="true">
      <shortdesc>Camera raw image file settings stored in an XMP file in the same folder as the raw file with the same base name and an XMP extension.</shortdesc>
      <elements type="instance">
        <property name="parent" rwaccess="readonly">
          <shortdesc>The object's container.</shortdesc>
          <datatype>
            <type>Object</type>
          </datatype>
        </property>
        <property name="typename" rwaccess="readonly">
          <shortdesc>The class name of the object.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
        <property name="rawData">
          <shortdesc>The raw XML form of file information.</shortdesc>
          <datatype>
            <type>string</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Point" dynamic="true">
      <shortdesc>Describes a point. This class is also a two-element collection.</shortdesc>
      <elements type="instance">
        <property name="x">
          <shortdesc>The left coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="y">
          <shortdesc>The top coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="left">
          <shortdesc>The left coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="top">
          <shortdesc>The top coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>The array length.</shortdesc>
          <datatype>
            <type>number</type>
            <value>2</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="Rectangle" dynamic="true">
      <shortdesc>Describes a rectangle. This class is also a four-element collection.</shortdesc>
      <elements type="instance">
        <property name="x">
          <shortdesc>The left coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="y">
          <shortdesc>The top coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="width">
          <shortdesc>The width.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="height">
          <shortdesc>The height.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="left">
          <shortdesc>The left coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="right">
          <shortdesc>The right coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="top">
          <shortdesc>The top coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="bottom">
          <shortdesc>The bottom coordinate.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="length" rwaccess="readonly">
          <shortdesc>The array length.</shortdesc>
          <datatype>
            <type>number</type>
            <value>4</value>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="global" dynamic="true">
      <shortdesc>The global methods and properties.</shortdesc>
      <elements type="class">
        <property name="app" rwaccess="readonly">
          <shortdesc>The application object</shortdesc>
          <datatype>
            <type>Application</type>
          </datatype>
        </property>
        <property name="NaN">
          <shortdesc>The NaN global property is a predefined variable with the value NaN (Not-a-Number), as specified by the IEEE-754 standard.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="Infinity">
          <shortdesc>The Infinity global property is a predefined variable with the value for infinity.</shortdesc>
          <datatype>
            <type>number</type>
          </datatype>
        </property>
        <property name="undefined">
          <shortdesc>This global property is a predefined variable with the value for an undefined value.</shortdesc>
          <datatype>
            <type>Undefined</type>
          </datatype>
        </property>
        <method name="encodeURI">
          <shortdesc>Encodes a string after RFC2396.</shortdesc>
          <description>
            Create an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escape
            character of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*'();/?:@&amp;=+$,#. The method returns false on errors.
          </description>
          <parameters>
            <parameter name="text">
              <shortdesc>The text to encode.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="encodeURIComponent">
          <shortdesc>Encodes a string after RFC2396.</shortdesc>
          <description>
            Create an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escape
            character of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*'(). The method returns false on errors.
          </description>
          <parameters>
            <parameter name="text">
              <shortdesc>The text to encode.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="decodeURI">
          <shortdesc>
            Decodes a string created with&#160;<a href="#/global/instance/encodeURI">encodeURI()</a>.
          </shortdesc>
          <parameters>
            <parameter name="uri">
              <shortdesc>The text to decode.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="decodeURIComponent">
          <shortdesc>
            Decodes a string created with&#160;<a href="#/global/instance/encodeURIComponent">encodeURIComponent()</a>.
          </shortdesc>
          <parameters>
            <parameter name="uri">
              <shortdesc>The text to decode.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="escape">
          <shortdesc>Creates a URL-encoded string from aString.</shortdesc>
          <description>In the new string, characters of aString that require URL encoding are replaced with the format %xx, where xx is the hexadecimal value of the character code in the Unicode character set.  This format is used to transmit information appended to a URL during, for example, execution of the GET method.  Use the unescape() global function to translate the string back into its original format. Returns a string which is aString URL-encoded.</description>
          <parameters>
            <parameter name="aString">
              <shortdesc>The string to be encoded.</shortdesc>
              <description/>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
          <example>escape(aString)</example>
        </method>
        <method name="eval">
          <shortdesc>Evaluates its argument as a JavaScript script, and returns the result of evaluation.</shortdesc>
          <description>You can pass the result of an object's toSource() method to reconstruct that object.</description>
          <parameters>
            <parameter name="stringExpression">
              <shortdesc>The string to evaluate.</shortdesc>
              <description/>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>any</type>
          </datatype>
          <example>eval(stringExpression)</example>
        </method>
        <method name="uneval">
          <shortdesc>Creates a source code representation of the supplied argument, and returns it as a string.</shortdesc>
          <parameters>
            <parameter name="what">
              <shortdesc>The object to uneval.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <method name="isFinite">
          <shortdesc>Evaluates an expression and reports whether the result is a finite number.</shortdesc>
          <description>Returns true if the expression is a finite number, false otherwise. False if the value is infinity or negative infinity.</description>
          <parameters>
            <parameter name="expression">
              <shortdesc>Any valid JavaScript expression.</shortdesc>
              <description/>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
          <example>isFinite(expression)</example>
        </method>
        <method name="isNaN">
          <shortdesc>Evaluates an expression and reports whether the result is "Not-a-Number" (NaN).</shortdesc>
          <description>Returns true if the result of evaluation is not a number (NaN), false if the value is a number.</description>
          <parameters>
            <parameter name="expression">
              <shortdesc>Any valid JavaScript expression.</shortdesc>
              <description/>
              <datatype>
                <type>number</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
          <example>isNaN(expression)</example>
        </method>
        <method name="parseInt">
          <shortdesc>Extracts an integer from a string.</shortdesc>
          <description>Parses a string to find the first set of characters, in a specified base, that can be converted to an integer, and returns that integer, or NaN if it does not encounter characters that it can convert to a number.</description>
          <parameters>
            <parameter name="text">
              <shortdesc>The string from which to extract an integer.</shortdesc>
              <description/>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="base" optional="true">
              <shortdesc>The base of the string to parse (from base 2 to base 36).</shortdesc>
              <description>If not supplied, base is determined by the format of string.</description>
              <datatype>
                <type>number</type>
                <min>2</min>
                <max>36</max>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>number</type>
          </datatype>
          <example>parseInt(aString, base)</example>
        </method>
        <method name="parseFloat">
          <shortdesc>Extracts a floating-point number from a string.</shortdesc>
          <description>Parses a string to find the first set of characters that can be converted to a floating point number, and returns that number, or NaN if it does not encounter characters that it can converted to a number.  The function supports exponential notation.</description>
          <parameters>
            <parameter name="text">
              <shortdesc>The string from which to extract a floating point number.</shortdesc>
              <description/>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>number</type>
          </datatype>
          <example>parseFloat(aString)</example>
        </method>
        <method name="unescape">
          <shortdesc>Translates URL-encoded string into a regular string, and returns that string.</shortdesc>
          <description>Use the escape() global function to URL-encode strings.</description>
          <parameters>
            <parameter name="stringExpression">
              <shortdesc>The URL-encoded string to convert.</shortdesc>
              <description/>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
          <example>unescape(stringExpression)</example>
        </method>
        <method name="localize">
          <shortdesc>Localizes a ZString-encoded string and merges additional arguments into the string.</shortdesc>
          <parameters>
            <parameter name="what">
              <shortdesc>The string to localize. A ZString-encoded string that can contain placeholder for additional arguments in the form %1 to %n.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="argument" optional="true">
              <shortdesc>Optional argument(s) to be merged into the string.</shortdesc>
              <datatype>
                <type>any</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>

        <method name="isXMLName">
          <shortdesc>Returns true is the supplied string is a valid XML name.</shortdesc>
          <parameters>
            <parameter name="name">
              <shortdesc>The XML name to test.</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="setDefaultXMLNamespace">
          <shortdesc>Defines the default XML namespace.</shortdesc>
          <description>
            This is a replacement function for the standard JavaScript statement<font face="_typewriter">&#160;set default xml namespace</font>.
          </description>
          <parameters>
            <parameter name="namespace">
              <shortdesc>The namespace to use.</shortdesc>
              <description>
                Omit this parameter to return to the empty namespace. This is either a&#160;<a href="#/Namespace">Namespace</a>&#160;object or a string.
              </description>
              <datatype>
                <type href="#/Namespace">Namespace</type>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="alert">
          <shortdesc>Displays an alert box</shortdesc>
          <parameters>
            <parameter name="message">
              <shortdesc>The text to display</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="title" optional="true">
              <shortdesc>The title of the alert; ignored on the Macintosh</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="errorIcon">
              <shortdesc>Display an Error icon; ignored on the Macintosh</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
          </parameters>
        </method>
        <method name="confirm">
          <shortdesc>Displays an alert box with Yes and No buttons; returns true for Yes</shortdesc>
          <parameters>
            <parameter name="message">
              <shortdesc>The text to display</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="noAsDefault">
              <shortdesc>Set to true to set the No button as the default button</shortdesc>
              <datatype>
                <type>bool</type>
                <value>false</value>
              </datatype>
            </parameter>
            <parameter name="title" optional="true">
              <shortdesc>The title of the alert; ignored on the Macintosh</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>bool</type>
          </datatype>
        </method>
        <method name="prompt">
          <shortdesc>Displays a dialog allowing the user to enter text</shortdesc>
          <description>Returns null if the user cancelled the dialog, the text otherwise</description>
          <parameters>
            <parameter name="prompt">
              <shortdesc>The text to display</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="default" optional="true">
              <shortdesc>The default text to preset the edit field with</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
            <parameter name="title" optional="true">
              <shortdesc>The title of the dialog;</shortdesc>
              <datatype>
                <type>string</type>
              </datatype>
            </parameter>
          </parameters>
          <datatype>
            <type>string</type>
          </datatype>
        </method>
        <property name="BridgeTalk">
          <shortdesc>The global BridgeTalk object.</shortdesc>
          <datatype>
            <type>BridgeTalk</type>
          </datatype>
        </property>
      </elements>
    </classdef>
    <classdef name="ElementPlacement" enumeration="true">
      <shortdesc>Controls where Photoshop places an element.</shortdesc>
      <elements type="class">
        <property name="PLACEAFTER" rwaccess="readonly">
          <shortdesc>Place after an element.</shortdesc>
          <datatype>
            <type>int</type>
            <value>1</value>
          </datatype>
        </property>
        <property name="PLACEBEFORE" rwaccess="readonly">
          <shortdesc>Place before an element.</shortdesc>
          <datatype>
            <type>int</type>
            <value>2</value>
          </datatype>
        </property>
        <property name="PLACEATEND" rwaccess="readonly">
          <shortdesc>Place an element at the end.</shortdesc>
          <datatype>
            <type>int</type>
            <value>3</value>
          </datatype>
        </property>
      </elements>
    </classdef>
  </package>
</dictionary>